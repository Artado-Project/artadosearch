<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.SqlClient</name>
  </assembly>
  <members>
    <member name="T:Microsoft.SqlServer.Server.SqlDataRecord">
      <summary>単一行のデータおよびそのメタデータを表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.#ctor(Microsoft.SqlServer.Server.SqlMetaData[])">
      <summary>引数として渡された <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> オブジェクトの配列に基づくスキーマを使用して、新しい <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> インスタンスを初期化します。</summary>
      <param name="metaData">
        <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> の各列を表す <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> オブジェクトの配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="metaData" /> は null です。</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount">
      <summary>データ行の列数を取得します。このプロパティは読み取り専用です。</summary>
      <returns>データ行の列数を表す整数値。</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetBoolean(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Boolean" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Boolean" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> で指定された列が null です。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetByte(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Byte" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Byte" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> で指定された列が null です。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Byte" /> オブジェクトの配列として取得します。</summary>
      <returns>コピーされたバイト数</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="fieldOffset">フィールド値のオフセット (取得するバイトの開始位置)。</param>
      <param name="buffer">バイトのコピー先バッファー。</param>
      <param name="bufferOffset">バッファー内のオフセット (バイトのコピー開始位置)。</param>
      <param name="length">バッファーにコピーするバイト数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> で指定された列が null です。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetChar(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Char" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Char" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> で指定された列が null です。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Char" /> オブジェクトの配列として取得します。</summary>
      <returns>コピーされた文字数。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="fieldOffset">フィールド値のオフセット (取得する文字の開始位置)。</param>
      <param name="buffer">文字のコピー先バッファー。</param>
      <param name="bufferOffset">バッファー内のオフセット (文字のコピー開始位置)。</param>
      <param name="length">バッファーにコピーする文字数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> で指定された列が null です。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDataTypeName(System.Int32)">
      <summary>列の序数を引数として受け取り、対応する列のデータ型名を返します。</summary>
      <returns>列のデータ型を格納している <see cref="T:System.String" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDateTime(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.DateTime" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.DateTime" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> で指定された列が null です。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDateTimeOffset(System.Int32)">
      <summary>指定した列のデータを <see cref="T:System.DateTimeOffset" /> として返します。</summary>
      <returns>指定した列の <see cref="T:System.DateTimeOffset" /> としての値。</returns>
      <param name="ordinal">インデックス番号が 0 から始まる列序数。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDecimal(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Decimal" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Decimal" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> で指定された列が null です。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDouble(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Double" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Double" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> で指定された列が null です。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetFieldType(System.Int32)">
      <summary>
        <paramref name="ordinal" /> 引数で指定された列について、その SQL Server データ型に対応する共通言語ランタイム (CLR) のデータ型を <see cref="T:System.Type" /> オブジェクトとして返します。</summary>
      <returns>列の型を表す <see cref="T:System.Type" /> オブジェクト。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.TypeLoadException">列の型に、呼び出し元のアプリケーション ドメインでは利用できないユーザー定義型が使用されています。</exception>
      <exception cref="T:System.IO.FileNotFoundException">列の型に、呼び出し元のアプリケーション ドメインでは利用できないユーザー定義型が使用されています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetFloat(System.Int32)">
      <summary>序数で指定された列の値を float として取得します。</summary>
      <returns>列値の float 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> で指定された列が null です。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetGuid(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Guid" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Guid" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> で指定された列が null です。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt16(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Int16" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Int16" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> で指定された列が null です。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt32(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Int32" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Int32" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> で指定された列が null です。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt64(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Int64" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Int64" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> で指定された列が null です。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetName(System.Int32)">
      <summary>列の序数を引数として受け取り、対応する列の名前を返します。</summary>
      <returns>列名を保持する <see cref="T:System.String" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetOrdinal(System.String)">
      <summary>列名を引数に受け取り、対応する列の序数を返します。</summary>
      <returns>列の 0 から始まる序数 (整数)。</returns>
      <param name="name">検索する列の名前。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> は null なので、</exception>
      <exception cref="T:System.IndexOutOfRangeException">列名が見つかりませんでした。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBinary(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlBinary" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlBinary" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBoolean(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlByte(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlByte" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlByte" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBytes(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlBytes" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlBytes" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlChars(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlChars" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlChars" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDateTime(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlDateTime" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDecimal(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDouble(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlDouble" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlDouble" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlFieldType(System.Int32)">
      <summary>SQL Server の列型 (<see cref="N:System.Data.SqlTypes" /> で定義されている SQL Server のデータ型) に対応するデータ型を表す <see cref="T:System.Type" /> オブジェクトを返します。</summary>
      <returns>列の型を表す <see cref="T:System.Type" /> オブジェクト。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.TypeLoadException">列の型に、呼び出し元のアプリケーション ドメインでは利用できないユーザー定義型が使用されています。</exception>
      <exception cref="T:System.IO.FileNotFoundException">列の型に、呼び出し元のアプリケーション ドメインでは利用できないユーザー定義型が使用されています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlGuid(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlGuid" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlGuid" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt16(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlInt16" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlInt16" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt32(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlInt32" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlInt32" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt64(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlInt64" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlInt64" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMetaData(System.Int32)">
      <summary>列の序数を引数として受け取り、対応する列のメタデータを表す <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> オブジェクトを返します。</summary>
      <returns>列のメタデータを表す <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> オブジェクト。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMoney(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlMoney" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlMoney" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlSingle(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlSingle" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlString(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlString" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlString" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValue(System.Int32)">
      <summary>列の序数を引数として受け取り、対応する列に SQL Server のデータ型表現で格納されているデータ値を返します。</summary>
      <returns>SQL Server のデータ型表現で格納された列の値を、<see cref="T:System.Object" /> として返します。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValues(System.Object[])">
      <summary>レコードを構成するすべての列について、SQL Server のデータ型表現で格納されている値を配列として返します。</summary>
      <returns>コピーされる列の数を示す <see cref="T:System.Int32" />。</returns>
      <param name="values">列の値をコピーする配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> は null なので、</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlXml(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.Data.SqlTypes.SqlXml" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.Data.SqlTypes.SqlXml" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetString(System.Int32)">
      <summary>序数で指定された列の値を <see cref="T:System.String" /> として取得します。</summary>
      <returns>列値の <see cref="T:System.String" /> 表現。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetTimeSpan(System.Int32)">
      <summary>指定した列のデータを <see cref="T:System.TimeSpan" /> として返します。</summary>
      <returns>指定した列の <see cref="T:System.TimeSpan" /> としての値。</returns>
      <param name="ordinal">インデックス番号が 0 から始まる列序数。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetValue(System.Int32)">
      <summary>列の序数を引数として受け取り、対応する列の共通言語ランタイム (CLR) 型の値を返します。</summary>
      <returns>序数で指定された列の CLR 型の値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetValues(System.Object[])">
      <summary>レコードを構成するすべての列について、共通言語ランタイム (CLR) のデータ型表現で格納されている値を配列として返します。</summary>
      <returns>コピーされる列の数を示す <see cref="T:System.Int32" />。</returns>
      <param name="values">列の値をコピーする配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> は null なので、</exception>
      <exception cref="T:System.InvalidCastException">型が一致していません。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.IsDBNull(System.Int32)">
      <summary>列の序数をパラメーターとして受け取り、対応する列が null の場合に true を返します。</summary>
      <returns>列 が null の場合は true。それ以外の場合は false。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.Item(System.Int32)">
      <summary>
        <paramref name="ordinal" /> 引数で指定された列の共通言語ランタイム (CLR) 型の値を取得します。</summary>
      <returns>
        <paramref name="ordinal" /> で指定された列の CLR 型の値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.Item(System.String)">
      <summary>
        <paramref name="name" /> 引数で指定された列の共通言語ランタイム (CLR) 型の値を取得します。</summary>
      <returns>
        <paramref name="name" /> で指定された列の CLR 型の値。</returns>
      <param name="name">列の名前。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetBoolean(System.Int32,System.Boolean)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Boolean" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetByte(System.Int32,System.Byte)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Byte" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Byte" /> 値の配列に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="fieldOffset">フィールド値のオフセット (バイトのコピーを開始する位置)。</param>
      <param name="buffer">バイトのコピー元バッファー。</param>
      <param name="bufferOffset">バッファー内のオフセット (バイトのコピー開始位置)。</param>
      <param name="length">バッファーからコピーするバイト数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetChar(System.Int32,System.Char)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Char" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Char" /> 値の配列に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="fieldOffset">フィールド値のオフセット (文字のコピーを開始する位置)。</param>
      <param name="buffer">文字のコピー元バッファー。</param>
      <param name="bufferOffset">バッファー内のオフセット (文字のコピー開始位置)。</param>
      <param name="length">バッファーからコピーする文字数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDateTime(System.Int32,System.DateTime)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.DateTime" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDateTimeOffset(System.Int32,System.DateTimeOffset)">
      <summary>指定した列の値を <see cref="T:System.DateTimeOffset" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDBNull(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.DBNull" /> に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDecimal(System.Int32,System.Decimal)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Decimal" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDouble(System.Int32,System.Double)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Double" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetFloat(System.Int32,System.Single)">
      <summary>列に格納されたデータを、指定された float 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetGuid(System.Int32,System.Guid)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Guid" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt16(System.Int32,System.Int16)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Int16" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt32(System.Int32,System.Int32)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Int32" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt64(System.Int32,System.Int64)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Int64" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlBinary" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlByte" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBytes(System.Int32,System.Data.SqlTypes.SqlBytes)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlBytes" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlChars(System.Int32,System.Data.SqlTypes.SqlChars)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlChars" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlDouble" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlGuid" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlInt16" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlInt32" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlInt64" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlMoney" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlSingle" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlString" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlXml(System.Int32,System.Data.SqlTypes.SqlXml)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.Data.SqlTypes.SqlXml" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetString(System.Int32,System.String)">
      <summary>列に格納されたデータを、指定された <see cref="T:System.String" /> 値に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetTimeSpan(System.Int32,System.TimeSpan)">
      <summary>指定した列の値を <see cref="T:System.TimeSpan" /> に設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">渡された <paramref name="ordinal" /> が負数です。</exception>
      <exception cref="T:System.ArgumentException">渡された <see cref="T:System.TimeSpan" /> 値の長さが 24 時間を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValue(System.Int32,System.Object)">
      <summary>列の序数を引数として受け取り、対応する列の新しい値を共通言語ランタイム (CLR) のデータ型表現で設定します。</summary>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="value">指定した列の新しい値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> が 0 未満か、列数 (<see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />) を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValues(System.Object[])">
      <summary>
        <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 内のすべての列に新しい値を設定します。これらの値は、共通言語ランタイム (CLR) のデータ型として表現されます。</summary>
      <returns>設定された列値の数 (整数)。</returns>
      <param name="values">
        <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> のインスタンスに設定する新しい値の配列。<see cref="T:System.Object" /> の参照としてボックス化された CLR のデータ型表現を使用します。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> は null なので、</exception>
      <exception cref="T:System.ArgumentException">値のサイズが、<see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> インスタンスの列数と一致しません。</exception>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlMetaData">
      <summary>
        <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> オブジェクトのパラメーターおよび列からメタデータ情報を指定して取得します。このクラスは継承できません。</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)">
      <summary>指定された列名と型で <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">列の名前。</param>
      <param name="dbType">パラメーターまたは列の SQL Server データ型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" /> は null です。</exception>
      <exception cref="T:System.ArgumentException">使用できない SqlDbType が <paramref name="dbType" /> としてコンストラクターに渡されました。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>指定された列名とサーバーの既定値で <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> クラスの新しいインスタンスを初期化します。この形式のコンストラクターでは、列がテーブル値パラメーターで一意かどうか、列の並べ替え順序、および並べ替え列の序数の指定を可能にすることにより、テーブル値パラメーターをサポートしています。</summary>
      <param name="name">列の名前。</param>
      <param name="dbType">パラメーターまたは列の SQL Server データ型。</param>
      <param name="useServerDefault">この列がサーバーの既定値を使用する必要があるかどうかを指定します。</param>
      <param name="isUniqueKey">テーブル値パラメーターの列が一意かどうかを指定します。</param>
      <param name="columnSortOrder">列の並べ替え順序を指定します。</param>
      <param name="sortOrdinal">並べ替え列の序数を示します。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)">
      <summary>指定された列名、型、有効桁数、および小数点以下桁数で <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">パラメーターまたは列の名前。</param>
      <param name="dbType">パラメーターまたは列の SQL Server データ型。</param>
      <param name="precision">パラメーターまたは列の有効桁数。</param>
      <param name="scale">パラメーターまたは列の小数点以下桁数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" /> は null です。</exception>
      <exception cref="T:System.ArgumentException">使用できない SqlDbType が <paramref name="dbType" /> としてコンストラクターに渡されたか、<paramref name="scale" /> が <paramref name="precision" /> を超えています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>指定された列名、型、有効桁数、小数点以下桁数、およびサーバーの既定値で <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> クラスの新しいインスタンスを初期化します。この形式のコンストラクターでは、列がテーブル値パラメーターで一意かどうか、列の並べ替え順序、および並べ替え列の序数の指定を可能にすることにより、テーブル値パラメーターをサポートしています。</summary>
      <param name="name">列の名前。</param>
      <param name="dbType">パラメーターまたは列の SQL Server データ型。</param>
      <param name="precision">パラメーターまたは列の有効桁数。</param>
      <param name="scale">パラメーターまたは列の小数点以下桁数。</param>
      <param name="useServerDefault">この列がサーバーの既定値を使用する必要があるかどうかを指定します。</param>
      <param name="isUniqueKey">テーブル値パラメーターの列が一意かどうかを指定します。</param>
      <param name="columnSortOrder">列の並べ替え順序を指定します。</param>
      <param name="sortOrdinal">並べ替え列の序数を示します。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)">
      <summary>指定された列名、型、および最大長で <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">列の名前。</param>
      <param name="dbType">パラメーターまたは列の SQL Server データ型。</param>
      <param name="maxLength">指定された型の最大長。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" /> は null です。</exception>
      <exception cref="T:System.ArgumentException">使用できない SqlDbType が <paramref name="dbType" /> としてコンストラクターに渡されました。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>指定された列名、型、最大長、およびサーバーの既定値で <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> クラスの新しいインスタンスを初期化します。この形式のコンストラクターでは、列がテーブル値パラメーターで一意かどうか、列の並べ替え順序、および並べ替え列の序数の指定を可能にすることにより、テーブル値パラメーターをサポートしています。</summary>
      <param name="name">列の名前。</param>
      <param name="dbType">パラメーターまたは列の SQL Server データ型。</param>
      <param name="maxLength">指定された型の最大長。</param>
      <param name="useServerDefault">この列がサーバーの既定値を使用する必要があるかどうかを指定します。</param>
      <param name="isUniqueKey">テーブル値パラメーターの列が一意かどうかを指定します。</param>
      <param name="columnSortOrder">列の並べ替え順序を指定します。</param>
      <param name="sortOrdinal">並べ替え列の序数を示します。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)">
      <summary>指定された列名、型、最大長、有効桁数、小数点以下桁数、ロケール ID、比較オプション、およびユーザー定義型 (UDT) で <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">列の名前。</param>
      <param name="dbType">パラメーターまたは列の SQL Server データ型。</param>
      <param name="maxLength">指定された型の最大長。</param>
      <param name="precision">パラメーターまたは列の有効桁数。</param>
      <param name="scale">パラメーターまたは列の小数点以下桁数。</param>
      <param name="locale">パラメーターまたは列のロケール ID。</param>
      <param name="compareOptions">パラメーターまたは列の比較規則。</param>
      <param name="userDefinedType">UDT を指す <see cref="T:System.Type" /> のインスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" /> は null です。</exception>
      <exception cref="T:System.ArgumentException">使用できない SqlDbType が <paramref name="dbType" /> としてコンストラクターに渡されたか、<paramref name="userDefinedType" /> が、<see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> の宣言されていない型を指しています。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>指定された列名、型、最大長、有効桁数、小数点以下桁数、ロケール ID、比較オプション、およびユーザー定義型 (UDT) で <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> クラスの新しいインスタンスを初期化します。この形式のコンストラクターでは、列がテーブル値パラメーターで一意かどうか、列の並べ替え順序、および並べ替え列の序数の指定を可能にすることにより、テーブル値パラメーターをサポートしています。</summary>
      <param name="name">列の名前。</param>
      <param name="dbType">パラメーターまたは列の SQL Server データ型。</param>
      <param name="maxLength">指定された型の最大長。</param>
      <param name="precision">パラメーターまたは列の有効桁数。</param>
      <param name="scale">パラメーターまたは列の小数点以下桁数。</param>
      <param name="localeId">パラメーターまたは列のロケール ID。</param>
      <param name="compareOptions">パラメーターまたは列の比較規則。</param>
      <param name="userDefinedType">UDT を指す <see cref="T:System.Type" /> のインスタンス。</param>
      <param name="useServerDefault">この列がサーバーの既定値を使用する必要があるかどうかを指定します。</param>
      <param name="isUniqueKey">テーブル値パラメーターの列が一意かどうかを指定します。</param>
      <param name="columnSortOrder">列の並べ替え順序を指定します。</param>
      <param name="sortOrdinal">並べ替え列の序数を示します。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>指定された列名、型、最大長、ロケール、および比較オプションで <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">パラメーターまたは列の名前。</param>
      <param name="dbType">パラメーターまたは列の SQL Server データ型。</param>
      <param name="maxLength">指定された型の最大長。</param>
      <param name="locale">パラメーターまたは列のロケール ID。</param>
      <param name="compareOptions">パラメーターまたは列の比較規則。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" /> は null です。</exception>
      <exception cref="T:System.ArgumentException">使用できない SqlDbType が <paramref name="dbType" /> としてコンストラクターに渡されました。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>指定された列名、型、最大長、ロケール、比較オプション、およびサーバーの既定値で <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> クラスの新しいインスタンスを初期化します。この形式のコンストラクターでは、列がテーブル値パラメーターで一意かどうか、列の並べ替え順序、および並べ替え列の序数の指定を可能にすることにより、テーブル値パラメーターをサポートしています。</summary>
      <param name="name">列の名前。</param>
      <param name="dbType">パラメーターまたは列の SQL Server データ型。</param>
      <param name="maxLength">指定された型の最大長。</param>
      <param name="locale">パラメーターまたは列のロケール ID。</param>
      <param name="compareOptions">パラメーターまたは列の比較規則。</param>
      <param name="useServerDefault">この列がサーバーの既定値を使用する必要があるかどうかを指定します。</param>
      <param name="isUniqueKey">テーブル値パラメーターの列が一意かどうかを指定します。</param>
      <param name="columnSortOrder">列の並べ替え順序を指定します。</param>
      <param name="sortOrdinal">並べ替え列の序数を示します。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)">
      <summary>指定された列名、型、データベース名、所有スキーマ、およびオブジェクト名で <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">列の名前。</param>
      <param name="dbType">パラメーターまたは列の SQL Server データ型。</param>
      <param name="database">型指定された XML インスタンスの XML スキーマ コレクションのデータベース名。</param>
      <param name="owningSchema">型指定された XML インスタンスの XML スキーマ コレクションのリレーショナル スキーマ名。</param>
      <param name="objectName">型指定された XML インスタンスの XML スキーマ コレクションの名前。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" /> が null であるか、<paramref name="database" /> と <paramref name="owningSchema" /> が null 以外の場合、<paramref name="objectName" /> が null です。</exception>
      <exception cref="T:System.ArgumentException">使用できない SqlDbType が <paramref name="dbType" /> としてコンストラクターに渡されました。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>指定された列名、データベース名、所有スキーマ、オブジェクト名、およびサーバーの既定値で <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> クラスの新しいインスタンスを初期化します。この形式のコンストラクターでは、列がテーブル値パラメーターで一意かどうか、列の並べ替え順序、および並べ替え列の序数の指定を可能にすることにより、テーブル値パラメーターをサポートしています。</summary>
      <param name="name">列の名前。</param>
      <param name="dbType">パラメーターまたは列の SQL Server データ型。</param>
      <param name="database">型指定された XML インスタンスの XML スキーマ コレクションのデータベース名。</param>
      <param name="owningSchema">型指定された XML インスタンスの XML スキーマ コレクションのリレーショナル スキーマ名。</param>
      <param name="objectName">型指定された XML インスタンスの XML スキーマ コレクションの名前。</param>
      <param name="useServerDefault">この列がサーバーの既定値を使用する必要があるかどうかを指定します。</param>
      <param name="isUniqueKey">テーブル値パラメーターの列が一意かどうかを指定します。</param>
      <param name="columnSortOrder">列の並べ替え順序を指定します。</param>
      <param name="sortOrdinal">並べ替え列の序数を示します。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Boolean)">
      <summary>指定された <see cref="T:System.Boolean" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Boolean" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte)">
      <summary>指定された <see cref="T:System.Byte" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Byte" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte[])">
      <summary>指定された <see cref="T:System.Byte" /> 値の配列をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Byte" /> 値の配列。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char)">
      <summary>指定された <see cref="T:System.Char" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Char" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char[])">
      <summary>指定された <see cref="T:System.Char" /> 値の配列をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Char" /> 値の配列。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlBinary" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlBinary" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlByte" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlByte" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlBytes" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlBytes" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlChars" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlChars" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlDouble" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlDouble" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlGuid" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlGuid" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlInt16" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlInt16" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlInt32" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlInt32" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlInt64" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlInt64" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlMoney" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlMoney" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlSingle" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlSingle" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlString" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlString" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlXml" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Data.SqlTypes.SqlXml" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTime)">
      <summary>指定された <see cref="T:System.DateTime" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.DateTime" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTimeOffset)">
      <summary>指定された <see cref="T:System.DateTimeOffset" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.DateTimeOffset" /> 値の配列。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Decimal)">
      <summary>指定された <see cref="T:System.Decimal" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Decimal" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Double)">
      <summary>指定された <see cref="T:System.Double" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Double" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Guid)">
      <summary>指定された <see cref="T:System.Guid" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Guid" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int16)">
      <summary>指定された <see cref="T:System.Int16" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Int16" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int32)">
      <summary>指定された <see cref="T:System.Int32" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Int32" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int64)">
      <summary>指定された <see cref="T:System.Int64" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Int64" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Object)">
      <summary>指定された <see cref="T:System.Object" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Object" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Single)">
      <summary>指定された <see cref="T:System.Single" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.Single" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.String)">
      <summary>指定された <see cref="T:System.String" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.String" /> 値。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.TimeSpan)">
      <summary>指定された <see cref="T:System.TimeSpan" /> 値をメタデータと照らし合わせて検証し、その値を必要に応じて調整します。</summary>
      <returns>調整された値を表す <see cref="T:System.TimeSpan" /> 値の配列。</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスと照らし合わせて検証する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> が <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> の型と一致しないか、<paramref name="value" /> を調整できませんでした。</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.CompareOptions">
      <summary>列またはパラメーターに適用される比較規則を取得します。</summary>
      <returns>列またはパラメーターに適用される比較規則を表す <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />。</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.InferFromValue(System.Object,System.String)">
      <summary>指定されたオブジェクトからメタデータを推論し、それを <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスとして返します。</summary>
      <returns>推論されたメタデータを表す <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンス。</returns>
      <param name="value">メタデータの推論に使用するオブジェクト。</param>
      <param name="name">返された <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> のインスタンスに割り当てる名前。</param>
      <exception cref="T:System.ArgumentNullException">v<paramref name="alue" /> が null です。</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.IsUniqueKey">
      <summary>テーブル値パラメーターの列が一意かどうかを示します。</summary>
      <returns>Boolean 値。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.LocaleId">
      <summary>列またはパラメーターのロケール ID を取得します。</summary>
      <returns>列またはパラメーターのロケール ID を表す <see cref="T:System.Int64" />。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Max">
      <summary>text、ntext、image の各データ型の長さを取得します。</summary>
      <returns>text、ntext、image の各データ型の長さ。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.MaxLength">
      <summary>列またはパラメーターの最大長を取得します。</summary>
      <returns>列またはパラメーターの最大長を表す <see cref="T:System.Int64" />。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Name">
      <summary>列またはパラメーターの名前を取得します。</summary>
      <returns>列またはパラメーターの名前を表す <see cref="T:System.String" />。</returns>
      <exception cref="T:System.InvalidOperationException">コンストラクターに指定された <paramref name="Name" /> が 128 文字を超えています。</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Precision">
      <summary>列またはパラメーターの有効桁数を取得します。</summary>
      <returns>列またはパラメーターの有効桁数を表す <see cref="T:System.Byte" />。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Scale">
      <summary>列またはパラメーターの小数点以下桁数を取得します。</summary>
      <returns>列またはパラメーターの小数点以下桁数。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SortOrder">
      <summary>列の並べ替え順序を返します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SortOrder" /> オブジェクト。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SortOrdinal">
      <summary>並べ替え列の序数を返します。</summary>
      <returns>並べ替え列の序数。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SqlDbType">
      <summary>列またはパラメーターのデータ型を取得します。</summary>
      <returns>列またはパラメーターのデータ型を表す <see cref="T:System.Data.DbType" />。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.TypeName">
      <summary>インスタンスによって表されるユーザー定義型 (UDT) または SQL Server データ型の、3 つの部分で構成される名前を取得します。</summary>
      <returns>UDT または SQL Server データ型の名前を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.UseServerDefault">
      <summary>この列がサーバーの既定値を使用する必要があるかどうかを報告します。</summary>
      <returns>Boolean 値。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionDatabase">
      <summary>この XML インスタンスのスキーマ コレクションが置かれているデータベースの名前を取得します。</summary>
      <returns>この XML インスタンスのスキーマ コレクションが置かれているデータベースの名前を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionName">
      <summary>この XML インスタンスに対応するスキーマ コレクションの名前を取得します。</summary>
      <returns>この XML インスタンスに対応するスキーマ コレクションの名前を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionOwningSchema">
      <summary>この XML インスタンスのスキーマ コレクションが置かれている所有リレーショナル スキーマを取得します。</summary>
      <returns>この XML インスタンスのスキーマ コレクションが置かれている所有リレーショナル スキーマを表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> で使用するフィールド (プロパティ) のデータ型として、SQL Server に固有のデータ型を指定します。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary>
        <see cref="T:System.Int64" />.64 ビット符号付き整数</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary>
        <see cref="T:System.Byte" /> 型の <see cref="T:System.Array" />。1 から 8,000 バイトまでの範囲内のバイナリ データの固定長ストリーム。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary>
        <see cref="T:System.Boolean" />.0、1、または null である符号なし数値。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary>
        <see cref="T:System.String" />.1 から 8,000 文字までの範囲内の非 Unicode 文字の固定長ストリーム。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary>AD 1 年 1 月 1 日から AD 9999 年 12 月 31 日までの日付のデータ。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary>
        <see cref="T:System.DateTime" />.1753 年 1 月 1 日から 9999 年 12 月 31 日までの範囲で、精度 3.33 ミリ秒の日付と時刻のデータ。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary>日付と時刻のデータ。日付の値の範囲は、AD 1 年 1 月 1 日から AD 9999 年 12 月 31 日です。時刻の値の範囲は、00:00:00 から 23:59:59.9999999 で、精度は 100 ナノ秒です。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary>タイム ゾーンに対応した日付と時刻。日付の値の範囲は、AD 1 年 1 月 1 日から AD 9999 年 12 月 31 日です。時刻の値の範囲は、00:00:00 から 23:59:59.9999999 で、精度は 100 ナノ秒です。タイム ゾーンの値の範囲は、-14:00 から +14:00 です。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary>
        <see cref="T:System.Decimal" />.-10 38 -1 から 10 38 -1 までの範囲内の固定精度小数部桁数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary>
        <see cref="T:System.Double" />.-1.79E +308 から 1.79E +308 までの範囲内の浮動小数点数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary>
        <see cref="T:System.Byte" /> 型の <see cref="T:System.Array" />。0 バイトから 2 31 -1 (または 2,147,483,647) バイトまでの範囲内のバイナリ データの可変長ストリーム。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary>
        <see cref="T:System.Int32" />.32 ビット符号付き整数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary>
        <see cref="T:System.Decimal" />.精度が通貨単位の 1/10,000 の、-2 63 (-9,223,372,036,854,775,808) から 2 63 -1 (+9,223,372,036,854,775,807) までの範囲内の通貨値。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary>
        <see cref="T:System.String" />.1 から 4,000 文字までの範囲内の Unicode 文字の固定長ストリーム。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary>
        <see cref="T:System.String" />.最大長が 2 30 -1 (1,073,741,823) 文字の Unicode データの可変長ストリーム。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary>
        <see cref="T:System.String" />.1 から 4,000 文字までの範囲内の Unicode 文字の可変長ストリーム。文字列が 4,000 文字を超える場合は、暗黙の型変換が失敗します。4,000 文字を超える文字列を使用する場合は、明示的にオブジェクトを設定します。データベース列が nvarchar(max) の場合、<see cref="F:System.Data.SqlDbType.NVarChar" /> を使用します。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary>
        <see cref="T:System.Single" />.-3.40E +38 から 3.40E +38 までの範囲内の浮動小数点数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary>
        <see cref="T:System.DateTime" />.1900 年 1 月 1 日から 2079 年 6 月 6 日までの範囲内で、精度 1 分の日付と時刻のデータ。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary>
        <see cref="T:System.Int16" />.16 ビット符号付き整数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary>
        <see cref="T:System.Decimal" />.精度が通貨単位の 1/10,000 の、-214,748.3648 から +214,748.3647 までの範囲内の通貨値。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary>テーブル値パラメーターに含まれる構造化データを指定するための特別なデータ型。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary>
        <see cref="T:System.String" />.最大長が 2 31 -1 (2,147,483,647) 文字の非 Unicode データの可変長ストリーム。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary>24 時間表記に基づく時間データ。時刻の値の範囲は、00:00:00 から 23:59:59.9999999 で、精度は 100 ナノ秒です。SQL Server time 値に対応します。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary>
        <see cref="T:System.Byte" /> 型の <see cref="T:System.Array" />。自動的に生成されるバイナリ数値。データベース内で一意であることが保証されます。timestamp は通常、テーブルの行にバージョンを記録するためのメカニズムとして使用されます。格納サイズは 8 バイトです。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary>
        <see cref="T:System.Byte" />.8 ビット符号なし整数。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary>SQL Server ユーザー定義型 (UDT)。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary>
        <see cref="T:System.Guid" />.グローバル一意識別子 (GUID)。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary>
        <see cref="T:System.Byte" /> 型の <see cref="T:System.Array" />。1 から 8,000 バイトの範囲内のバイナリ データの可変長ストリーム。バイト配列が 8,000 バイトを超える場合は、暗黙の型変換が失敗します。8,000 バイトを超えるバイト配列を使用するときは、オブジェクトを明示的に設定します。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary>
        <see cref="T:System.String" />.1 から 8,000 文字の範囲内の非 Unicode 文字の可変長ストリーム。データベース列が varchar(max) の場合、<see cref="F:System.Data.SqlDbType.VarChar" /> を使用します。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary>
        <see cref="T:System.Object" />.数値、文字列、バイナリ、日付の各データのほか、SQL Server の値である Empty と Null を格納できる特殊なデータ型。他の型が宣言されていない場合はこのデータ型であると見なされます。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary>XML 値。<see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> メソッドまたは <see cref="P:System.Data.SqlTypes.SqlXml.Value" /> プロパティを使用して、XML を文字列として取得します。または、<see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" /> メソッドを呼び出して、XML を <see cref="T:System.Xml.XmlReader" /> として取得します。</summary>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary>
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> イベントの追加情報を提供します。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary>
        <see cref="T:System.Data.StatementCompletedEventArgs" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="recordCount">
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> イベントが発生する原因となったステートメントの影響を受けた行の数を示します。</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary>
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> イベントが発生する原因となったステートメントの影響を受けた行の数を示します。</summary>
      <returns>影響を受けた行数。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary>
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> イベントのイベント ハンドラーのデリゲート型。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.ApplicationIntent">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent" /> の値を指定します。使用可能な値は ReadWrite と ReadOnly です。</summary>
    </member>
    <member name="F:System.Data.SqlClient.ApplicationIntent.ReadOnly">
      <summary>サーバーへの接続が読み取り専用である場合のアプリケーション ワークロードの種類。</summary>
    </member>
    <member name="F:System.Data.SqlClient.ApplicationIntent.ReadWrite">
      <summary>サーバーへの接続が読み取り/書き込みである場合のアプリケーション ワークロードの種類。</summary>
    </member>
    <member name="T:System.Data.SqlClient.SortOrder">
      <summary>データの行の並べ替え方法を指定します。</summary>
    </member>
    <member name="F:System.Data.SqlClient.SortOrder.Ascending">
      <summary>行は昇順に並べ替えられます。</summary>
    </member>
    <member name="F:System.Data.SqlClient.SortOrder.Descending">
      <summary>行は降順に並べ替えられます。</summary>
    </member>
    <member name="F:System.Data.SqlClient.SortOrder.Unspecified">
      <summary>これが既定値です。並べ替え順序は指定されません。</summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientFactory">
      <summary>
        <see cref="N:System.Data.SqlClient" /> プロバイダーのデータ ソース クラスの実装のインスタンスを作成するためのメソッドのセットを表します。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateCommand">
      <summary>厳密に型指定された <see cref="T:System.Data.Common.DbCommand" /> インスタンスを返します。</summary>
      <returns>
        <see cref="T:System.Data.Common.DbCommand" /> の厳密に型指定された新しいインスタンス。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateConnection">
      <summary>厳密に型指定された <see cref="T:System.Data.Common.DbConnection" /> インスタンスを返します。</summary>
      <returns>
        <see cref="T:System.Data.Common.DbConnection" /> の厳密に型指定された新しいインスタンス。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder">
      <summary>厳密に型指定された <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> インスタンスを返します。</summary>
      <returns>
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> の厳密に型指定された新しいインスタンス。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateParameter">
      <summary>厳密に型指定された <see cref="T:System.Data.Common.DbParameter" /> インスタンスを返します。</summary>
      <returns>
        <see cref="T:System.Data.Common.DbParameter" /> の厳密に型指定された新しいインスタンス。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientFactory.Instance">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlClientFactory" /> のインスタンスを取得します。これは、厳密に型指定されたデータ オブジェクトの取得に使用できます。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlCommand">
      <summary>SQL Server データベースに対して実行する Transact-SQL ステートメントまたはストアド プロシージャを表します。このクラスは継承できません。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlCommand" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
      <summary>クエリ テキストを指定して、<see cref="T:System.Data.SqlClient.SqlCommand" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="cmdText">クエリ テキスト。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
      <summary>クエリ テキストと <see cref="T:System.Data.SqlClient.SqlConnection" /> を指定して、<see cref="T:System.Data.SqlClient.SqlCommand" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="cmdText">クエリ テキスト。</param>
      <param name="connection">SQL Server のインスタンスへの接続を表す <see cref="T:System.Data.SqlClient.SqlConnection" />。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
      <summary>クエリ テキスト、<see cref="T:System.Data.SqlClient.SqlConnection" />、および <see cref="T:System.Data.SqlClient.SqlTransaction" /> を指定して、<see cref="T:System.Data.SqlClient.SqlCommand" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="cmdText">クエリ テキスト。</param>
      <param name="connection">SQL Server のインスタンスへの接続を表す <see cref="T:System.Data.SqlClient.SqlConnection" />。</param>
      <param name="transaction">
        <see cref="T:System.Data.SqlClient.SqlCommand" /> の実行対象の <see cref="T:System.Data.SqlClient.SqlTransaction" />。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.Cancel">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlCommand" /> の実行のキャンセルを試行します。</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandText">
      <summary>データ ソースで実行する Transact-SQL ステートメント、テーブル名、またはストアド プロシージャを取得または設定します。</summary>
      <returns>実行する Transact-SQL ステートメントまたはストアド プロシージャ。既定値は空の文字列です。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
      <summary>コマンドを実行する試みを終了してエラーが生成されるまでの待機時間を取得または設定します。</summary>
      <returns>コマンドの実行を待機する時間 (秒単位)。既定値は 30 秒です。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandType">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> プロパティの解釈方法を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.CommandType" /> 値のいずれか。既定値は、Text です。</returns>
      <exception cref="T:System.ArgumentException">The value was not a valid <see cref="T:System.Data.CommandType" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Connection">
      <summary>この <see cref="T:System.Data.SqlClient.SqlCommand" /> のインスタンスで使用する <see cref="T:System.Data.SqlClient.SqlConnection" /> を取得または設定します。</summary>
      <returns>データ ソースへの接続。既定値は null です。</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> property was changed while the command was enlisted in a transaction.. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.CreateParameter">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクトの新しいインスタンスを作成します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクト。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible">
      <summary>コマンド オブジェクトを Windows フォーム デザイナー コントロールに表示する必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>コマンド オブジェクトをコントロールに表示する必要があるかどうかを示す値。既定値は true です。</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
      <summary>接続に対して Transact-SQL ステートメントを実行し、影響を受けた行数を返します。</summary>
      <returns>影響を受けた行の数。</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient ストリーミング サポート.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row.This exception is not generated when you are using Microsoft .NET Framework version 1.0.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary>接続に対して Transact-SQL ステートメントを実行し、影響を受ける行の数を返す <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /> の非同期バージョン。キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄することを要求できます。例外は、返されたタスク オブジェクトによって報告されます。</summary>
      <returns>非同期操作を表すタスク。</returns>
      <param name="cancellationToken">取り消し命令。</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient ストリーミング サポート.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に送信し、<see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlDataReader" /> オブジェクト。</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient ストリーミング サポート.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row.This exception is not generated when you are using Microsoft .NET Framework version 1.0.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.InvalidOperationException">The current state of the connection is closed.<see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> requires an open <see cref="T:System.Data.SqlClient.SqlConnection" />.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に送信し、<see cref="T:System.Data.CommandBehavior" /> 値のいずれかを使用して <see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlDataReader" /> オブジェクト。</returns>
      <param name="behavior">
        <see cref="T:System.Data.CommandBehavior" /> 値のいずれか。</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient ストリーミング サポート.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">A timeout occurred during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を送信し、<see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築する <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> の非同期バージョン。例外は、返されたタスク オブジェクトによって報告されます。</summary>
      <returns>非同期操作を表すタスク。</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient ストリーミング サポート.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を送信し、<see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築する <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /> の非同期バージョン。例外は、返されたタスク オブジェクトによって報告されます。</summary>
      <returns>非同期操作を表すタスク。</returns>
      <param name="behavior">ステートメントの実行とデータ取得に関するオプション。Default に設定されている場合、<see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> は完全なタスクを返す前に行全体を読み取ります。</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient ストリーミング サポート.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を送信し、<see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築する <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /> の非同期バージョン。キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄することを要求できます。例外は、返されたタスク オブジェクトによって報告されます。</summary>
      <returns>非同期操作を表すタスク。</returns>
      <param name="behavior">ステートメントの実行とデータ取得に関するオプション。Default に設定されている場合、<see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> は完全なタスクを返す前に行全体を読み取ります。</param>
      <param name="cancellationToken">取り消し命令。</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient ストリーミング サポート.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を送信し、<see cref="T:System.Data.SqlClient.SqlDataReader" /> を構築する <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> の非同期バージョン。キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄することを要求できます。例外は、返されたタスク オブジェクトによって報告されます。</summary>
      <returns>非同期操作を表すタスク。</returns>
      <param name="cancellationToken">取り消し命令。</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient ストリーミング サポート.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
      <summary>クエリを実行し、そのクエリが返す結果セットの最初の行にある最初の列を返します。以降の列または行は無視されます。</summary>
      <returns>結果セットの最初の行の最初の列。結果セットが空の場合は、null 参照 (Visual Basic の Nothing)。最大 2,033 文字を返します。</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient ストリーミング サポート.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row.This exception is not generated when you are using Microsoft .NET Framework version 1.0.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary>クエリを非同期で実行し、クエリで返された結果セットの最初の行の最初の列を返す <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" /> の非同期バージョン。以降の列または行は無視されます。キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄することを要求できます。例外は、返されたタスク オブジェクトによって報告されます。</summary>
      <returns>非同期操作を表すタスク。</returns>
      <param name="cancellationToken">取り消し命令。</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient ストリーミング サポート.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に送信し、<see cref="T:System.Xml.XmlReader" /> を構築します。</summary>
      <returns>
        <see cref="T:System.Xml.XmlReader" /> オブジェクト。</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient ストリーミング サポート.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row.This exception is not generated when you are using Microsoft .NET Framework version 1.0.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を送信し、<see cref="T:System.Xml.XmlReader" /> オブジェクトを構築する <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /> の非同期バージョン。例外は、返されたタスク オブジェクトによって報告されます。</summary>
      <returns>非同期操作を表すタスク。</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient ストリーミング サポート.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> に <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> を送信し、<see cref="T:System.Xml.XmlReader" /> オブジェクトを構築する <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /> の非同期バージョン。キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄することを要求できます。例外は、返されたタスク オブジェクトによって報告されます。</summary>
      <returns>非同期操作を表すタスク。</returns>
      <param name="cancellationToken">取り消し命令。</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient ストリーミング サポート.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient ストリーミング サポート.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Parameters">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> を取得します。</summary>
      <returns>Transact-SQL ステートメントまたはストアド プロシージャのパラメーター。既定値は空のコレクションです。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.Prepare">
      <summary>SQL Server のインスタンスに対する準備済みのコマンドを作成します。</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.SqlClient.SqlCommand.StatementCompleted">
      <summary>Transact-SQL ステートメントの実行が完了すると発生します。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Transaction">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlCommand" /> を実行する <see cref="T:System.Data.SqlClient.SqlTransaction" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlTransaction" />。既定値は null です。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
      <summary>
        <see cref="T:System.Data.Common.DbDataAdapter" /> の Update メソッドで使用するときに、コマンドの結果を <see cref="T:System.Data.DataRow" /> に適用する方法を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.UpdateRowSource" /> 値のいずれか。</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlConnection">
      <summary>SQL Server データベースへの開いた接続を表します。このクラスは継承できません。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.#ctor">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
      <summary>接続文字列を示す文字列を指定して、<see cref="T:System.Data.SqlClient.SqlConnection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="connectionString">SQL Server データベースを開くために使用する接続。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
      <summary>データベース トランザクションを開始します。</summary>
      <returns>新しいトランザクションを表すオブジェクト。</returns>
      <exception cref="T:System.Data.SqlClient.SqlException">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</exception>
      <exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>分離レベルを指定して、データベース トランザクションを開始します。</summary>
      <returns>新しいトランザクションを表すオブジェクト。</returns>
      <param name="iso">トランザクションを実行する分離レベル。</param>
      <exception cref="T:System.Data.SqlClient.SqlException">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</exception>
      <exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
      <summary>分離レベルとトランザクション名を指定して、データベース トランザクションを開始します。</summary>
      <returns>新しいトランザクションを表すオブジェクト。</returns>
      <param name="iso">トランザクションを実行する分離レベル。</param>
      <param name="transactionName">トランザクションの名前です。</param>
      <exception cref="T:System.Data.SqlClient.SqlException">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</exception>
      <exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
      <summary>トランザクション名を指定して、データベース トランザクションを開始します。</summary>
      <returns>新しいトランザクションを表すオブジェクト。</returns>
      <param name="transactionName">トランザクションの名前です。</param>
      <exception cref="T:System.Data.SqlClient.SqlException">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</exception>
      <exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
      <summary>開いている <see cref="T:System.Data.SqlClient.SqlConnection" /> の現在のデータベースを変更します。</summary>
      <param name="database">現在のデータベースの代わりに使用するデータベースの名前。</param>
      <exception cref="T:System.ArgumentException">The database name is not valid.</exception>
      <exception cref="T:System.InvalidOperationException">The connection is not open. </exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Cannot change the database. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ClearAllPools">
      <summary>接続プールを空にします。</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)">
      <summary>指定した接続に関連付けられている接続プールを空にします。</summary>
      <param name="connection">プールから削除される <see cref="T:System.Data.SqlClient.SqlConnection" />。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
      <summary>試行成功したか失敗したかにかかわらず、最新の接続試行の接続 ID。</summary>
      <returns>最新の接続試行の接続 ID。</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.Close">
      <summary>データベースへの接続を閉じます。このメソッドは、開いている接続を閉じるための最も好ましいメソッドです。</summary>
      <exception cref="T:System.Data.SqlClient.SqlException">The connection-level error that occurred while opening the connection. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ConnectionString">
      <summary>SQL Server データベースを開くために使用する文字列を取得または設定します。</summary>
      <returns>ソース データベース名を含む接続文字列、および初期接続を確立するために必要なその他のパラメーター。既定値は空の文字列です。</returns>
      <exception cref="T:System.ArgumentException">An invalid connection string argument has been supplied, or a required connection string argument has not been supplied. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
      <summary>試行を中断してエラーを生成する前に、接続の確立時に待機する時間を取得します。</summary>
      <returns>接続が開くのを待機する時間 (秒単位)。既定値は 15 秒です。</returns>
      <exception cref="T:System.ArgumentException">The value set is less than 0. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.CreateCommand">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnection" /> に関連付けられている <see cref="T:System.Data.SqlClient.SqlCommand" /> オブジェクトを作成し、返します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlCommand" /> オブジェクト。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.Database">
      <summary>現在のデータベース、または接続が開いてから使用するデータベースの名前を取得します。</summary>
      <returns>現在のデータベース、または接続が開いてから使用するデータベースの名前。既定値は空の文字列です。</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.DataSource">
      <summary>接続する SQL Server のインスタンスの名前を取得します。</summary>
      <returns>接続する SQL Server のインスタンスの名前。既定値は空の文字列です。</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> プロパティを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> プロパティが設定されている場合は true。それ以外の場合は false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Data.SqlClient.SqlConnection.InfoMessage">
      <summary>SQL Server が警告メッセージまたは情報メッセージを返したときに発生します。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.Open">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /> で指定したプロパティ設定を使用して、データベース接続を開きます。</summary>
      <exception cref="T:System.InvalidOperationException">Cannot open a connection without specifying a data source or server.orThe connection is already open.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">A connection-level error occurred while opening the connection.If the <see cref="P:System.Data.SqlClient.SqlException.Number" /> property contains the value 18487 or 18488, this indicates that the specified password has expired or must be reset.See the <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /> method for more information.The &lt;system.data.localdb&gt; tag in the app.config file has invalid or unknown elements.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">There are two entries with the same name in the &lt;localdbinstances&gt; section.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /> で指定したプロパティ設定を使用してデータベース接続を開く <see cref="M:System.Data.SqlClient.SqlConnection.Open" /> の非同期バージョン。キャンセル トークンを使用すると、接続タイムアウトが経過する前に操作を破棄することを要求できます。例外は、返されたタスク オブジェクトによって伝達されます。接続が成功せずに接続タイムアウトの時間が経過した場合、返されるタスクは例外での失敗としてマークされます。実装は、プール済みの接続でもプールされていない接続でも、呼び出し元のスレッドをブロックすることなくタスクを返します。</summary>
      <returns>非同期操作を表すタスク。</returns>
      <param name="cancellationToken">取り消し命令。</param>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.Context Connection=true is specified in the connection string.A connection was not available from the connection pool before the connection time out elapsed.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Any error returned by SQL Server that occurred while opening the connection.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.PacketSize">
      <summary>SQL Server のインスタンスと通信するために使用するネットワーク パケットのサイズ (バイト単位) を取得します。</summary>
      <returns>ネットワーク パケットのサイズ (バイト単位)。既定値は 8000 です。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ResetStatistics">
      <summary>統計情報の収集が有効にされている場合、すべての値はゼロにリセットされます。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics">
      <summary>メソッドが呼び出された時点の統計情報の、名前/値ペアから成るコレクションを返します。</summary>
      <returns>
        <see cref="T:System.Collections.DictionaryEntry" /> アイテムの <see cref="T:System.Collections.IDictionary" /> 型の参照を返します。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ServerVersion">
      <summary>クライアントが接続している SQL Server のインスタンスのバージョンを示す文字列を取得します。</summary>
      <returns>SQL Server のインスタンスのバージョン。</returns>
      <exception cref="T:System.InvalidOperationException">The connection is closed. <see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" /> was called while the returned Task was not completed and the connection was not opened after a call to <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.State">
      <summary>接続で実行された最も新しいネットワーク操作時の <see cref="T:System.Data.SqlClient.SqlConnection" /> の状態を示します。</summary>
      <returns>
        <see cref="T:System.Data.ConnectionState" /> 列挙型。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled">
      <summary>true に設定された場合、現在の接続について統計情報の収集が有効になります。</summary>
      <returns>統計情報の収集が有効な場合は true を返し、それ以外の場合は false を返します。false が既定値です。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.WorkstationId">
      <summary>データベース クライアントを識別する文字列を取得します。</summary>
      <returns>データベース クライアントを識別する文字列。指定されていない場合は、クライアント コンピューターの名前。どちらも指定されていない場合は、空の文字列。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.SqlClient.SqlConnectionStringBuilder">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnection" /> クラスで使用する接続文字列の内容の作成と管理を簡単に実行できるようにします。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.#ctor">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> クラスの新しいインスタンスを初期化します。引数に渡した接続文字列によって、インスタンスの内部的な接続情報のデータが提供されます。</summary>
      <param name="connectionString">この情報を基にオブジェクトの内部的な接続情報が生成されます。この情報が解析され、名前/値のペアが生成されます。無効なキー名を指定すると、<see cref="T:System.Collections.Generic.KeyNotFoundException" /> が発生します。</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">接続文字列中に無効なキー名が含まれています。</exception>
      <exception cref="T:System.FormatException">接続文字列中に無効な値が含まれています (特に、ブール値または数値を指定する必要がある箇所で、それらが指定されていない場合)。</exception>
      <exception cref="T:System.ArgumentException">指定した <paramref name="connectionString" /> が有効ではありません。</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent">
      <summary>SQL Server 可用性グループ内のデータベースに接続する際の、アプリケーション ワークロードの種類を宣言します。このプロパティの値は、<see cref="T:System.Data.SqlClient.ApplicationIntent" /> を使用して設定できます。Always On 可用性グループに対する SqlClient サポートの詳細については、「高可用性障害復旧のための SqlClient サポート」を参照してください。</summary>
      <returns>プロパティの現在の値 (<see cref="T:System.Data.SqlClient.ApplicationIntent" /> 型の値) を返します。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName">
      <summary>接続文字列に関連付けられたアプリケーションの名前を取得または設定します。</summary>
      <returns>アプリケーション名。アプリケーション名を指定しなかった場合は、".NET SqlClient Data Provider"。</returns>
      <exception cref="T:System.ArgumentNullException">値を null に設定するには、<see cref="F:System.DBNull.Value" /> を使用します。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename">
      <summary>プライマリ データ ファイルの名前を格納する文字列を取得または設定します。接続可能なデータベースへの完全パス名が使用されます。</summary>
      <returns>AttachDBFilename プロパティの値。何も指定されていない場合は String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">値を null に設定するには、<see cref="F:System.DBNull.Value" /> を使用します。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.Clear">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> インスタンスの内容を消去します。</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount">
      <summary>[.NET Framework 4.5.1 以降のバージョンでサポートされる]アイドル状態の接続の失敗があったことの識別後、試みられた再接続の数。このキーの値は 0 から 255 の整数でなくてはなりません。既定値は 1 です。アイドル状態の接続の失敗について、再接続を無効にするには 0 を設定します。許可された範囲外の値を設定すると、<see cref="T:System.ArgumentException" /> がスローされます。</summary>
      <returns>アイドル状態の接続の失敗があったことの識別後、試みられた再接続の数。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval">
      <summary>[.NET Framework 4.5.1 以降のバージョンでサポートされる]アイドル状態の接続の失敗があったことの識別後、各再接続の間隔 (単位は秒)。このキーの値は 1 から 60 の整数でなくてはなりません。既定値は 10 秒です。許可された範囲外の値を設定すると、<see cref="T:System.ArgumentException" /> がスローされます。</summary>
      <returns>アイドル状態の接続の失敗があったことの識別後、各再接続の間隔 (単位は秒)。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout">
      <summary>サーバーへの接続を待機する時間 (秒単位) を取得または設定します。この時間が経過すると、接続の試行が終了し、エラーが生成されます。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout" /> プロパティの値。何も指定されていない場合は 15 秒。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> に特定のキーが格納されているかどうかを判断します。</summary>
      <returns>指定したキーを持つ要素が <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> に格納されている場合は true。それ以外の場合は false。</returns>
      <param name="keyword">
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 内で検索されるキー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> が null (Visual Basic の場合は Nothing) です。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage">
      <summary>SQL Server Language レコード名を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage" /> プロパティの値。何も指定されていない場合は String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">値を null に設定するには、<see cref="F:System.DBNull.Value" /> を使用します。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.DataSource">
      <summary>接続する SQL Server のインスタンスの名前またはネットワーク アドレスを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.DataSource" /> プロパティの値。何も指定されていない場合は String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">値を null に設定するには、<see cref="F:System.DBNull.Value" /> を使用します。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt">
      <summary>サーバーに証明書がインストールされている場合に、SQL Server がクライアントとサーバーの間で送信されるすべてのデータに SSL 暗号化を使用するかどうかを示すブール値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt" /> プロパティの値。何も指定されていない場合は false。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner">
      <summary>プライマリ サーバーがダウンした場合に接続するサーバーの名前またはアドレスを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner" /> プロパティの値。何も指定されていない場合は String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">値を null に設定するには、<see cref="F:System.DBNull.Value" /> を使用します。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog">
      <summary>接続に関連付けられたデータベースの名前を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog" /> プロパティの値。何も指定されていない場合は String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">値を null に設定するには、<see cref="F:System.DBNull.Value" /> を使用します。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity">
      <summary>User ID および Password を接続文字列中に指定するか (false の場合)、現在の Windows アカウントの資格情報を認証に使用するか (true の場合) を示すブール値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity" /> プロパティの値。何も指定されていない場合は false。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)">
      <summary>指定したキーに関連付けられている値を取得または設定します。C# では、このプロパティはインデクサーです。</summary>
      <returns>指定したキーに関連付けられている値。</returns>
      <param name="keyword">取得または設定する項目のキー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> が null 参照 (Visual Basic の場合は Nothing) です。</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">利用できるキー内に存在しないキーを追加しようとしました。</exception>
      <exception cref="T:System.FormatException">接続文字列中に無効な値が含まれています (特に、ブール値または数値を指定する必要がある箇所で、それらが指定されていない場合)。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Keys">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 内のキーを格納している <see cref="T:System.Collections.ICollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 内のキーを格納している <see cref="T:System.Collections.ICollection" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout">
      <summary>接続プールに維持されている接続が破棄されるまでの最短時間 (秒) を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout" /> プロパティの値。何も指定されていない場合は 0。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize">
      <summary>特定の接続文字列について、接続プールに維持できる最大接続数を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize" /> プロパティの値。何も指定されていない場合は 100。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize">
      <summary>特定の接続文字列について、接続プールに維持できる最小接続数を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize" /> プロパティの値。何も指定されていない場合は 0。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets">
      <summary>true の場合、アプリケーションで複数のアクティブな結果セット (MARS) を保持できます。false の場合、アプリケーションは、バッチごとにすべての結果セットを処理するか取り消してからでないと、同じ接続上で他のバッチを実行することはできません。詳細については、「複数のアクティブな結果セット (MARS) の使用」を参照してください。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets" /> プロパティの値。何も指定されていない場合は false。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover">
      <summary>異なる複数のサブネット上にある AlwaysOn 可用性グループ (AG) にアプリケーションから接続する場合に、MultiSubnetFailover=true と設定すると、(現在) アクティブなサーバーを検出して接続する処理が早くなります。Always On 可用性グループに対する SqlClient サポートの詳細については、「高可用性障害復旧のための SqlClient サポート」を参照してください。</summary>
      <returns>プロパティの現在の値を表す <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize">
      <summary>SQL Server のインスタンスと通信するために使用するネットワーク パケットのサイズ (バイト単位) を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize" /> プロパティの値。何も指定されていない場合は 8000。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Password">
      <summary>SQL Server のアカウントに使用するパスワードを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Password" /> プロパティの値。何も指定されていない場合は String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">パスワードは null に正しく設定されませんでした。下のコード例を参照してください。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo">
      <summary>接続が開いているか、開いている状態になったことがある場合に、パスワードなどの機密性の高い情報を接続文字列の一部として返すかどうかを示すブール値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo" /> プロパティの値。何も指定されていない場合は false。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Pooling">
      <summary>接続をプールするか、要求ごとに明示的に接続を確立するかを示すブール値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Pooling" /> プロパティの値。何も指定されていない場合は true。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)">
      <summary>指定したキーを持つエントリを <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> インスタンスから削除します。</summary>
      <returns>接続文字列内にキーが存在し、削除された場合は true。キーが存在しなかった場合は false。</returns>
      <param name="keyword">この <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> の接続文字列から取り除く、キー/値ペアに対するキー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> が null (Visual Basic の場合は Nothing) です。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Replication">
      <summary>この接続を使用したレプリケーションをサポートするかどうかを示すブール値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Replication" /> プロパティの値。何も指定されていない場合は false。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>指定されたキーが、この <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> インスタンスに存在するかどうかを示します。</summary>
      <returns>指定したキーを持つエントリが <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> に格納されている場合は true。それ以外の場合は false。</returns>
      <param name="keyword">
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 内で検索されるキー。</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate">
      <summary>信頼関係を検証するための証明書チェーンのウォークをバイパスする間にチャネルを暗号化するかどうかを示す値を取得または設定します。</summary>
      <returns>Boolean認識される値は、true、false、yes、および no です。</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>指定されたキーに対応する値を <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> から取得します。</summary>
      <returns>
        <paramref name="keyword" /> が接続文字列に存在する場合は true。それ以外の場合は false。</returns>
      <param name="keyword">取得する項目のキー。</param>
      <param name="value">
        <paramref name="keyword" /> に対応する値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> に null 値 (Visual Basic の場合は Nothing) が含まれています。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion">
      <summary>アプリケーションで想定される型システムを表す文字列値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion" /> プロパティに指定できる値を次の表に示します。値説明SQL Server 2005SQL Server 2005 の型システムを使用します。ADO.NET の現在のバージョンに対して変換は行われません。SQL Server 2008SQL Server 2008 型システムを使用します。最新このクライアント/サーバー ペアで処理できるバージョンよりも最新のバージョンを使用します。クライアント コンポーネントとサーバー コンポーネントがアップグレードされると、使用されるバージョンもそれに合わせて自動的に変化します。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserID">
      <summary>SQL Server との接続時に使用するユーザー ID を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserID" /> プロパティの値。何も指定されていない場合は String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">値を null に設定するには、<see cref="F:System.DBNull.Value" /> を使用します。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance">
      <summary>SQL Server Express の既定のインスタンスから、呼び出し元のアカウントで実行時に開始されるインスタンスに接続をリダイレクトするかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance" /> プロパティの値。何も指定されていない場合は False。</returns>
      <exception cref="T:System.ArgumentNullException">値を null に設定するには、<see cref="F:System.DBNull.Value" /> を使用します。</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Values">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 内の値を格納している <see cref="T:System.Collections.ICollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 内の値を格納している <see cref="T:System.Collections.ICollection" />。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID">
      <summary>SQL Server に接続するワークステーションの名前を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID" /> プロパティの値。何も指定されていない場合は String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">値を null に設定するには、<see cref="F:System.DBNull.Value" /> を使用します。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.SqlClient.SqlDataReader">
      <summary>SQL Server データベースから行の前方向ストリームを読み取る方法を提供します。このクラスは継承できません。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Connection">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlDataReader" /> に関連付けられている <see cref="T:System.Data.SqlClient.SqlConnection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlDataReader" /> に関連付けられている<see cref="T:System.Data.SqlClient.SqlConnection" />。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Depth">
      <summary>現在の行の入れ子の深さを示す値を取得します。</summary>
      <returns>現在の行の入れ子の深さ。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.FieldCount">
      <summary>現在の行の列数を取得します。</summary>
      <returns>有効なレコードセットに位置していない場合は 0。それ以外の場合は現在の行の列数。既定値は -1 です。</returns>
      <exception cref="T:System.NotSupportedException">SQL Server のインスタンスへの現在の接続がありません。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)">
      <summary>指定した列の値をブール値として取得します。</summary>
      <returns>列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)">
      <summary>指定した列の値をバイトとして取得します。</summary>
      <returns>指定した列のバイト型の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>指定した列オフセットからのバイト ストリームを、配列としてバッファーに読み込みます。読み込みは、指定したバッファー オフセットから開始されます。</summary>
      <returns>実際に読み取られたバイト数を返します。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <param name="dataIndex">読み取り操作を開始するフィールド内のインデックス。</param>
      <param name="buffer">読み取ったバイトのストリームを格納するバッファー。</param>
      <param name="bufferIndex">書き込み操作を開始する <paramref name="buffer" /> 内のインデックス。</param>
      <param name="length">バッファーにコピーする最大長。</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)">
      <summary>指定した列の値を単一の文字として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>指定した列オフセットからの文字ストリームを、配列としてバッファーに読み込みます。読み込みは、指定したバッファー オフセットから開始されます。</summary>
      <returns>実際に読み込まれた文字数を返します。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <param name="dataIndex">読み取り操作を開始するフィールド内のインデックス。</param>
      <param name="buffer">読み取ったバイトのストリームを格納するバッファー。</param>
      <param name="bufferIndex">書き込み操作を開始する <paramref name="buffer" /> 内のインデックス。</param>
      <param name="length">バッファーにコピーする最大長。</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)">
      <summary>指定した列のデータ型を示す文字列を取得します。</summary>
      <returns>指定した列のデータ型を示す文字列。</returns>
      <param name="i">検索する列の、0 から始まる序数位置。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.DateTime" /> オブジェクトとして取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.DateTimeOffset" /> オブジェクトとして取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Decimal" /> オブジェクトとして取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)">
      <summary>指定した列の値を倍精度浮動小数点数として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetEnumerator">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlDataReader" /> を反復処理する <see cref="T:System.Collections.IEnumerator" /> を返します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlDataReader" /> の <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)">
      <summary>オブジェクトのデータ型である <see cref="T:System.Type" /> を取得します。</summary>
      <returns>オブジェクトのデータ型である <see cref="T:System.Type" />。データベースから返されたユーザー定義型 (UDT) に関しては、このデータ型がクライアント上に存在しない場合、GetFieldType は null を返します。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)">
      <summary>指定された列の値を型として同期的に取得します。<see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" /> は、このメソッドの非同期バージョンです。</summary>
      <returns>返された型オブジェクト。</returns>
      <param name="i">取得する列。</param>
      <typeparam name="T">返される値の型。詳細については、次の「解説」を参照してください。</typeparam>
      <exception cref="T:System.InvalidOperationException">データの取得中、接続は破棄されるか、または閉じられます。<see cref="T:System.Data.SqlClient.SqlDataReader" /> は、データの取得時に閉じます。読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> は呼び出されなかったか、false を返しました)。以前に読み取られた列をシーケンシャル モードで読み取ろうとしました。非同期操作が進行中でした。シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException">存在しない列を読み取ろうとしています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">列の値は null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == true) で、非 SQL 型を取得しました。</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="T" /> は SQL Server によって返される型を一致させたり、キャストできません。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary>指定された列の値を型として非同期的に取得します。<see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" /> は、このメソッドの同期バージョンです。</summary>
      <returns>返された型オブジェクト。</returns>
      <param name="i">取得する列。</param>
      <param name="cancellationToken">操作を取り消すことを示す通知を反映する取り消し命令。これは取り消しを保証しません。CancellationToken.None の設定は、このメソッドを <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> と同じにします。返されたタスクを取り消し済みとしてマークする必要があります。</param>
      <typeparam name="T">返される値の型。詳細については、次の「解説」を参照してください。</typeparam>
      <exception cref="T:System.InvalidOperationException">データの取得中、接続は破棄されるか、または閉じられます。<see cref="T:System.Data.SqlClient.SqlDataReader" /> は、データの取得時に閉じます。読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> は呼び出されなかったか、false を返しました)。以前に読み取られた列をシーケンシャル モードで読み取ろうとしました。非同期操作が進行中でした。シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。Context Connection=true は接続文字列で指定されます。</exception>
      <exception cref="T:System.IndexOutOfRangeException">存在しない列を読み取ろうとしています。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">列の値は null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == true) で、非 SQL 型を取得しました。</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="T" /> は SQL Server によって返される型を一致させたり、キャストできません。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)">
      <summary>指定した列の値を単精度浮動小数点数として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)">
      <summary>指定した列の値をグローバル一意識別子 (GUID) として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)">
      <summary>指定した列の値を 16 ビット符号付き整数として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)">
      <summary>指定した列の値を 32 ビット符号付き整数として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)">
      <summary>指定した列の値を 64 ビット符号付き整数として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)">
      <summary>指定した列の名前を取得します。</summary>
      <returns>指定した列の名前。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)">
      <summary>列の名前を指定して、列の序数を取得します。</summary>
      <returns>インデックス番号が 0 から始まる列序数。</returns>
      <param name="name">列の名前です。</param>
      <exception cref="T:System.IndexOutOfRangeException">指定された名前は有効な列名ではありません。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>基になるプロバイダー固有フィールド型の内部表現である Object を取得します。</summary>
      <returns>基になるプロバイダー固有フィールド型の内部表現である <see cref="T:System.Object" /> を取得します。</returns>
      <param name="i">列の序数を表す <see cref="T:System.Int32" />。</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>基になるプロバイダー固有の値の内部表現である Object を取得します。</summary>
      <returns>基になるプロバイダー固有の値の内部表現である <see cref="T:System.Object" />。</returns>
      <param name="i">列の序数を表す <see cref="T:System.Int32" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>基になるプロバイダー固有の値の内部表現であるオブジェクトの配列を取得します。</summary>
      <returns>基になるプロバイダー固有の値の内部表現であるオブジェクトの配列。</returns>
      <param name="values">列の値のコピー先の <see cref="T:System.Object" /> 配列。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlBinary" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> として表現される列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> として取得します。</summary>
      <returns>列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlByte" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> として表された列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlBytes" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> として表現される列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlChars" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> として表された列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlDateTime" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> として表された列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> として表現される列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlDouble" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> として表された列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlGuid" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> として表された列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlInt16" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> として表現される列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlInt32" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> として表現される列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlInt64" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> として表現される列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlMoney" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> として表現される列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlSingle" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> として表現される列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlString" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> として表現される列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)">
      <summary>指定した列のデータ値を SQL Server 型として返します。</summary>
      <returns>
        <see cref="T:System.Data.SqlDbType" /> として表現される列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])">
      <summary>レコードを構成するすべての列について、SQL Server のデータ型で表現されている値を含む <see cref="T:System.Object" /> の配列に格納します。</summary>
      <returns>コピーされる列の数を示す整数。</returns>
      <param name="values">値のコピー先の <see cref="T:System.Object" /> の配列。列の値は、SQL Server のデータ型として表現されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> が null です。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)">
      <summary>指定した列の値を XML 値として取得します。</summary>
      <returns>対応するフィールドに格納された XML を保持する <see cref="T:System.Data.SqlTypes.SqlXml" /> 値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 の範囲にありません。</exception>
      <exception cref="T:System.InvalidOperationException">閉じている <see cref="T:System.Data.SqlClient.SqlDataReader" /> の列を読み取るかアクセスしようとしました。</exception>
      <exception cref="T:System.InvalidCastException">取得したデータは、<see cref="T:System.Data.SqlTypes.SqlXml" /> 型と互換性がありません。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)">
      <summary>バイナリ、イメージ、varbinary、UDT およびバリアント データ型を <see cref="T:System.IO.Stream" /> として取得します。</summary>
      <returns>ストリーム オブジェクト。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidOperationException">データの取得中、接続は破棄されるか、または閉じられます。<see cref="T:System.Data.SqlClient.SqlDataReader" /> は、データの取得時に閉じます。読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> は呼び出されなかったか、false を返しました)。以前に読み取られた列をシーケンシャル モードで読み取ろうとしました。非同期操作が進行中でした。シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException">存在しない列を読み取ろうとしています。</exception>
      <exception cref="T:System.InvalidCastException">返された型は、次のどの型でもありませんでした。binaryimagevarbinaryudt</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)">
      <summary>指定した列の値を文字列として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)">
      <summary>Char、Nchar、Ntext、Nvarchar、テキスト、varchar および VARIANT データ型を <see cref="T:System.IO.TextReader" />として取得します。</summary>
      <returns>返されたオブジェクト。</returns>
      <param name="i">取得する列。</param>
      <exception cref="T:System.InvalidOperationException">データの取得中、接続は破棄されるか、または閉じられます。<see cref="T:System.Data.SqlClient.SqlDataReader" /> は、データの取得時に閉じます。読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> は呼び出されなかったか、false を返しました)。以前に読み取られた列をシーケンシャル モードで読み取ろうとしました。非同期操作が進行中でした。シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException">存在しない列を読み取ろうとしています。</exception>
      <exception cref="T:System.InvalidCastException">返された型は、次のどの型でもありませんでした。charncharntextnvarcharテキストvarchar</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.TimeSpan" /> オブジェクトとして取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)">
      <summary>指定した列の値をネイティブ形式で取得します。</summary>
      <returns>null データベース列の場合は、<see cref="T:System.DBNull" /> が返されます。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])">
      <summary>オブジェクトの配列に現在行の列値を設定します。</summary>
      <returns>配列の <see cref="T:System.Object" /> のインスタンス数。</returns>
      <param name="values">属性列のコピー先の <see cref="T:System.Object" /> 配列。</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />として XML 型のデータを取得します。</summary>
      <returns>返されたオブジェクト。</returns>
      <param name="i">指定した列の値。</param>
      <exception cref="T:System.InvalidOperationException">データの取得中、接続は破棄されるか、または閉じられます。<see cref="T:System.Data.SqlClient.SqlDataReader" /> は、データの取得時に閉じます。読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> は呼び出されなかったか、false を返しました)。以前に読み取られた列をシーケンシャル モードで読み取ろうとしています。非同期操作が進行中でした。シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。</exception>
      <exception cref="T:System.IndexOutOfRangeException">存在しない列を読み取ろうとしています。</exception>
      <exception cref="T:System.InvalidCastException">返される型は xml ではありませんでした。</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.HasRows">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlDataReader" /> に 1 行以上の行が格納されているかどうかを示す値を取得します。</summary>
      <returns>1 行以上の行が <see cref="T:System.Data.SqlClient.SqlDataReader" /> に含まれている場合は true。それ以外の場合は false。</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.IsClosed">
      <summary>指定した <see cref="T:System.Data.SqlClient.SqlDataReader" /> インスタンスが閉じているかどうかを示すブール値を取得します。</summary>
      <returns>指定した <see cref="T:System.Data.SqlClient.SqlDataReader" /> インスタンスが閉じている場合は true。それ以外の場合は false。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)">
      <summary>列に格納されている値が存在しない値または欠損値かどうかを示す値を取得します。</summary>
      <returns>指定した列の値が <see cref="T:System.DBNull" /> と等価である場合は true。それ以外の場合は false。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>列に格納されている値が存在しない値または欠損値かどうかを示す値を取得する <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> の非同期バージョン。キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄することを要求できます。例外は、返されたタスク オブジェクトによって報告されます。</summary>
      <returns>指定した列の値が DBNull と等価である場合は true。それ以外の場合は false。</returns>
      <param name="i">取得する、0 から始まる列。</param>
      <param name="cancellationToken">操作を取り消すことを示す通知を反映する取り消し命令。これは取り消しを保証しません。CancellationToken.None の設定は、このメソッドを <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> と同じにします。返されたタスクを取り消し済みとしてマークする必要があります。</param>
      <exception cref="T:System.InvalidOperationException">データの取得中、接続は破棄されるか、または閉じられます。<see cref="T:System.Data.SqlClient.SqlDataReader" /> は、データの取得時に閉じます。読み取ることのできるデータはありません (たとえば、最初の <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> は呼び出されなかったか、false を返しました)。以前に読み取られた列をシーケンシャル モードで読み取ろうとしています。非同期操作が進行中でした。シーケンシャル モードで実行中、これはすべての Get* メソッドに適用されます。ストリームの読み取り中に呼び出すことができるためです。Context Connection=true は接続文字列で指定されます。</exception>
      <exception cref="T:System.IndexOutOfRangeException">存在しない列を読み取ろうとしています。</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)">
      <summary>列の序数によって指定した列の値をネイティブ形式で取得します。</summary>
      <returns>指定した列のネイティブ形式での値。</returns>
      <param name="i">インデックス番号が 0 から始まる列序数。</param>
      <exception cref="T:System.IndexOutOfRangeException">渡されたインデックスが 0 から <see cref="P:System.Data.IDataRecord.FieldCount" /> の範囲にありません。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Item(System.String)">
      <summary>列名によって指定した列の値をネイティブ形式で取得します。</summary>
      <returns>指定した列のネイティブ形式での値。</returns>
      <param name="name">列の名前です。</param>
      <exception cref="T:System.IndexOutOfRangeException">指定した名前の列が見つかりません。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.NextResult">
      <summary>バッチ Transact-SQL ステートメントの結果を読み込むときに、データ リーダーを次の結果に進めます。</summary>
      <returns>次の結果セットがある場合は true。それ以外の場合は false。</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary>バッチ Transact-SQL ステートメントの結果を読み込むときに、データ リーダーを次の結果に進める <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" /> の非同期バージョン。キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄することを要求できます。例外は、返されたタスク オブジェクトによって報告されます。</summary>
      <returns>非同期操作を表すタスク。</returns>
      <param name="cancellationToken">取り消し命令。</param>
      <exception cref="T:System.InvalidOperationException">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" /> を複数回呼び出します。Context Connection=true は接続文字列で指定されます。</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">コマンド テキストの実行中に SQL Server がエラーを返しました。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.Read">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlDataReader" /> を次のレコードに進めます。</summary>
      <returns>他の行が存在する場合は true。それ以外の場合は false。</returns>
      <exception cref="T:System.Data.SqlClient.SqlException">コマンド テキストの実行中に SQL Server がエラーを返しました。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary>次のレコードに <see cref="T:System.Data.SqlClient.SqlDataReader" /> を進める <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> の非同期バージョン。キャンセル トークンを使用すると、コマンド タイムアウトが経過する前に操作を破棄することを要求できます。例外は、返されたタスク オブジェクトによって報告されます。</summary>
      <returns>非同期操作を表すタスク。</returns>
      <param name="cancellationToken">取り消し命令。</param>
      <exception cref="T:System.InvalidOperationException">タスクを完了する前に同じインスタンスに対して <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> を複数回呼び出します。Context Connection=true は接続文字列で指定されます。</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">コマンド テキストの実行中に SQL Server がエラーを返しました。</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.RecordsAffected">
      <summary>Transact-SQL ステートメントによって変更、挿入、または削除された行数を取得します。</summary>
      <returns>変更、挿入、または削除する行の数。影響を受ける行がない場合や、ステートメントが失敗した場合は 0。SELECT ステートメントの場合は -1。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.VisibleFieldCount">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlDataReader" /> の非表示ではないフィールドの数を取得します。</summary>
      <returns>非表示ではないフィールドの数。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.SqlClient.SqlError">
      <summary>SQL Server から返された警告またはエラーに関する情報を収集します。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Class">
      <summary>SQL Server から返されたエラーの重大度レベルを取得します。</summary>
      <returns>エラーの重大度レベルを示す 1 ～ 25 の値。既定値は 0 です。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.LineNumber">
      <summary>Transact-SQL コマンドのバッチまたはストアド プロシージャ内の、エラーが含まれる行の番号を示します。</summary>
      <returns>Transact-SQL コマンドのバッチまたはストアド プロシージャ内の、エラーが含まれる行の番号。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Message">
      <summary>エラーを説明するテキストを取得します。</summary>
      <returns>エラーを説明するテキスト。SQL Server によって生成されるエラーの詳細については、SQL Server オンライン ブックを参照してください。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Number">
      <summary>エラーの種類を示す番号を取得します。</summary>
      <returns>エラーの種類を示す番号。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Procedure">
      <summary>エラーを生成したストアド プロシージャまたはリモート プロシージャ コール (RPC) の名前を取得します。</summary>
      <returns>ストアド プロシージャまたは RPC の名前。SQL Server によって生成されるエラーの詳細については、SQL Server オンライン ブックを参照してください。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Server">
      <summary>エラーを生成した SQL Server インスタンスの名前を取得します。</summary>
      <returns>SQL Server インスタンスの名前。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Source">
      <summary>エラーを生成したプロバイダーの名前を取得します。</summary>
      <returns>エラーを生成したプロバイダーの名前。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.State">
      <summary>いくつかのエラー メッセージは、データベース エンジンのコードの複数のポイントで表示できます。たとえば、1105 エラーは、さまざまな条件で発生する可能性があります。エラーが発生するそれぞれ特定の条件に対して、一意の状態コードが割り当てられます。</summary>
      <returns>状態コード。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlError.ToString">
      <summary>エラー メッセージの完全なテキストを取得します。</summary>
      <returns>エラーの完全なテキスト。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlErrorCollection">
      <summary>.NET Framework SQL Server 用データ プロバイダーが生成するすべてのエラーを収集します。このクラスは継承できません。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> コレクションの要素を <see cref="T:System.Array" /> にコピーします。指定したインデックスからコピーが開始されます。</summary>
      <param name="array">要素のコピー先の <see cref="T:System.Array" />。</param>
      <param name="index">
        <paramref name="array" /> パラメーター内のコピーの開始位置を示すインデックス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> と <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> コレクション内の要素数の合計が、<see cref="T:System.Array" /> の <see cref="P:System.Array.Length" /> を超えています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> は null です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> は <paramref name="array" /> に対して有効ではありません。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Data.SqlClient.SqlError[],System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> コレクションの要素を <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> にコピーします。指定したインデックスからコピーが開始されます。</summary>
      <param name="array">要素のコピー先の <see cref="T:System.Data.SqlClient.SqlErrorCollection" />。</param>
      <param name="index">
        <paramref name="array" /> パラメーター内のコピーの開始位置を示すインデックス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> と <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> コレクション内の要素数の合計が、<see cref="T:System.Data.SqlClient.SqlErrorCollection" /> の長さを超えています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> は null です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> は <paramref name="array" /> に対して有効ではありません。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.Count">
      <summary>コレクション内のエラーの数を取得します。</summary>
      <returns>コレクション内の合計エラー数。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlErrorCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> を反復処理する列挙子を返します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> の <see cref="T:System.Collections.IEnumerator" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.Item(System.Int32)">
      <summary>指定したインデックス位置にあるエラーを取得します。</summary>
      <returns>指定したインデックス位置にあるエラーを格納する <see cref="T:System.Data.SqlClient.SqlError" />。</returns>
      <param name="index">取得するエラーの、0 から始まるインデックス番号。</param>
      <exception cref="T:System.IndexOutOfRangeException">インデックス パラメーターが配列の範囲外です。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.ICollection.IsSynchronized" /> のトピックを参照してください。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> へのアクセスが同期されている (スレッド セーフである) 場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#SyncRoot">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.ICollection.SyncRoot" /> のトピックを参照してください。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlException">
      <summary>SQL Server が警告またはエラーを返したときにスローされる例外。このクラスは継承できません。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Class">
      <summary>.NET Framework SQL Server 用データ プロバイダーが返したエラーの重大度レベルを取得します。</summary>
      <returns>エラーの重大度レベルを示す 1 ～ 25 の値。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.ClientConnectionId">
      <summary>クライアント接続 ID を表します 。詳細については、「ADO.NET でのデータ トレース」を参照してください。</summary>
      <returns>クライアント接続 ID を返します。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Errors">
      <summary>.NET Framework SQL Server 用データ プロバイダーが生成する例外の詳細情報を提供する、1 つ以上の <see cref="T:System.Data.SqlClient.SqlError" /> オブジェクトのコレクションを取得します。</summary>
      <returns>収集された、<see cref="T:System.Data.SqlClient.SqlError" /> クラスのインスタンス。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.LineNumber">
      <summary>Transact-SQL コマンドのバッチまたはストアド プロシージャ内の、エラーを生成した行の番号を取得します。</summary>
      <returns>Transact-SQL コマンドのバッチまたはストアド プロシージャ内の、エラーを生成した行の番号。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Number">
      <summary>エラーの種類を示す番号を取得します。</summary>
      <returns>エラーの種類を示す番号。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Procedure">
      <summary>エラーを生成したストアド プロシージャまたはリモート プロシージャ コール (RPC) の名前を取得します。</summary>
      <returns>ストアド プロシージャまたは RPC の名前。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Server">
      <summary>エラーを生成した SQL Server インスタンスを実行しているコンピューターの名前を取得します。</summary>
      <returns>SQL Server インスタンスを実行しているコンピューターの名前。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Source">
      <summary>エラーを生成したプロバイダーの名前を取得します。</summary>
      <returns>エラーを生成したプロバイダーの名前。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.State">
      <summary>エラー、警告、または "データがありません" というメッセージを表す、数字によるエラー コードを SQL Server から取得します。これらの値のデコード方法の詳細については、SQL Server Books Online を参照してください。</summary>
      <returns>エラー コードを表す数字。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlException.ToString">
      <summary>現在の <see cref="T:System.Data.SqlClient.SqlException" /> オブジェクトを表し、クライアント接続 ID を含む文字列を返します (詳細については、 <see cref="P:System.Data.SqlClient.SqlException.ClientConnectionId" /> を参照してください)。</summary>
      <returns>現在の <see cref="T:System.Data.SqlClient.SqlException" /> オブジェクトを表す文字列。<see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlInfoMessageEventArgs">
      <summary>
        <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> イベントにデータを提供します。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Errors">
      <summary>サーバーから送信された警告のコレクションを取得します。</summary>
      <returns>サーバーから送信された警告のコレクション。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Message">
      <summary>データベースから送信されたエラーの完全なテキストを取得します。</summary>
      <returns>エラーの完全なテキスト。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Source">
      <summary>エラーを生成したオブジェクトの名前を取得します。</summary>
      <returns>エラーを生成したオブジェクトの名前。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlInfoMessageEventArgs.ToString">
      <summary>
        <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> イベントの文字列形式を取得します。</summary>
      <returns>
        <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> イベントを表す文字列。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlInfoMessageEventHandler">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnection" /> の <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Data.SqlClient.SqlInfoMessageEventArgs" /> オブジェクト。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlParameter">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlCommand" /> のパラメーターと、オプションで <see cref="T:System.Data.DataSet" /> 列に対するマップを表します。このクラスは継承できません。パラメーターの詳細については、「パラメーターおよびパラメーターのデータ型の構成」を参照してください。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)">
      <summary>パラメーター名とデータ型を指定して、<see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parameterName">割り当てるパラメーターの名前。</param>
      <param name="dbType">
        <see cref="T:System.Data.SqlDbType" /> 値のいずれか。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dbType" /> パラメーターで指定された値は、無効なバックエンド データ型です。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>パラメーター名、<see cref="T:System.Data.SqlDbType" />、およびサイズを指定して、<see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parameterName">割り当てるパラメーターの名前。</param>
      <param name="dbType">
        <see cref="T:System.Data.SqlDbType" /> 値のいずれか。</param>
      <param name="size">パラメーターの長さ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dbType" /> パラメーターで指定された値は、無効なバックエンド データ型です。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>パラメーター名、<see cref="T:System.Data.SqlDbType" />、サイズ、およびソース列名を指定して、<see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parameterName">割り当てるパラメーターの名前。</param>
      <param name="dbType">
        <see cref="T:System.Data.SqlDbType" /> 値のいずれか。</param>
      <param name="size">パラメーターの長さ。</param>
      <param name="sourceColumn">この <see cref="T:System.Data.SqlClient.SqlParameter" /> が <see cref="Overload:System.Data.Common.DbDataAdapter.Update" /> への呼び出しで使用された場合の、ソース列 (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) の名前。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dbType" /> パラメーターで指定された値は、無効なバックエンド データ型です。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)">
      <summary>パラメーター名と新しい <see cref="T:System.Data.SqlClient.SqlParameter" /> の値を指定して、<see cref="T:System.Data.SqlClient.SqlParameter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parameterName">割り当てるパラメーターの名前。</param>
      <param name="value">
        <see cref="T:System.Data.SqlClient.SqlParameter" /> の値を示す <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.CompareInfo">
      <summary>このパラメーターで実行する文字列比較の方法を定義する <see cref="T:System.Globalization.CompareInfo" /> オブジェクトを取得または設定します。</summary>
      <returns>このパラメーターの文字列比較を定義する <see cref="T:System.Globalization.CompareInfo" /> オブジェクト。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.DbType">
      <summary>パラメーターの <see cref="T:System.Data.SqlDbType" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.SqlDbType" /> 値のいずれか。既定値は、NVarChar です。</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Direction">
      <summary>パラメーターが入力専用、出力専用、双方向、またはストアド プロシージャの戻り値パラメーターかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.ParameterDirection" /> 値のいずれか。既定値は、Input です。</returns>
      <exception cref="T:System.ArgumentException">プロパティが、有効な <see cref="T:System.Data.ParameterDirection" /> 値に設定されませんでした。</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.IsNullable">
      <summary>パラメーターが null 値を受け付けるかどうかを示す値を取得または設定します。<see cref="P:System.Data.SqlClient.SqlParameter.IsNullable" /> はパラメーター値の検証に使用されず、コマンドを実行すると null 値を送信または受信できます。</summary>
      <returns>null 値を使用できる場合は true。それ以外の場合は false。既定値は、false です。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.LocaleId">
      <summary>地域に固有の表記規則と言語を判断するためのロケール識別子を取得または設定します。</summary>
      <returns>パラメーターに関連付けられたロケール識別子を返します。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Offset">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> プロパティへのオフセットを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> へのオフセット。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.ParameterName">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> の名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> の名前です。既定値は空の文字列です。</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Precision">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> プロパティを表すときに使用する最大桁数を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> プロパティを表すための最大桁数。既定値は 0 です。これは、データ プロバイダーによって <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> の有効桁数が設定されることを示します。</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.ResetDbType">
      <summary>この <see cref="T:System.Data.SqlClient.SqlParameter" /> に関連付けられている型をリセットします。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.ResetSqlDbType">
      <summary>この <see cref="T:System.Data.SqlClient.SqlParameter" /> に関連付けられている型をリセットします。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Scale">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> を解決するための小数部桁数を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> を解決するための小数部の桁数。既定値は 0 です。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Size">
      <summary>列内のデータの最大サイズをバイト単位で取得または設定します。</summary>
      <returns>列内のデータのバイト単位による最大サイズ。既定値は、パラメーター値から推論されます。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SourceColumn">
      <summary>
        <see cref="T:System.Data.DataSet" /> に割り当てられ、<see cref="P:System.Data.SqlClient.SqlParameter.Value" /> の読み込みまたは戻しに使用されるソース列の名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.DataSet" /> に割り当てられたソース列の名前。既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping">
      <summary>ソース列が null 許容であるかどうかを示す値を設定または取得します。<see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> は、これを使用することにより、null 許容の列に対する Update ステートメントを正しく生成できます。</summary>
      <returns>ソース列が null 許容の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SqlDbType">
      <summary>パラメーターの <see cref="T:System.Data.SqlDbType" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.SqlDbType" /> 値のいずれか。既定値は、NVarChar です。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SqlValue">
      <summary>パラメーターの値を SQL の型として取得または設定します。</summary>
      <returns>パラメーターの値を SQL の型として表す <see cref="T:System.Object" />。既定値は null です。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.ToString">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" /> を格納する文字列を取得します。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" /> を格納する文字列。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.TypeName">
      <summary>テーブル値パラメーターの型名を取得または設定します。</summary>
      <returns>指定したテーブル値パラメーターの型名。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Value">
      <summary>パラメーターの値を取得または設定します。</summary>
      <returns>パラメーターの値を示す <see cref="T:System.Object" />。既定値は null です。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase">
      <summary>この XML インスタンスのスキーマ コレクションが置かれているデータベースの名前を取得します。</summary>
      <returns>この XML インスタンスのスキーマ コレクションが置かれているデータベースの名前。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName">
      <summary>この XML インスタンスに対応するスキーマ コレクションの名前を取得します。</summary>
      <returns>この XML インスタンスに対応するスキーマ コレクションの名前。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema">
      <summary>この XML インスタンスのスキーマ コレクションが置かれている所有リレーショナル スキーマ。</summary>
      <returns>この XML インスタンスの所有リレーショナル スキーマ。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlParameterCollection">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlCommand" /> に関連付けられたパラメーター コレクション、および <see cref="T:System.Data.DataSet" /> の列に対する各パラメーターのマップを表します。このクラスは継承できません。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.Data.SqlClient.SqlParameter)">
      <summary>指定した <see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクトを <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> に追加します。</summary>
      <returns>新しい <see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクト。</returns>
      <param name="value">コレクションに追加する <see cref="T:System.Data.SqlClient.SqlParameter" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> パラメーターで指定された <see cref="T:System.Data.SqlClient.SqlParameter" /> は、既にこの、または他の <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> に追加されています。</exception>
      <exception cref="T:System.InvalidCastException">渡されたパラメーターが <see cref="T:System.Data.SqlClient.SqlParameter" /> ではありませんでした。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> パラメーターが null です。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.Object)">
      <summary>指定した <see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクトを <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> に追加します。</summary>
      <returns>新しい <see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクトのインデックス。</returns>
      <param name="value">
        <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType)">
      <summary>パラメーター名とデータ型を指定して、<see cref="T:System.Data.SqlClient.SqlParameter" /> を <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> に追加します。</summary>
      <returns>新しい <see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクト。</returns>
      <param name="parameterName">パラメーターの名前。</param>
      <param name="sqlDbType">
        <see cref="T:System.Data.SqlDbType" /> 値のいずれか。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>パラメーター名、<see cref="T:System.Data.SqlDbType" />、およびサイズを指定して、<see cref="T:System.Data.SqlClient.SqlParameter" /> を <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> に追加します。</summary>
      <returns>新しい <see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクト。</returns>
      <param name="parameterName">パラメーターの名前。</param>
      <param name="sqlDbType">コレクションに追加する <see cref="T:System.Data.SqlClient.SqlParameter" /> の <see cref="T:System.Data.SqlDbType" />。</param>
      <param name="size">
        <see cref="T:System.Int32" /> としてのサイズ。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.AddRange(System.Array)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> の末尾に値の配列を追加します。</summary>
      <param name="values">追加する <see cref="T:System.Array" /> 値。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.AddRange(System.Data.SqlClient.SqlParameter[])">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> の末尾に <see cref="T:System.Data.SqlClient.SqlParameter" /> 値の配列を追加します。</summary>
      <param name="values">追加する <see cref="T:System.Data.SqlClient.SqlParameter" /> 値。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>値を <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> の末尾に追加します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクト。</returns>
      <param name="parameterName">パラメーターの名前。</param>
      <param name="value">追加される値。null 値を示すために、null の代わりに、<see cref="F:System.DBNull.Value" /> を使用します。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Clear">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> からすべての <see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクトを削除します。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.Data.SqlClient.SqlParameter)">
      <summary>指定した <see cref="T:System.Data.SqlClient.SqlParameter" /> がこの <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 内にあるかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> に値が格納されている場合は true。それ以外の場合は false。</returns>
      <param name="value">
        <see cref="T:System.Data.SqlClient.SqlParameter" /> 値。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> がこの <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 内にあるかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> に値が格納されている場合は true。それ以外の場合は false。</returns>
      <param name="value">
        <see cref="T:System.Object" /> 値。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.String)">
      <summary>指定したパラメーター名がこの <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> にあるかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> に値が格納されている場合は true。それ以外の場合は false。</returns>
      <param name="value">
        <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>指定したコピー先の <see cref="T:System.Array" /> インデックスを開始位置として、現在の <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> のすべての要素を、指定した 1 次元 <see cref="T:System.Array" /> にコピーします。</summary>
      <param name="array">現在の <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> から要素がコピーされる先の 1 次元の <see cref="T:System.Array" />。</param>
      <param name="index">コピーを開始する <see cref="T:System.Array" /> のインデックスを表す 32 ビット整数。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Data.SqlClient.SqlParameter[],System.Int32)">
      <summary>指定したコピー先のインデックスを開始位置として、現在の <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> のすべての要素を、指定した <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> にコピーします。</summary>
      <param name="array">現在の <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> から要素がコピーされる先の <see cref="T:System.Data.SqlClient.SqlParameterCollection" />。</param>
      <param name="index">コピーを開始する <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> のインデックスを表す 32 ビット整数。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Count">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> の要素数を格納している整数を返します。読み取り専用です。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> の要素数 (整数)。</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> を反復処理する列挙子を返します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> の <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Data.SqlClient.SqlParameter)">
      <summary>指定した <see cref="T:System.Data.SqlClient.SqlParameter" /> のコレクション内での位置を取得します。</summary>
      <returns>指定した <see cref="T:System.Data.SqlClient.SqlParameter" /> (<see cref="T:System.Data.SqlClient.SqlParameter" />) の、コレクション内での 0 から始まる位置。オブジェクトが <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 内に存在しない場合は、-1 を返します。</returns>
      <param name="value">検索対象の <see cref="T:System.Data.SqlClient.SqlParameter" />。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> のコレクション内での位置を取得します。</summary>
      <returns>指定した <see cref="T:System.Object" /> (<see cref="T:System.Data.SqlClient.SqlParameter" />) の、コレクション内での 0 から始まる位置。オブジェクトが <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 内に存在しない場合は、-1 を返します。</returns>
      <param name="value">検索対象の <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.String)">
      <summary>指定した名前の指定した <see cref="T:System.Data.SqlClient.SqlParameter" /> の位置を取得します。</summary>
      <returns>指定した名前 (大文字と小文字が区別されます) が含まれる、指定した <see cref="T:System.Data.SqlClient.SqlParameter" /> の、0 から始まる位置。オブジェクトが <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 内に存在しない場合は、-1 を返します。</returns>
      <param name="parameterName">検索する <see cref="T:System.Data.SqlClient.SqlParameter" /> の、大文字と小文字が区別される名前。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Data.SqlClient.SqlParameter)">
      <summary>指定したインデックス番号で、<see cref="T:System.Data.SqlClient.SqlParameterCollection" /> に <see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクトを挿入します。</summary>
      <param name="index">値を挿入する位置の、0 から始まるインデックス番号。</param>
      <param name="value">
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> に挿入する <see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクト。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 内の指定したインデックス位置に <see cref="T:System.Object" /> を挿入します。</summary>
      <param name="index">値を挿入する位置の、0 から始まるインデックス番号。</param>
      <param name="value">
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> に挿入する <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Item(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Data.SqlClient.SqlParameter" /> を取得します。</summary>
      <returns>指定されたインデックスにある <see cref="T:System.Data.SqlClient.SqlParameter" />。</returns>
      <param name="index">取得するパラメーターの、0 から始まるインデックス番号。</param>
      <exception cref="T:System.IndexOutOfRangeException">指定したインデックスが存在しません。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Item(System.String)">
      <summary>指定した名前の <see cref="T:System.Data.SqlClient.SqlParameter" /> を取得します。</summary>
      <returns>指定した名前を持つ <see cref="T:System.Data.SqlClient.SqlParameter" />。</returns>
      <param name="parameterName">取得するパラメーターの名前。</param>
      <exception cref="T:System.IndexOutOfRangeException">指定した <paramref name="parameterName" /> が有効ではありません。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Remove(System.Data.SqlClient.SqlParameter)">
      <summary>指定した <see cref="T:System.Data.SqlClient.SqlParameter" /> をコレクションから削除します。</summary>
      <param name="value">コレクションから削除する <see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクト。</param>
      <exception cref="T:System.InvalidCastException">パラメーターが <see cref="T:System.Data.SqlClient.SqlParameter" /> ではありません。</exception>
      <exception cref="T:System.SystemException">パラメーターがコレクション内に存在しません。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Remove(System.Object)">
      <summary>指定した <see cref="T:System.Data.SqlClient.SqlParameter" /> をコレクションから削除します。</summary>
      <param name="value">コレクションから削除するオブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> の指定したインデックス位置から <see cref="T:System.Data.SqlClient.SqlParameter" /> を削除します。</summary>
      <param name="index">削除のする <see cref="T:System.Data.SqlClient.SqlParameter" /> オブジェクトの、0 から始まるインデックス番号。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.String)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> から、指定したパラメーター名の <see cref="T:System.Data.SqlClient.SqlParameter" /> を削除します。</summary>
      <param name="parameterName">削除する <see cref="T:System.Data.SqlClient.SqlParameter" /> の名前。</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.SyncRoot">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlTransaction">
      <summary>SQL Server データベースで実行する Transact-SQL トランザクションを表します。このクラスは継承できません。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Commit">
      <summary>データベース トランザクションをコミットします。</summary>
      <exception cref="T:System.Exception">トランザクションのコミット中にエラーが発生しました。</exception>
      <exception cref="T:System.InvalidOperationException">トランザクションは、既にコミットまたはロールバックされています。または接続が切断されています。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlTransaction.Connection">
      <summary>トランザクションに関連付けられた <see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクトを取得します。トランザクションが既に無効になっている場合は、null が返されます。</summary>
      <returns>トランザクションに関連付けられる <see cref="T:System.Data.SqlClient.SqlConnection" /> オブジェクト。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
      <summary>このトランザクションの <see cref="T:System.Data.IsolationLevel" /> を指定します。</summary>
      <returns>トランザクションの <see cref="T:System.Data.IsolationLevel" />。既定値は、ReadCommitted です。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Rollback">
      <summary>保留中の状態からトランザクションをロールバックします。</summary>
      <exception cref="T:System.Exception">トランザクションのコミット中にエラーが発生しました。</exception>
      <exception cref="T:System.InvalidOperationException">トランザクションは、既にコミットまたはロールバックされています。または接続が切断されています。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
      <summary>トランザクションまたはセーブポイントの名前を指定して、トランザクションを保留中の状態からロールバックします。</summary>
      <param name="transactionName">ロールバックするトランザクションの名前、またはロールバック先のセーブポイント。</param>
      <exception cref="T:System.ArgumentException">トランザクション ファイル名が指定されていません。</exception>
      <exception cref="T:System.InvalidOperationException">トランザクションは、既にコミットまたはロールバックされています。または接続が切断されています。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
      <summary>セーブポイントの名前を指定して、トランザクション内にセーブポイントを作成します。セーブポイントは、トランザクションを部分的にロールバックするために使用できます。</summary>
      <param name="savePointName">セーブポイントの名前。</param>
      <exception cref="T:System.Exception">トランザクションのコミット中にエラーが発生しました。</exception>
      <exception cref="T:System.InvalidOperationException">トランザクションは、既にコミットまたはロールバックされています。または接続が切断されています。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary>
        <see cref="N:System.Data.SqlTypes" /> のすべてのオブジェクトおよび構造体は、INullable インターフェイスを実装しています。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary>構造体が null かどうかを示します。このプロパティは読み取り専用です。</summary>
      <returns>このオブジェクトの値が null の場合は <see cref="T:System.Data.SqlTypes.SqlBoolean" />true。それ以外の場合は false。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary>データベースに格納する、またはデータベースから取得するバイナリ データの可変長ストリームを表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体の新しいインスタンスを初期化し、<see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> プロパティを指定されたバイト配列の定数に設定します。</summary>
      <param name="value">格納または取得するバイト配列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>指定された 2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 値を連結して、新しい <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を作成します。</summary>
      <returns>x と y の値を連結した <see cref="T:System.Data.SqlTypes.SqlBinary" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトとこの <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトを比較し、これらの相対値を示す値を返します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体とオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値この <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトの値はオブジェクト未満。0この <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトはオブジェクトと同じ。0 を超える値この <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトはオブジェクトより大きい。またはオブジェクトは null 参照。</returns>
      <param name="value">この <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体と比較する <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary>指定したオブジェクトとこの <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトを比較し、これらの相対値を示す値を返します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体とオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値この <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトの値はオブジェクト未満。0この <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトはオブジェクトと同じ。0 を超える値この <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトはオブジェクトより大きい。またはオブジェクトは null 参照。</returns>
      <param name="value">この <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体と比較されるオブジェクト。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を連結して、新しい <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を作成します。</summary>
      <returns>
        <paramref name="x" /> パラメーターと <paramref name="y" /> パラメーターを連結した値。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較し、それらの構造体が等しいかどうかを確認します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。いずれかのインスタンスが null の場合、SqlBinary は null になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary>指定したオブジェクト パラメーターを <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトの <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> プロパティと比較します。</summary>
      <returns>オブジェクトが <see cref="T:System.Data.SqlTypes.SqlBinary" /> のインスタンスで、2 つが等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">比較されるオブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体のハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体より大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。<see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。<see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体が null かどうかを示します。このプロパティは読み取り専用です。</summary>
      <returns>null の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary>整数パラメーター <paramref name="index" /> で指定された位置にある <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> プロパティから 1 バイトを取得します。<paramref name="index" /> で示された位置がバイト配列の末尾を超えている場合は、<see cref="T:System.Data.SqlTypes.SqlNullValueException" /> が発生します。このプロパティは読み取り専用です。</summary>
      <returns>整数パラメーターで指定された位置にあるバイト。</returns>
      <param name="index">取得するバイトの位置。</param>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> プロパティに <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> が格納されているときに、プロパティが読み取られました。または<paramref name="index" /> パラメーターが示す位置が、<see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> プロパティで示されるバイト配列の長さを超えています。</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary>
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> プロパティの長さをバイト数で取得します。このプロパティは読み取り専用です。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> プロパティのバイナリ データの長さ。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> プロパティに <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> が格納されているときに、<see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> プロパティが読み取られました。</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体より小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。<see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。<see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較し、それらの構造体が等しくないかどうかを判断します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.DBNull" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> パラメーターを連結して、新しい <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を作成します。</summary>
      <returns>
        <paramref name="x" /> パラメーターと <paramref name="y" /> パラメーターを連結した値。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較し、それらの構造体が等しいかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を <see cref="T:System.Byte" /> 配列に変換します。</summary>
      <returns>
        <see cref="T:System.Byte" /> 配列。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体に変換します。</summary>
      <returns>変換対象の <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体より大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。<see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。<see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary>バイト配列を <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体に変換します。</summary>
      <returns>変換されたバイト配列を表す <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</returns>
      <param name="x">変換されるバイト配列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較し、それらの構造体が等しくないかどうかを判断します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体より小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。<see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を比較して、最初の構造体が 2 番目の構造体以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> を返します。<see cref="T:System.Data.SqlTypes.SqlBinary" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> のこのインスタンスを <see cref="T:System.Data.SqlTypes.SqlGuid" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBinary" /> オブジェクトを文字列に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> の <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> を格納している文字列。<see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> が null の場合は、文字列に "null" が格納されます。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体の値を取得します。このプロパティは読み取り専用です。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体の値。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">プロパティに <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> が格納されているときに、<see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> プロパティが読み取られました。</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary>データベースに格納する、またはデータベースから取得する 1 または 0 の整数値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary>指定したブール値を使用して、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値。true または false。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary>指定した整数値を使用して、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体で使用する値を持つ整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体のビットごとの AND 演算を実行します。</summary>
      <returns>論理 AND 演算の結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値をバイトとして取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値を表すバイト。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> オブジェクトとこの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> オブジェクトを比較し、これらの相対値を示す値を返します。</summary>
      <returns>このインスタンスと値の相対値を示す符号付き数値。Value説明負の整数このインスタンスは、<paramref name="value" /> よりも小さくなっています。0このインスタンスは <paramref name="value" /> と等価です。正の整数このインスタンスは <paramref name="value" /> よりも大きくなっています。または<paramref name="value" /> が null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較する <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> オブジェクト、または null 参照 (Visual Basic の場合は Nothing)。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary>指定したオブジェクトとこの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を比較し、これらの相対値を示す値を返します。</summary>
      <returns>このインスタンスと値の相対値を示す符号付き数値。Value説明負の整数このインスタンスは、<paramref name="value" /> よりも小さくなっています。0このインスタンスは <paramref name="value" /> と等価です。正の整数このインスタンスは <paramref name="value" /> よりも大きくなっています。または<paramref name="value" /> が null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較するオブジェクト、または null 参照 (Visual Basic の場合は Nothing)。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を比較し、それらの構造体が等しいかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary>指定したオブジェクト パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> と比較します。</summary>
      <returns>オブジェクトが <see cref="T:System.Data.SqlTypes.SqlBoolean" /> のインスタンスで、2 つが等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">比較されるオブジェクト。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体のインスタンスの <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> プロパティに割り当てることができる false 値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary>対象のインスタンスのハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は true の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は true の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary>現在の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> が <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> かどうかを示します。</summary>
      <returns>Value が False の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体が null かどうかを示します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体が null の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary>現在の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> が <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> かどうかを示します。</summary>
      <returns>Value が True の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は true の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は true の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較し、等しいかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.DBNull" /> を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体のインスタンスの <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> プロパティに割り当てることができる 1 の値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体で 1 の補数演算を実行します。</summary>
      <returns>指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 1 の補数。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体のビットごとの AND 演算を実行します。</summary>
      <returns>論理 AND 演算の結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>オペランドのビットごとの OR を計算します。</summary>
      <returns>論理 OR 演算の結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較し、等しいかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>指定したパラメーターでビットごとの排他的 OR (XOR) 演算を実行します。</summary>
      <returns>論理 XOR 演算の結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> をブール値に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> に設定されたブール値。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlDouble" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlInt16" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlInt32" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlInt64" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlMoney" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlSingle" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> プロパティと等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体に変換される <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary>false 演算子を使用して、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> をテストし、false かどうかを確認できます。</summary>
      <returns>指定したパラメーターが <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の場合は true を返し、それ以外の場合は false を返します。</returns>
      <param name="x">テストされる <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を比較して、最初の構造体が 2 番目の構造体より大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は true の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> オブジェクト。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を比較して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は true の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary>指定したバイト値を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns>0 または 1 を格納している <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 値。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換されるバイト値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較し、それらが等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は true の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は true の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に対して NOT 演算を実行します。</summary>
      <returns>引数が true だった場合は <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> を持つ <see cref="T:System.Data.SqlTypes.SqlBoolean" />、引数が null だった場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />、それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
      <param name="x">NOT 演算が実行される <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体で 1 の補数演算を実行します。</summary>
      <returns>指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の 1 の補数。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary>true 演算子を使用して、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> をテストし、true かどうかを確認できます。</summary>
      <returns>指定したパラメーター <see cref="T:System.Data.SqlTypes.SqlBoolean" /> が true の場合は true を返し、それ以外の場合は false を返します。</returns>
      <param name="x">テストされる <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体のビットごとの OR 演算を実行します。</summary>
      <returns>ビットごとの OR 演算の結果を Value に持つ新しい <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary>論理値の指定した <see cref="T:System.String" /> 表現を等価の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns>解析した値を格納している <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</returns>
      <param name="s">変換される <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>値が 1 または 0 の新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が true の場合、新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の値は 1 です。それ以外の場合、新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>値が 1 または 0 の新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が true の場合、新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値は 1 です。それ以外の場合、新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>値が 1 または 0 の新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が true の場合、新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値は 1 です。それ以外の場合、新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>値が 1 または 0 の新しい SqlInt16 構造体。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が true の場合、新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の値は 1 です。それ以外の場合、新しい SqlInt16 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>値が 1 または 0 の新しい SqlInt32 構造体。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が true の場合、新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の値は 1 です。それ以外の場合、新しい SqlInt32 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>値が 1 または 0 の新しい SqlInt64 構造体。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が true の場合、新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の値は 1 です。それ以外の場合、新しい SqlInt64 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>値が 1 または 0 の新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が true の場合、新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値は 1 です。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が false の場合、新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値は 0 です。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が 1 でも 0 でもない場合、新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値は <see cref="F:System.Data.SqlTypes.SqlMoney.Null" /> です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>値が 1 または 0 の新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が true の場合、新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の値は 1 です。それ以外の場合、新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>値が 1 または 0 の新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値が true  の場合、 <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の値は 1 です。それ以外の場合、新しい <see cref="T:System.Data.SqlTypes.SqlString" />  構造体の値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を文字列に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> の値を格納している文字列。値が null の場合は、文字列に "null" が格納されます。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体のインスタンスの <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> プロパティに割り当てることができる true 値を表します。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値を取得します。このプロパティは読み取り専用です。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> が <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の場合は true。それ以外の場合は false。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">プロパティが null に設定されています。</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>指定したパラメーターでビットごとの排他的 OR 演算を実行します。</summary>
      <returns>論理 XOR 演算の結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体のインスタンスの <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary>データベースに格納する、またはデータベースから取得する 0 から 255 までの範囲の、8 ビットの符号なし整数を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary>指定したバイト値を使用して、<see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">新しい <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティに格納されるバイト値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を加算した値を計算します。</summary>
      <returns>加算した結果を格納している Value プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドのビットごとの AND を計算します。</summary>
      <returns>ビットごとの AND 演算の結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドのビットごとの OR を計算します。</summary>
      <returns>ビットごとの OR 演算の結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> オブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較する <see cref="T:System.Data.SqlTypes.SqlByte" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドを 2 番目のオペランドで除算します。</summary>
      <returns>除算した結果を格納している <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。いずれかのインスタンスが null の場合、SqlByte は null になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlByte" /> オブジェクトの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティと比較します。</summary>
      <returns>オブジェクトが <see cref="T:System.Data.SqlTypes.SqlByte" /> のインスタンスで、2 つが等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">比較対象の <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary>対象のインスタンスのハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を比較して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体が null かどうかを示すブール値を取得します。</summary>
      <returns>null の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の最大有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の最小有効値を表す定数。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドを 2 番目のオペランドで除算した後の剰余を計算します。</summary>
      <returns>剰余を格納している <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> 値を除算し、剰余を返します。</summary>
      <returns>
        <paramref name="x" /> と <paramref name="y" /> の除算によって得られた剰余。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドの積を計算します。</summary>
      <returns>乗算の積を格納している <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較し、それらが等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.DBNull" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>1 の補数演算子は、<see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドでビットごとの 1 の補数演算を実行します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの 1 の補数を格納している <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を加算した値を計算します。</summary>
      <returns>2 つのオペランドの合計を格納している <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドのビットごとの AND を計算します。</summary>
      <returns>ビットごとの AND 演算の結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドのビットごとの OR を計算します。</summary>
      <returns>ビットごとの OR 演算の結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドを 2 番目のオペランドで除算します。</summary>
      <returns>除算した結果を格納している <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>指定したパラメーターでビットごとの排他的 OR 演算を実行します。</summary>
      <returns>ビットごとの XOR 演算の結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換される <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーター。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体をバイトに変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティと等しい値を持つバイト。</returns>
      <param name="x">バイトに変換される <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>SqlInt64 パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">SqlMoney 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlString" /> を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> で表される数値と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">SqlString クラスのインスタンス。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、SqlBoolean の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary>指定したバイト値を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>指定したパラメーターと等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換されるバイト値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較し、それらが等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlByte" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドを 2 番目のオペランドで除算した後の剰余を計算します。</summary>
      <returns>剰余を格納している <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドの積を計算します。</summary>
      <returns>乗算の積を格納している <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>1 の補数演算子は、<see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドでビットごとの 1 の補数演算を実行します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの 1 の補数を格納している <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドから 2 番目のオペランドを減算します。</summary>
      <returns>最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドから 2 番目のオペランドを減算した結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary>数値の <see cref="T:System.String" /> 形式をそれと等価な 8 ビット符号なし整数に変換します。</summary>
      <returns>String パラメーターで表された 8 ビットの数値を格納している <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
      <param name="s">解析対象の文字列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドから 2 番目のオペランドを減算します。</summary>
      <returns>最初の <see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドから 2 番目のオペランドを減算した結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> が 0 以外の場合は true。0 の場合は false。それ以外の場合は Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> を持つ SqlDecimal 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlByte" /> と同じ値を持つ SqlDouble 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlByte" /> と同じ値を持つ SqlInt16 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlByte" /> を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlByte" /> と同じ値を持つ SqlInt32 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlByte" /> の <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ SqlInt64 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ SqlMoney 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体と同じ <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> を持つ SqlSingle 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> のこのインスタンスを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> の文字列形式を格納している SqlString。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.String" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> の <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> を格納している文字列。Value が null の場合、String は null 文字列になります。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の値を取得します。このプロパティは読み取り専用です。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>指定したパラメーターでビットごとの排他的 OR 演算を実行します。</summary>
      <returns>XOR 演算の結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体のインスタンスの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary>
        <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> または <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" /> をラップする、変更可能な参照型を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary>指定されたバイト配列に基づいて、<see cref="T:System.Data.SqlTypes.SqlBytes" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="buffer">符号なしバイト配列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlBinary" /> 値に基づいて、<see cref="T:System.Data.SqlTypes.SqlBytes" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary>指定された <see cref="T:System.IO.Stream" /> 値に基づいて、<see cref="T:System.Data.SqlTypes.SqlBytes" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="s">
        <see cref="T:System.IO.Stream" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary>内部バッファーへの参照を返します。</summary>
      <returns>内部バッファーへの参照を返します。アンマネージ ポインター上に作成された <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスの場合、内部バッファーのマネージ コピーを返します。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBytes" /> が null かどうかを示すブール値を取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> が null の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary>指定したインデックス位置にある <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Byte" /> 値。</returns>
      <param name="offset">
        <see cref="T:System.Int64" /> 値。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスが保持する値の長さを取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> のインスタンスに格納された値の長さを表す <see cref="T:System.Int64" /> 値。インスタンスから利用できるバッファーがない場合、または値が null の場合は -1 を返します。ストリームでラップされたインスタンスの <see cref="P:System.IO.Stream.Length" /> を返します。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBytes" /> の内部バッファーが保持できる値の最大長を取得します。</summary>
      <returns>内部バッファーが保持できる値の最大長を表す long 型の値。ストリームでラップされた <see cref="T:System.Data.SqlTypes.SqlBytes" /> の場合、-1 を返します。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBytes" /> の null インスタンスを返します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> で true が返されるようなインスタンスを返します。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBytes" /> 構造体に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 構造体。</returns>
      <param name="value">変換対象の <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 構造体。</returns>
      <param name="value">変換対象の <see cref="T:System.Data.SqlTypes.SqlBytes" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBytes" /> のインスタンスから、引数に指定されたバッファーにバイトをコピーし、コピーされたバイト数を返します。</summary>
      <returns>コピーされたバイト数を表す <see cref="T:System.Int64" /> long 値。</returns>
      <param name="offset">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンス内の値のオフセット位置 (<see cref="T:System.Int64" /> long 値)。</param>
      <param name="buffer">コピー対象のバイト配列バッファー。</param>
      <param name="offsetInBuffer">バッファー内のコピー開始位置を示すオフセット値 (<see cref="T:System.Int32" /> 整数)。</param>
      <param name="count">コピーするバイト数を表す <see cref="T:System.Int32" /> 型の整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスの長さを設定します。</summary>
      <param name="value">長さを表す <see cref="T:System.Int64" /> long 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスを null に設定します。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBytes" /> のデータをストリームとして取得または設定します。</summary>
      <returns>SqlBytes データを格納しているストリーム。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスから <see cref="T:System.Data.SqlTypes.SqlBinary" /> を構築して返します。</summary>
      <returns>このインスタンスの <see cref="T:System.Data.SqlTypes.SqlBinary" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlBytes" /> が保持する値のマネージ コピーを返します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlBytes" /> の値を表すバイト配列。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>引数に指定されたバイトから、この <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンスに文字をコピーします。</summary>
      <param name="offset">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> インスタンス内の値のオフセット位置 (<see cref="T:System.Int64" /> long 値)。</param>
      <param name="buffer">コピー対象のバイト配列バッファー。</param>
      <param name="offsetInBuffer">バッファー内のコピー開始位置を示すオフセット値 (<see cref="T:System.Int32" /> 整数)。</param>
      <param name="count">コピーするバイト数を表す <see cref="T:System.Int32" /> 型の整数。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> は、<see cref="T:System.Char" /> 配列または <see cref="T:System.Data.SqlTypes.SqlString" /> インスタンスをラップする変更可能な参照型です。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary>指定された文字配列に基づいて、<see cref="T:System.Data.SqlTypes.SqlChars" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="buffer">
        <see cref="T:System.Char" /> 配列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary>指定された <see cref="T:System.Data.SqlTypes.SqlString" /> 値に基づいて、<see cref="T:System.Data.SqlTypes.SqlChars" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary>内部バッファーへの参照を返します。</summary>
      <returns>内部バッファーへの参照を返します。アンマネージ ポインター上に作成された <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスの場合、内部バッファーのマネージ コピーを返します。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlChars" /> が null かどうかを示すブール値を取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> が null の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary>指定したインデックス位置にある <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Char" /> 値。</returns>
      <param name="offset">
        <see cref="T:System.Int64" /> 値。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスが保持する値の長さを取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスが保持する値の文字長を示す <see cref="T:System.Int64" /> 値。インスタンスから利用できるバッファーがない場合、または値が null の場合は -1 を返します。ストリームでラップされたインスタンスの <see cref="P:System.IO.Stream.Length" /> を返します。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary>内部バッファーが保持できる値の最大長 (2 バイト文字単位) を取得します。</summary>
      <returns>内部バッファーが保持できる値の最大長 (2 バイト文字単位) を表す <see cref="T:System.Int64" /> 値。ストリームでラップされた <see cref="T:System.Data.SqlTypes.SqlChars" /> の場合、-1 を返します。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlChars" /> の null インスタンスを返します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> で true が返されるようなインスタンスを返します。詳細については、「NULL 値の処理」を参照してください。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。</returns>
      <param name="value">変換対象の <see cref="T:System.Data.SqlTypes.SqlChars" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlChars" /> 構造体に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 構造体。</returns>
      <param name="value">変換対象の <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlChars" /> のインスタンスから、引数に指定されたバッファーに文字をコピーし、コピーされた文字数を返します。</summary>
      <returns>コピーされたバイト数を表す <see cref="T:System.Int64" />long 値。</returns>
      <param name="offset">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンス内の値のオフセット位置 (<see cref="T:System.Int64" />long 値)。</param>
      <param name="buffer">コピー対象の文字配列バッファー。</param>
      <param name="offsetInBuffer">バッファー内のコピー開始位置を示すオフセット値 (<see cref="T:System.Int32" /> 整数)。</param>
      <param name="count">コピーする文字数を表す <see cref="T:System.Int32" /> 型の整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスの長さを設定します。</summary>
      <param name="value">長さを表す <see cref="T:System.Int64" />long 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスを null に設定します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスを、対応する等価の <see cref="T:System.Data.SqlTypes.SqlString" /> 表現に変換します。</summary>
      <returns>この型の <see cref="T:System.Data.SqlTypes.SqlString" /> 表現。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlChars" /> が保持する値のマネージ コピーを返します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlChars" /> の値を表す文字配列。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>引数に指定されたバッファーから、この <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンスに文字をコピーします。</summary>
      <param name="offset">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> インスタンス内の値のオフセット位置 (long 値)。</param>
      <param name="buffer">コピー対象の文字配列バッファー。</param>
      <param name="offsetInBuffer">バッファー内のコピー開始位置を示すオフセット値 (<see cref="T:System.Int32" /> 整数)。</param>
      <param name="count">コピーする文字数を表す <see cref="T:System.Int32" /> 型の整数。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の比較オプション値を指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary>文字のアルファベット値ではなく、文字の数値に基づいて並べ替えるように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary>バイナリでの並べ替えを実行します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> の比較で、大文字と小文字を区別しないように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> の比較で、カナ型を無視するように指定します。カナ型とは、日本語の発音を表すひらがなとカタカナの文字を指します。ひらがなは、本来の日本語の表現と単語に使用し、カタカナは "コンピューター" または "インターネット" などの外来語に使用します。発音は、ひらがなとカタカナのどちらでも表現できます。この値が選択されている場合、ある発音を示すひらがなは、同じ発音を示すカタカナと同一であると見なされます。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> の比較で、発音区別符など、空白以外の組み合わせ文字を無視するように指定します。Unicode 標準は、基本文字を組み合わせて生成される新しい文字を組み合わせ文字として定義しています。空白以外の組み合わせ文字は、表示するときに文字と文字の間に空白が入りません。空白以外の組み合わせ文字の詳細については、http://www.unicode.org の「The Unicode Standard」を参照してください。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> の比較で、半角と全角の区別を無視するように指定します。たとえば、日本語のカタカナ文字は、全角または半角で記述できます。この値を選択した場合、全角で記述されたカタカナ文字は、半角で記述されたカタカナ文字と同一であると見なされます。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> の比較で、既定のオプション設定を指定します。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary>データベースに格納する、またはデータベースから取得する日付と時刻のデータを表します。値の範囲は 1753 年 1 月 1 日から 9999 年 12 月 31 日までで、精度は 3.33 ミリ秒です。<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体は、基になるデータ構造体が、対応する .NET Framework の型 <see cref="T:System.DateTime" /> (12:00:00 AM 1/1/0001 から 11:59:59 PM 12/31/9999 までの任意の日時を、100 ナノ秒の精度で表現できる) とは異なります。<see cref="T:System.Data.SqlTypes.SqlDateTime" /> では、00:00:00 AM 1/1/1900 を起点とした相対的な差が格納されます。つまり、"00:00:00 AM 1/1/1900" を整数に変換すると、0 が返されます。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary>
        <see cref="T:System.DateTime" /> 値を指定して、<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">DateTime 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary>パラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="dayTicks">日付をタイマー刻みとして表す整数値。</param>
      <param name="timeTicks">時刻をタイマー刻みとして表す整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>年、月、日を初期化するパラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="year">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の年を表す整数値。</param>
      <param name="month">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の月を表す整数値。</param>
      <param name="day">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の日付数字を表す整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>新しい構造体の年、月、日、時、分、秒を初期化するパラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="year">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の年を表す整数値。</param>
      <param name="month">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の月を表す整数値。</param>
      <param name="day">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の月の日付を表す整数値。</param>
      <param name="hour">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の時間を表す整数値。</param>
      <param name="minute">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の分を表す整数値。</param>
      <param name="second">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の秒を表す整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>新しい構造体の年、月、日、時、分、秒、ミリ秒を初期化するパラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="year">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の年を表す整数値。</param>
      <param name="month">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の月を表す整数値。</param>
      <param name="day">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の月の日付を表す整数値。</param>
      <param name="hour">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の時間を表す整数値。</param>
      <param name="minute">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の分を表す整数値。</param>
      <param name="second">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の秒を表す整数値。</param>
      <param name="millisecond">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体のミリ秒を表す double 型の値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>新しい構造体の年、月、日、時、分、秒、10 億分の 1 秒を初期化するパラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="year">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の年を表す整数値。</param>
      <param name="month">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の月を表す整数値。</param>
      <param name="day">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の日付を表す整数値。</param>
      <param name="hour">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の時間を表す整数値。</param>
      <param name="minute">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の分を表す整数値。</param>
      <param name="second">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の秒を表す整数値。</param>
      <param name="bilisecond">新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の 10 億分の 1 秒を表す整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> を指定した TimeSpan に追加します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 値。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 値。</param>
      <param name="t">Timespan 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体とこの <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体を比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスは、<see cref="T:System.Data.SqlTypes.SqlDateTime" /> よりも小さくなっています。0このインスタンスは <see cref="T:System.Data.SqlTypes.SqlDateTime" /> と同じです。0 を超える値このインスタンスは <see cref="T:System.Data.SqlTypes.SqlDateTime" /> よりも大きくなっています。または<see cref="T:System.Data.SqlTypes.SqlDateTime" /> が null 参照 (Visual Basic の場合は Nothing ) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> とこの <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体を比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の日付を表すタイマー刻みの数を取得します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> プロパティに格納されている日付を表すタイマー刻みの数。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <see cref="N:System.Data.SqlTypes" /> 構造体の Value プロパティが null に設定されている場合にスローされる例外。</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary>指定したオブジェクト パラメーターを <see cref="T:System.Data.SqlTypes.SqlDateTime" /> オブジェクトの <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> プロパティと比較します。</summary>
      <returns>オブジェクトが <see cref="T:System.Data.SqlTypes.SqlDateTime" /> のインスタンスで、2 つが等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">比較されるオブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary>このインスタンスのハッシュ コードを取得します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体が null かどうかを示します。</summary>
      <returns>null の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の有効な日付の最大値を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の有効な日付の最小値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスの論理比較を実行して、等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.DBNull" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体に、指定した <see cref="T:System.TimeSpan" /> パラメーターの <paramref name="t" /> で示された時間を加算します。</summary>
      <returns>新しい <see cref="T:System.Data.SqlTypes.SqlDateTime" />。いずれかの引数が <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" /> の場合、新しい <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> は <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <param name="t">
        <see cref="T:System.TimeSpan" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体を <see cref="T:System.DateTime" /> 構造体に変換します。</summary>
      <returns>指定した <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> プロパティと同じ日付と時刻の値を格納している <see cref="P:System.DateTime.Date" /> プロパティと <see cref="P:System.DateTime.TimeOfDay" /> プロパティを持つ <see cref="T:System.DateTime" /> オブジェクト。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDateTime" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターによって表される日付と時刻に等しい <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlString" /> が null の場合、新しく作成される <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の Value は null になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary>
        <see cref="T:System.DateTime" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体に変換します。</summary>
      <returns>指定した <see cref="T:System.DateTime" /> 構造体の <see cref="P:System.DateTime.Date" /> プロパティと <see cref="P:System.DateTime.TimeOfDay" /> プロパティの組み合わせに等しい <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</returns>
      <param name="value">DateTime 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスの論理比較を実行して、等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDateTime" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体から、指定した <see cref="T:System.TimeSpan" /> 構造体の <paramref name="t" /> を減算します。</summary>
      <returns>減算の結果を表す <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
      <param name="t">
        <see cref="T:System.TimeSpan" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary>指定した <see cref="T:System.String" /> 形式の日付と時刻を等価の <see cref="T:System.Data.SqlTypes.SqlDateTime" /> に変換します。</summary>
      <returns>指定した string によって表される日付と時刻に等しい <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</returns>
      <param name="s">解析対象の string。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary>値が 1 時間に相当するタイマー刻み数である定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary>値が 1 分に相当するタイマー刻み数である定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary>値が 1 秒に相当するタイマー刻み数である定数。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> インスタンスから、指定した Timespan を減算します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 値。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 値。</param>
      <param name="t">Timespan 値。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の時刻を表すタイマー刻みの数を取得します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の時刻を表すタイマー刻みの数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体に格納されている日付と時刻を表す文字列である値を持つ SqlString 構造体。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体を <see cref="T:System.String" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> プロパティを表す String。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の値を取得します。このプロパティは読み取り専用です。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体の値。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <see cref="N:System.Data.SqlTypes" /> 構造体の Value プロパティが null に設定されている場合にスローされる例外。</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary>- 10^38 +1 から 10^38 - 1 までの固定精度小数部桁数の数値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>パラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="bPrecision">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを表すために使用できる最大桁数。</param>
      <param name="bScale">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体に対して <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを解決するための小数部桁数。</param>
      <param name="fPositive">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体が正数を表すか負数を表すかを示すブール値。</param>
      <param name="data1">data2、data3、および data4 と組み合わされて、新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を表す 128 ビット符号なし整数を構成する 32 ビット符号なし整数。</param>
      <param name="data2">data1、data3、および data4 と組み合わされて、新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を表す 128 ビット符号なし整数を構成する 32 ビット符号なし整数。</param>
      <param name="data3">data1、data2、および data4 と組み合わされて、新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を表す 128 ビット符号なし整数を構成する 32 ビット符号なし整数。</param>
      <param name="data4">data1、data2、および data3 と組み合わされて、新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を表す 128 ビット符号なし整数を構成する 32 ビット符号なし整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary>パラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="bPrecision">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを表すために使用できる最大桁数。</param>
      <param name="bScale">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体に対して <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを解決するための小数部桁数。</param>
      <param name="fPositive">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体が正数を表すか負数を表すかを示すブール値。</param>
      <param name="bits">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> の値を指定する 128 ビット符号なし整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary>指定した <see cref="T:System.Decimal" /> 値を使用して、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体として格納される <see cref="T:System.Decimal" /> 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary>指定した倍精度浮動小数点数パラメーターを使用して、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="dVal">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を表す倍精度浮動小数点数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary>指定した整数値を使用して、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値として使用される指定した整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary>指定した long 型整数値を使用して、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値として使用される指定した long 型整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary>Abs メソッドは、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの絶対値を取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの絶対値を表す符号なし数値を格納している <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="n">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドを加算した値を計算します。</summary>
      <returns>合計を格納している <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドの小数点以下桁数は、digits パラメーターで示される桁数に調整されます。fRound パラメーターの値に応じて、値は、適切な桁数に丸められるか、切り捨てられます。</summary>
      <returns>調整された数値を格納している <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="n">調整される <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="digits">調整した構造体の桁数。</param>
      <param name="fRound">このパラメーターが true の場合、新しい Value は丸められます。false の場合、値は切り捨てられます。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値のバイナリ表現をバイト配列として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値のバイナリ表現を格納しているバイト配列。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体以上で、最小の整数を返します。</summary>
      <returns>指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体以上で、最小の値を表す <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
      <param name="n">切り上げ値を計算する対象の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オブジェクトとこの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> とこの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドの値を示された精度と小数点以下桁数に調整します。</summary>
      <returns>パラメーターで示された精度と小数点以下桁数に調整された Value を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="n">値が調整される <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="precision">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の精度。</param>
      <param name="scale">新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の小数点以下桁数。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体のバイナリ表現を整数の配列として取得します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体のバイナリ表現を格納している整数の配列。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>除算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドを 2 番目のオペランドで除算した結果を計算します。</summary>
      <returns>除算した結果を格納している <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドの論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。いずれかのインスタンスが null の場合、SqlDecimal の値は null になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDecimal" /> インスタンスの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティと比較します。</summary>
      <returns>オブジェクトが <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のインスタンスで、2 つが等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">比較対象の <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 数を次に小さな整数に丸めます。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の整数部を格納している <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="n">切り下げ値を計算する対象の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary>対象のインスタンスのハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の論理比較を実行して、最初の構造体が 2 番目の構造体より大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体が null かどうかを示します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体が null の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> がゼロより大きいかどうかを示します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> に null が代入されている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の論理比較を実行して、最初の構造体が 2 番目の構造体より小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" /> プロパティの最大有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" /> プロパティの最大値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の最大値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の最小値を表す定数。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>乗算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの積を計算します。</summary>
      <returns>乗算の積を格納している <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> クラスのこのインスタンスに割り当てることができる <see cref="T:System.DBNull" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドを加算した値を計算します。</summary>
      <returns>合計を格納している <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>除算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドを 2 番目のオペランドで除算した結果を計算します。</summary>
      <returns>除算した結果を格納している <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドの論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを <see cref="T:System.Decimal" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> と等しい値を持つ新しい Decimal 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターで表される値と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">変換される <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <see cref="T:System.Double" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Double" /> パラメーターの値と等しい値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Double" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の論理比較を実行して、最初の構造体が 2 番目の構造体より大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を SqlDecimal に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> オペランドを <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <see cref="T:System.Decimal" /> 値を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>Decimal パラメーターの値と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">変換される <see cref="T:System.Decimal" /> 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary>指定した <see cref="T:System.Int64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Int64" /> パラメーターの値と等しい <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Int64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の論理比較を実行して、最初の構造体が 2 番目の構造体より小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDecimal" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>乗算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの積を計算します。</summary>
      <returns>乗算の積を格納している <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドから 2 番目のオペランドを減算した結果を計算します。</summary>
      <returns>減算した結果を格納している Value プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary>単項マイナス演算子は、<see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを無効にします。</summary>
      <returns>否定の結果を格納している値を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">無効にされる <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary>数値の <see cref="T:System.String" /> 形式をそれと等価な <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>指定した <see cref="T:System.String" /> に格納されている値と等価の <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
      <param name="s">解析対象の文字列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を指定した指数で累乗します。</summary>
      <returns>結果を格納している <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="n">累乗される <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="exp">数値を累乗する指数を示す double 値。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティを表すための最大桁数を取得します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の Value を表すときに使用する最大桁数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>指定した精度で、指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値に最も近い数値を取得します。</summary>
      <returns>丸め演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="n">丸められる <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="position">戻り値の小数点以下の有効桁数 (精度)。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> を解決するための小数部の桁数を取得します。</summary>
      <returns>Value プロパティを解決するための小数部桁数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティの符号を示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の符号を示す数値。</returns>
      <param name="n">評価される符号を持つ <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> オペランドから 2 番目のオペランドを減算した結果を計算します。</summary>
      <returns>減算した結果を格納している Value プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary>このインスタンスの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティの内容と等しい double 値を返します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティの 10 進形式。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> が 0 以外の場合は true。0 の場合は false。それ以外の場合は Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の Value と等しい Value を持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値が true の場合、<see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体のValueは 1 になります。それ以外の場合、<see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の Value は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のインスタンスと同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のインスタンスと同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のインスタンスと同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のインスタンスと同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のインスタンスと同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> のインスタンスと同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値の文字列表現を値として持つ <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.String" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティの文字列形式を格納している新しい <see cref="T:System.String" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を、目的の位置で切り捨てます。</summary>
      <returns>整数部で値を切り捨てるには、<paramref name="position" /> パラメーターに、切り捨てる位置に対応する負の値を指定します。</returns>
      <param name="n">切り捨てられる <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
      <param name="position">数値を切り捨てる小数部の位置。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体の値を取得します。このプロパティは読み取り専用です。</summary>
      <returns>-79,228,162,514,264,337,593,543,950,335 から 79,228,162,514,162,514,264,337,593,543,950,335 までの範囲の数値。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary>データベースに格納する、またはデータベースから取得する -1.79E +308 から 1.79E +308 の範囲内の浮動小数点数を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary>新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> プロパティを設定する倍精度浮動小数点数パラメーターを指定して、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> に使用する値を持つ倍精度浮動小数点数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>加算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの合計を計算します。</summary>
      <returns>2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの合計。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> とこの <see cref="T:System.Data.SqlTypes.SqlDouble" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Data.SqlTypes.SqlDouble" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> とこの <see cref="T:System.Data.SqlTypes.SqlDouble" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing ) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>除算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドを 2 番目のオペランドで除算します。</summary>
      <returns>除算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスの論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary>指定したオブジェクト パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> オブジェクトの <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> プロパティと比較します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">比較されるオブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体のハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> インスタンスが null かどうかを示すブール値を返します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> が null の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の最大値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の最小有効値を表す定数。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>乗算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの積を計算します。</summary>
      <returns>2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較し、等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.DBNull" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>加算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの合計を計算します。</summary>
      <returns>2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの合計。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>除算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドを 2 番目のオペランドで除算します。</summary>
      <returns>除算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスの論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> プロパティに応じて、0 または 1 の <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlBoolean" /> が <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
      <param name="x">変換される <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を倍精度浮動小数点数に変換します。</summary>
      <returns>指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値と等価な倍精度浮動小数点数。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> で表された数値と等しい <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" />。<see cref="T:System.Data.SqlTypes.SqlString" /> が <see cref="F:System.Data.SqlTypes.SqlString.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlByte" /> が <see cref="F:System.Data.SqlTypes.SqlByte.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlDecimal" /> が <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlInt16" /> が <see cref="F:System.Data.SqlTypes.SqlInt16.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" />。<see cref="T:System.Data.SqlTypes.SqlInt32" /> が<see cref="F:System.Data.SqlTypes.SqlInt32.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" />。<see cref="T:System.Data.SqlTypes.SqlInt64" /> が<see cref="F:System.Data.SqlTypes.SqlInt64.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" />。<see cref="T:System.Data.SqlTypes.SqlMoney" /> が <see cref="F:System.Data.SqlTypes.SqlMoney.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlSingle" /> が <see cref="F:System.Data.SqlTypes.SqlSingle.Null" /> の場合、<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体は <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary>指定した double 値を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>指定した倍精度浮動小数点数パラメーターと同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
      <param name="x">変換する double 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較し、それらが等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDouble" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>乗算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの積を計算します。</summary>
      <returns>2 つの <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドの積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>減算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドから 2 番目のオペランドを減算します。</summary>
      <returns>減算の結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値と符号が逆の値を返します。</summary>
      <returns>符号が逆の値を格納している <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary>数値の <see cref="T:System.String" /> 形式をそれと等価の倍精度浮動小数点数に変換します。</summary>
      <returns>String で表された値を格納している <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
      <param name="s">解析対象の文字列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>減算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlDouble" /> オペランドから 2 番目のオペランドを減算します。</summary>
      <returns>減算の結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> が 0 以外の場合は、<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> になる <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> を持つ SqlBoolean 構造体。<see cref="T:System.Data.SqlTypes.SqlDouble" /> がゼロの場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体が <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の Value と等しい Value を持つ SqlByte 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>変換された値がこの SqlDouble の丸められた値に等しい、新しい SqlDecimal 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値の整数部と等しい Value を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値の整数部と等しい Value を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値の整数部と等しい Value を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> の値と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ新しい SqlMoney 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> の <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> を持つ新しい SqlSingle 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> の <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> を表す SqlString。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を文字列に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlDouble" /> の <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> を表す文字列。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値を取得します。このプロパティは読み取り専用です。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体の値。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体のインスタンスの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary>データベースに格納する、またはデータベースから取得する GUID を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary>指定したバイト配列パラメーターを使用して、<see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">バイト配列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary>指定した <see cref="T:System.Guid" /> パラメーターを使用して、<see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="g">
        <see cref="T:System.Guid" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>指定した値を使用して、<see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="a">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の最初の 4 バイト。</param>
      <param name="b">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次の 2 バイト。</param>
      <param name="c">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次の 2 バイト。</param>
      <param name="d">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
      <param name="e">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
      <param name="f">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
      <param name="g">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
      <param name="h">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
      <param name="i">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
      <param name="j">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
      <param name="k">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の次のバイト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary>指定した <see cref="T:System.String" /> パラメーターを使用して、<see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="s">
        <see cref="T:System.String" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlGuid" /> とこの <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体を比較し、これらの相対値を示す値を返します。最後の 6 バイト以外も比較しますが、最後の 6 バイトを比較では最上位バイトとして扱います。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Data.SqlTypes.SqlGuid" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary>指定したオブジェクトとこの <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体を比較し、これらの相対値を示す値を返します。最後の 6 バイト以外も比較しますが、最後の 6 バイトを比較では最上位バイトとして扱います。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。いずれかのインスタンスが null の場合、SqlGuid は null になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary>指定したオブジェクト パラメーターを <see cref="T:System.Data.SqlTypes.SqlGuid" /> オブジェクトの <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> プロパティと比較します。</summary>
      <returns>オブジェクトが <see cref="T:System.Data.SqlTypes.SqlGuid" /> のインスタンスで、2 つが等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">比較されるオブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体のハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体が null かどうかを示すブール値を取得します。</summary>
      <returns>null の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の論理比較を実行して、等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.DBNull" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlGuid" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlGuid" />。</returns>
      <param name="x">SqlBinary オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlGuid" /> パラメーターを <see cref="T:System.Guid" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> と等しい新しい <see cref="T:System.Guid" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlGuid" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターで表される値と等しい <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlGuid" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary>指定した <see cref="T:System.Guid" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlGuid" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Guid" /> パラメーターと等しい <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlGuid" />。</returns>
      <param name="x">
        <see cref="T:System.Guid" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の論理比較を実行して、等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンス以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlGuid" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary>指定した <see cref="T:System.String" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlGuid" /> に変換します。</summary>
      <returns>指定した <see cref="T:System.String" /> に格納されている値と等価の <see cref="T:System.Data.SqlTypes.SqlGuid" />。</returns>
      <param name="s">解析対象の文字列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体をバイト配列に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> を表すバイト配列。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBinary" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体のバイトを格納している SqlBinary 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の文字列形式を格納している <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体を <see cref="T:System.String" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の文字列形式を格納している <see cref="T:System.String" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体の値を取得します。このプロパティは読み取り専用です。</summary>
      <returns>
        <see cref="T:System.Guid" /> 構造体。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary>データベースに格納する、またはデータベースから取得する 16 ビット符号付き整数を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary>指定した短整数パラメーターを使用して、<see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">短整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドの合計を計算します。</summary>
      <returns>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドの合計を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドのビットごとの AND を計算します。</summary>
      <returns>ビットごとの AND の結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドのビットごとの OR を計算します。</summary>
      <returns>ビットごとの OR の結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> とこの <see cref="T:System.Data.SqlTypes.SqlInt16" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Data.SqlTypes.SqlInt16" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> とこの <see cref="T:System.Data.SqlTypes.SqlInt16" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはobject が null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドを 2 番目のオペランドで除算します。</summary>
      <returns>除算した結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。いずれかのインスタンスが null の場合、SqlInt16 は null になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary>指定したオブジェクトを <see cref="T:System.Data.SqlTypes.SqlInt16" /> オブジェクトの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティと比較します。</summary>
      <returns>オブジェクトが <see cref="T:System.Data.SqlTypes.SqlInt16" /> のインスタンスで、2 つが等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">比較されるオブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary>対象のインスタンスのハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を比較して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体が null かどうかを示します。</summary>
      <returns>null の場合は true。それ以外の場合は false。詳細については、「NULL 値の処理」を参照してください。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を比較して、最初の構造体が 2 番目の構造体以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> の最大有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> の最小有効値を表す定数。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドを 2 番目のオペランドで除算した後の剰余を計算します。</summary>
      <returns>剰余を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 値を除算し、剰余を返します。</summary>
      <returns>
        <paramref name="x" /> と <paramref name="y" /> の除算によって得られた剰余。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 値。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの積を計算します。</summary>
      <returns>2 つのパラメーターの積を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の論理比較を実行して、等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.DBNull" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>~ 演算子は、<see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドでビットごとの 1 の補数演算を実行します。</summary>
      <returns>指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の補数を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドの合計を計算します。</summary>
      <returns>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドの合計を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドのビットごとの AND を計算します。</summary>
      <returns>ビットごとの AND の結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドのビットごとの OR を計算します。</summary>
      <returns>ビットごとの OR の結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドを 2 番目のオペランドで除算します。</summary>
      <returns>除算した結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>指定したパラメーターでビットごとの排他的 OR 演算を実行します。</summary>
      <returns>ビットごとの XOR の結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を短整数に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの Value と等しい値を持つ短整数。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトを <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト パラメーターで表される値と等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を比較して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary>指定した短整数を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>指定した短整数と同じ値を持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">短整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の論理比較を実行して、等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> の 2 つのインスタンスを比較して、最初のインスタンスが 2 番目のインスタンスより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を比較して、最初の構造体が 2 番目の構造体以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt16" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドを 2 番目のオペランドで除算した後の剰余を計算します。</summary>
      <returns>剰余を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの積を計算します。</summary>
      <returns>2 つのパラメーターの積を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>~ 演算子は、<see cref="T:System.Data.SqlTypes.SqlByte" /> オペランドでビットごとの 1 の補数演算を実行します。</summary>
      <returns>指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の補数を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <returns>減算の結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary>単項マイナス演算子は、<see cref="T:System.Data.SqlTypes.SqlInt16" /> オペランドの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> を無効にします。</summary>
      <returns>符号が逆の値を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary>数値の <see cref="T:System.String" /> 形式を等価の 16 ビット符号付き整数に変換します。</summary>
      <returns>指定した <see cref="T:System.String" /> に格納されている値と等しい 16 ビット符号付き整数。</returns>
      <param name="s">解析対象の文字列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <returns>減算の結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> が 0 以外の場合は true。0 の場合は false。それ以外の場合は Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlInt16" /> の値が 0 より小さいか、255 を超える場合、<see cref="T:System.OverflowException" /> が発生します。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の値と等しい Value を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の値と等しい Value を持つ新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の値と等しい Value を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の値と等しい Value を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の値と等しい Value を持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の値と等しい Value を持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> のこのインスタンスの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> を表す <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体を <see cref="T:System.String" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> のインスタンスの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> を表す <see cref="T:System.String" /> オブジェクト。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体のインスタンスの値を取得します。このプロパティは読み取り専用です。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体の値を表す短整数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>指定したパラメーターでビットごとの排他的 OR 演算を実行します。</summary>
      <returns>XOR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体のインスタンスの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary>データベースに格納する、またはデータベースから取得する 32 ビット符号付き整数を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary>指定した整数値を使用して、<see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">変換される整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を加算した値を計算します。</summary>
      <returns>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の合計を格納している <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> オペランドのビットごとの AND を計算します。</summary>
      <returns>ビットごとの AND 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体のビットごとの OR を計算します。</summary>
      <returns>ビットごとの OR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> とこの <see cref="T:System.Data.SqlTypes.SqlInt32" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Data.SqlTypes.SqlInt32" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> とこの <see cref="T:System.Data.SqlTypes.SqlInt32" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを 2 番目のパラメーターで除算します。</summary>
      <returns>除算した結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。いずれかのインスタンスが null の場合、SqlInt32 は null になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary>指定したオブジェクト パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt32" /> オブジェクトの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティと比較します。</summary>
      <returns>オブジェクトが <see cref="T:System.Data.SqlTypes.SqlInt32" /> のインスタンスで、2 つが等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">比較されるオブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary>対象のインスタンスのハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体が null かどうかを示します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> が null の場合、このプロパティは true になります。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> の最大有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> の最小有効値を表す定数。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを 2 番目のパラメーターで除算した後の剰余を計算します。</summary>
      <returns>剰余を格納している <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> 値を除算し、剰余を返します。</summary>
      <returns>
        <paramref name="x" /> と <paramref name="y" /> の除算によって得られた剰余。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 値。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの積を計算します。</summary>
      <returns>2 つのパラメーターの積を格納している <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> クラスのこのインスタンスに割り当てることができる <see cref="T:System.DBNull" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体でビットごとの 1 の補数演算を実行します。</summary>
      <returns>1 の補数演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を加算した値を計算します。</summary>
      <returns>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の合計を格納している <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> オペランドのビットごとの AND を計算します。</summary>
      <returns>ビットごとの AND 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体のビットごとの OR を計算します。</summary>
      <returns>ビットごとの OR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを 2 番目のパラメーターで除算します。</summary>
      <returns>除算した結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体でビットごとの排他的 OR 演算を実行します。</summary>
      <returns>ビットごとの XOR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を整数に変換します。</summary>
      <returns>変換された整数値。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>SqlInt64 パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトを <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターで表される値と等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> プロパティを <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary>指定した整数を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>整数パラメーターと等しい Value プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを比較して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt32" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを 2 番目のパラメーターで除算した後の剰余を計算します。</summary>
      <returns>剰余を格納している <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの積を計算します。</summary>
      <returns>2 つのパラメーターの積を格納している <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体でビットごとの 1 の補数演算を実行します。</summary>
      <returns>1 の補数演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <returns>減算の結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> オペランドの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> を無効にします。</summary>
      <returns>符号が逆の値を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary>数値の <see cref="T:System.String" /> 形式を等価の 32 ビット符号付き整数に変換します。</summary>
      <returns>指定した <see cref="T:System.String" /> に格納されている値と等しい 32 ビット符号付き整数。</returns>
      <param name="s">解析対象の <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <returns>減算の結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティを持つ <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> が 0 以外の場合は true。0 の場合は false。それ以外の場合は Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の Value と等しい Value を持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。SqlInt32 の値が 0 より小さいか、255 を超える場合、<see cref="T:System.OverflowException" /> が発生します。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.String" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> の値と等しい <see cref="T:System.String" /> 構造体。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の値を取得します。このプロパティは読み取り専用です。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体の値を表す整数。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">プロパティに <see cref="F:System.Data.SqlTypes.SqlInt32.Null" /> が格納されています。</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体でビットごとの排他的 OR 演算を実行します。</summary>
      <returns>ビットごとの XOR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体のインスタンスの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary>データベースに格納する、またはデータベースから取得する 64 ビット符号付き整数を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary>指定した長整数を使用して、<see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">長整数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの合計を計算します。</summary>
      <returns>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの合計と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> オペランドのビットごとの AND を計算します。</summary>
      <returns>ビットごとの AND 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> オペランドのビットごとの OR を計算します。</summary>
      <returns>ビットごとの OR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> とこの <see cref="T:System.Data.SqlTypes.SqlInt64" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Data.SqlTypes.SqlInt64" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> とこの <see cref="T:System.Data.SqlTypes.SqlInt64" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing ) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを 2 番目のパラメーターで除算します。</summary>
      <returns>除算の結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。いずれかのインスタンスが null の場合、SqlInt64 は null になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary>指定したオブジェクト パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> オブジェクトの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティと比較します。</summary>
      <returns>オブジェクトが <see cref="T:System.Data.SqlTypes.SqlInt64" /> のインスタンスで、2 つが等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">比較されるオブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary>対象のインスタンスのハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体が null かどうかを示すブール値を取得します。</summary>
      <returns>null の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の最大有効値を表す定数。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の最小有効値を表す定数。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを 2 番目のパラメーターで除算した後の剰余を計算します。</summary>
      <returns>剰余を格納している <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> 値を除算し、剰余を返します。</summary>
      <returns>
        <paramref name="x" /> と <paramref name="y" /> の除算によって得られた剰余。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 値。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの積を計算します。</summary>
      <returns>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの積と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの SqlInt64 パラメーターの論理比較を実行して、等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.DBNull" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> オペランドでビットごとの 1 の補数演算を実行します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの 1 の補数と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの合計を計算します。</summary>
      <returns>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの合計と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> オペランドのビットごとの AND を計算します。</summary>
      <returns>ビットごとの AND 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> オペランドのビットごとの OR を計算します。</summary>
      <returns>ビットごとの OR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを 2 番目のパラメーターで除算します。</summary>
      <returns>除算の結果を格納している <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>指定したパラメーターでビットごとの排他的 OR 演算を実行します。</summary>
      <returns>ビットごとの XOR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを long 型に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> の <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> と等しい新しい long 値。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの整数部と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターで表される値と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
      <param name="x">変換される <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary>long 型パラメーターを <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>long 型パラメーターの値と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">長整数値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの SqlInt64 パラメーターの論理比較を実行して、等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlInt64" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを 2 番目のパラメーターで除算した後の剰余を計算します。</summary>
      <returns>剰余を格納している <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの積を計算します。</summary>
      <returns>2 つの <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの積と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> オペランドでビットごとの 1 の補数演算を実行します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの 1 の補数と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <returns>減算の結果と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary>単項マイナス演算子は、<see cref="T:System.Data.SqlTypes.SqlInt64" /> オペランドの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を無効にします。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの符号が逆の <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary>数値の <see cref="T:System.String" /> 形式を等価の 64 ビット符号付き整数に変換します。</summary>
      <returns>指定した <see cref="T:System.String" /> に格納されている値と等しい 64 ビット符号付き整数。</returns>
      <param name="s">解析対象の <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <returns>減算の結果と等しい <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> が 0 以外の場合は true。0 の場合は false。それ以外の場合は Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の Value と等しい Value を持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> の値を表す <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> のこのインスタンスを <see cref="T:System.String" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> の値を表す <see cref="T:System.String" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の値を取得します。このプロパティは読み取り専用です。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体の値を表す長整数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>指定したパラメーターでビットごとの排他的 OR 演算を実行します。</summary>
      <returns>ビットごとの XOR 演算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体のインスタンスの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary>データベースに格納する、またはデータベースから取得する通貨の値を表します。値の範囲は -2 63 (-922,337,203,685,477.5808) から 2 63 -1 (+922,337,203,685,477.5807) までで、精度は通貨単位の 1/10,000 です。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary>指定した <see cref="T:System.Decimal" /> 値を使用して、<see cref="T:System.Data.SqlTypes.SqlMoney" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">初期化する通貨の値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary>指定した double 値を使用して、<see cref="T:System.Data.SqlTypes.SqlMoney" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">初期化する通貨の値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary>指定した整数値を使用して、<see cref="T:System.Data.SqlTypes.SqlMoney" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">初期化する通貨の値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary>指定した長整数値を使用して、<see cref="T:System.Data.SqlTypes.SqlMoney" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">初期化する通貨の値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの合計を計算します。</summary>
      <returns>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの合計を格納している <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> とこの <see cref="T:System.Data.SqlTypes.SqlMoney" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Data.SqlTypes.SqlMoney" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> とこの <see cref="T:System.Data.SqlTypes.SqlMoney" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>除算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを 2 番目のパラメーターで除算します。</summary>
      <returns>除算の結果を格納している <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。いずれかのインスタンスが null の場合、SqlMoney は null になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary>指定したオブジェクト パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> オブジェクトの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティと比較します。</summary>
      <returns>Equals は、オブジェクトが <see cref="T:System.Data.SqlTypes.SqlMoney" /> のインスタンスで、2 つが等しい場合は true を返します。それ以外の場合は false を返します。</returns>
      <param name="value">比較されるオブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary>このインスタンスのハッシュ コードを取得します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体が null かどうかを示すブール値を返します。</summary>
      <returns>null の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> クラスのインスタンスの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティに割り当てることができる最大値を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> クラスのインスタンスの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティに割り当てることができる最小値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>乗算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの積を計算します。</summary>
      <returns>乗算の積を格納している <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> クラスのこのインスタンスに割り当てることができる <see cref="T:System.DBNull" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの合計を計算します。</summary>
      <returns>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの合計を格納している <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>除算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを 2 番目のパラメーターで除算します。</summary>
      <returns>除算の結果を格納している <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary>この暗黙の演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary>この演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary>この演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Decimal" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> と等しい値を持つ新しい <see cref="T:System.Decimal" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary>この演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary>この演算子は、<see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターで表される値と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">変換される <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary>この暗黙の演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> プロパティと等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary>この暗黙の演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary>この暗黙の演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary>この暗黙の演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary>この暗黙の演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <see cref="T:System.Decimal" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Decimal" /> パラメーターの値と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">変換される <see cref="T:System.Decimal" /> 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary>この暗黙の演算子は、指定した <see cref="T:System.Int64" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Int64" /> パラメーターの値と等しい <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Int64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlMoney" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>乗算演算子は、2 つの <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの積を計算します。</summary>
      <returns>乗算の積を格納している <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>減算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <returns>減算の結果を格納している新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary>単項マイナス演算子は、<see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを無効にします。</summary>
      <returns>否定の結果を格納している <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> を持つ <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">無効にされる <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary>数値の <see cref="T:System.String" /> 形式をそれと等価な <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>指定した <see cref="T:System.String" /> に格納されている値と等価の <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
      <param name="s">解析対象の文字列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>減算演算子は、最初の <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターから 2 番目のパラメーターを減算します。</summary>
      <returns>減算の結果を格納している新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> のインスタンスの Value を <see cref="T:System.Decimal" /> 構造体に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティと等しい値を持つ <see cref="T:System.Decimal" /> 構造体。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Double" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体と等しい値を持つ倍精度浮動小数点数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Int32" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体の整数部と等しい値を持つ 32 ビット整数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体の Value を <see cref="T:System.Int64" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体の整数部と等しい値を持つ 64 ビット整数。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体の値がゼロの場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体の値は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> になります。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値と等しい <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値の文字列表現を値として持つ <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> のインスタンスを文字列に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlMoney" /> の値の文字列表現を値として持つ文字列。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体のインスタンスの通貨値を取得します。このプロパティは読み取り専用です。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体のインスタンスの通貨値。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">プロパティが null に設定されています。</exception>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> クラスのインスタンスの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary>
        <see cref="N:System.Data.SqlTypes" /> 構造体の Value プロパティが null に設定されている場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary>エラーを説明するシステム提供のメッセージを使用して、<see cref="T:System.Data.SqlTypes.SqlNullValueException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary>エラーを説明する指定したメッセージを使用して、<see cref="T:System.Data.SqlTypes.SqlNullValueException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外を説明するメッセージ。このコンストラクターの呼び出し元では、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary>指定したエラー メッセージと、この例外の原因である内部例外への参照を使用して、<see cref="T:System.Data.SqlTypes.SqlNullValueException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外を説明するメッセージ。このコンストラクターの呼び出し元では、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
      <param name="e">現在の例外の原因である例外。<paramref name="innerException" /> パラメーターが null でない場合は、内部例外を処理する catch ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary>データベースに格納する、またはデータベースから取得する、-3.40E +38 から 3.40E +38 までの範囲の浮動小数点数を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary>指定した倍精度浮動小数点数パラメーターを使用して、<see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> として使用される double 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="value">新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> として使用される浮動小数点数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を加算した値を計算します。</summary>
      <returns>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の合計を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> とこの <see cref="T:System.Data.SqlTypes.SqlSingle" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Data.SqlTypes.SqlSingle" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> とこの <see cref="T:System.Data.SqlTypes.SqlSingle" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を 2 番目の構造体で除算します。</summary>
      <returns>除算の結果を格納している SqlInt64 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。いずれかのインスタンスが null の場合、SqlSingle は null になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary>指定したオブジェクト パラメーターを <see cref="T:System.Data.SqlTypes.SqlSingle" /> オブジェクトの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> プロパティと比較します。</summary>
      <returns>オブジェクトが <see cref="T:System.Data.SqlTypes.SqlSingle" /> のインスタンスで、2 つが等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">比較されるオブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary>このインスタンスのハッシュ コードを取得します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の論理比較を実行して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体が null かどうかを示します。</summary>
      <returns>null の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> クラスのインスタンスの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> プロパティに割り当てることができる最大値を表します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> クラスのインスタンスの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> プロパティに割り当てることができる最小値を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の積を計算します。</summary>
      <returns>乗算の積を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.DBNull" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を加算した値を計算します。</summary>
      <returns>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の合計を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を 2 番目の構造体で除算します。</summary>
      <returns>除算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>2 つの SqlSingle パラメーターの論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary>この暗黙の演算子は、指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">変換される <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーター。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を float 型に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の値を格納している float 型。</returns>
      <param name="x">float 型に変換される <see cref="T:System.Data.SqlTypes.SqlSingle" /> 値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターで表される値と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">変換される <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の論理比較を実行して、最初の構造体が 2 番目の構造体以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary>この暗黙の演算子は、<see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> プロパティを持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">変換される <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt32" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> と等しい <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary>指定した浮動小数点値を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>指定した float 型の値を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換される float 型の値。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlSingle" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の積を計算します。</summary>
      <returns>乗算の積を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体から 2 番目の構造体を減算します。</summary>
      <returns>減算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> を無効にします。</summary>
      <returns>符号が逆の値を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary>指定した <see cref="T:System.String" /> を <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体に変換します。</summary>
      <returns>指定した <see cref="T:System.String" /> に格納されている値と等価の <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
      <param name="s">解析対象の <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>最初の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体から 2 番目の構造体を減算します。</summary>
      <returns>減算の結果を格納している <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> が 0 以外の場合は true。0 の場合は false。それ以外の場合は Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の Value と等しい Value を持つ <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。<see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の値が true の場合、<see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体のValueは 1 になります。それ以外の場合、<see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体の Value は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> の値と等しい新しい SqlDecimal。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> の値と等しい新しい SqlDouble 。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> の値と等しい新しい SqlInt16。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> の値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> の値と等しい <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> の値を表す <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体を <see cref="T:System.String" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> の値を表す String オブジェクト。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体の値を取得します。このプロパティは読み取り専用です。</summary>
      <returns>-3.40E+38 から 3.40E+38 までの浮動小数点値。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> クラスのインスタンスの <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> プロパティに割り当てることができるゼロ値を表します。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary>データベースに格納する、またはデータベースから取得する文字の可変長ストリームを表します。<see cref="T:System.Data.SqlTypes.SqlString" /> は、基になるデータ構造体が、対応する .NET Framework の <see cref="T:System.String" /> データ型とは異なります。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary>ロケール ID、比較オプション、およびデータを指定して、<see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="lcid">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の地理的なロケールと言語を指定します。</param>
      <param name="compareOptions">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の比較オプションを指定します。</param>
      <param name="data">格納するデータ配列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="lcid">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の地理的なロケールと言語を指定します。</param>
      <param name="compareOptions">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の比較オプションを指定します。</param>
      <param name="data">格納するデータ配列。</param>
      <param name="fUnicode">Unicode でエンコードされている場合は true。それ以外の場合は false。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="lcid">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の地理的なロケールと言語を指定します。</param>
      <param name="compareOptions">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の比較オプションを指定します。</param>
      <param name="data">格納するデータ配列。</param>
      <param name="index">配列内の開始インデックス。</param>
      <param name="count">インデックスからコピーする文字数。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="lcid">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の地理的なロケールと言語を指定します。</param>
      <param name="compareOptions">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の比較オプションを指定します。</param>
      <param name="data">格納するデータ配列。</param>
      <param name="index">配列内の開始インデックス。</param>
      <param name="count">インデックスからコピーする文字数。</param>
      <param name="fUnicode">Unicode でエンコードされている場合は true。それ以外の場合は false。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary>文字列を指定して、<see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="data">格納する文字列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary>文字列とロケール ID 値を指定して、<see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="data">格納する文字列。</param>
      <param name="lcid">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の地理的なロケールと言語を指定します。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>文字列、ロケール ID、および比較オプションの値を指定して、<see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="data">格納する文字列。</param>
      <param name="lcid">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の地理的なロケールと言語を指定します。</param>
      <param name="compareOptions">新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の比較オプションを指定します。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>指定された 2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> 値を連結して、新しい <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を作成します。</summary>
      <returns>
        <paramref name="x" /> と <paramref name="y" /> の値を連結した <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary>文字のアルファベット値ではなく、文字の数値に基づいて並べ替えるように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary>文字のアルファベット値ではなく、文字の数値に基づいて並べ替えるように指定します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトのコピーを作成します。</summary>
      <returns>すべてのプロパティ値が元のオブジェクトと同じ新しい <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体で実行する文字列比較の方法を定義する <see cref="T:System.Globalization.CompareInfo" /> オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の文字列比較を定義する CompareInfo オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 値と等価の <see cref="T:System.Globalization.CompareOptions" /> 列挙値を取得します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の SqlCompareOptions に対応する CompareOptions 値。</returns>
      <param name="compareOptions">この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の比較オプションを記述する <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 値。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlString" /> とこの <see cref="T:System.Data.SqlTypes.SqlString" /> インスタンスを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> とこの <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトを比較し、これらの相対値を示す値を返します。</summary>
      <returns>インスタンスとオブジェクトの相対値を示す符号付き数値。戻り値状態0 より小さい値このインスタンスはオブジェクトよりも小さくなっています。0このインスタンスはオブジェクトと同じです。0 を超える値このインスタンスはオブジェクトよりも大きくなっています。またはオブジェクトが null 参照 (Visual Basic の場合は Nothing) です。</returns>
      <param name="value">比較対象の <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を連結します。</summary>
      <returns>2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの内容を表す新しく連結された値を格納している <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトのカルチャに関する情報を表す <see cref="T:System.Globalization.CultureInfo" /> 構造体を取得します。</summary>
      <returns>カルチャの名前、書記体系、使用する暦など、この SqlString 構造体のカルチャに関する情報を記述し、カルチャ固有のオブジェクトにアクセスできるようにする <see cref="T:System.Globalization.CultureInfo" /> 構造体。カルチャ固有のオブジェクトは、日付の書式指定や文字列の並べ替えなどの共通の操作を行うためのメソッドを提供します。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。いずれかのインスタンスが null の場合、SqlString は null になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary>指定したオブジェクト パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトの <see cref="P:System.Data.SqlTypes.SqlString.Value" /> プロパティと比較します。</summary>
      <returns>Equals は、オブジェクトが <see cref="T:System.Data.SqlTypes.SqlString" /> のインスタンスで、2 つが等しい場合は true を返します。それ以外の場合は false を返します。</returns>
      <param name="value">比較されるオブジェクト。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary>このインスタンスのハッシュ コードを取得します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> の内容を ANSI 形式で格納しているバイト配列を取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> の内容を ANSI 形式で格納しているバイト配列。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> の内容を Unicode 形式で格納しているバイト配列を取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> の内容を Unicode 形式で格納しているバイト配列。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> の比較で、大文字と小文字を区別しないように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary>文字列比較でカナ型を無視するように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary>文字列比較で、発音区別符など、空白以外の組み合わせ文字を無視するように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary>文字列比較で、半角と全角の区別を無視するように指定します。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体が null かどうかを示します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlString.Value" /> が <see cref="F:System.Data.SqlTypes.SqlString.Null" /> の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体の地理的なロケールと言語を指定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlString.Value" /> プロパティに格納されている文字列のロケール ID。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、最初のオペランドが 2 番目のオペランド以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体のこのインスタンスに割り当てることができる <see cref="T:System.DBNull" /> を表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>指定した 2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を連結します。</summary>
      <returns>2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの内容を表す新しく連結された値を格納している <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、等しいかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlByte" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDateTime" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDecimal" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>SqlDecimal パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <param name="x">変換対象の SqlDecimal 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlDouble" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlGuid" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>指定した <see cref="T:System.Data.SqlTypes.SqlGuid" /> の文字列形式である値を持つ <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</returns>
      <param name="x">変換される SqlInt32 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクト。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary>指定した <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> パラメーターの文字列形式を格納している新しい <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <param name="x">変換対象の <see cref="T:System.Data.SqlTypes.SqlSingle" /> 構造体。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> を <see cref="T:System.String" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの <see cref="P:System.Data.SqlTypes.SqlString.Value" /> プロパティと同じ内容を持つ String。</returns>
      <param name="x">変換される <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> パラメーターの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより大きいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより大きい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、最初のパラメーターが 2 番目のパラメーター以上かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以上の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary>
        <see cref="T:System.String" /> パラメーターを <see cref="T:System.Data.SqlTypes.SqlString" /> に変換します。</summary>
      <returns>指定した String の値を格納している <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <param name="x">変換される <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、それらが等しくないかどうかを確認します。</summary>
      <returns>2 つのインスタンスが等しくない場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。2 つのインスタンスが等しい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、最初のパラメーターが 2 番目のパラメーターより小さいかどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンスより小さい場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>2 つの <see cref="T:System.Data.SqlTypes.SqlString" /> オペランドの論理比較を実行して、最初のオペランドが 2 番目のオペランド以下かどうかを確認します。</summary>
      <returns>最初のインスタンスが 2 番目のインスタンス以下の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> の <see cref="T:System.Data.SqlTypes.SqlBoolean" />。それ以外の場合は <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。<see cref="T:System.Data.SqlTypes.SqlString" /> のいずれかのインスタンスが null の場合、<see cref="T:System.Data.SqlTypes.SqlBoolean" /> の <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> は <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> になります。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> を他の <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体と比較する方法を表す 1 つ以上の <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 列挙値の組み合わせ。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlString" /> を他の <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体と比較する方法を指定する値。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> に変換します。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlString.Value" /> が 0 以外の場合は true。0 の場合は false。それ以外の場合は Null。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlByte" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体で表される数値と等しい <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> を持つ新しい SqlByte 構造体。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDateTime" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlString" /> で表される日付値を格納している新しい SqlDateTime 構造体。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlString" /> の値を格納する新しい <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlDouble" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlString" /> の数値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlGuid" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体で表される Guid である <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> を持つ新しい <see cref="T:System.Data.SqlTypes.SqlGuid" /> 構造体。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt16" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlString" /> の数値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt16" /> 構造体。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt32" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlString" /> の数値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlInt64" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlString" /> の数値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlInt64" /> 構造体。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlMoney" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlString" /> の数値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlMoney" /> 構造体。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体を <see cref="T:System.Data.SqlTypes.SqlSingle" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlString" /> の数値と等しい新しい <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> オブジェクトを <see cref="T:System.String" /> に変換します。</summary>
      <returns>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体と同じ値を持つ <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlString" /> 構造体に格納されている文字列を取得します。このプロパティは読み取り専用です。</summary>
      <returns>格納されている文字列。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">文字列の値が <see cref="F:System.Data.SqlTypes.SqlString.Null" /> です。</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary>
        <see cref="N:System.Data.SqlTypes" /> 構造体に値を設定するとその値が切り捨てられる場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary>指定したエラー メッセージを使用して、<see cref="T:System.Data.SqlTypes.SqlTruncateException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary>指定したエラー メッセージと <see cref="T:System.Exception" /> に対する参照を使用して、<see cref="T:System.Data.SqlTypes.SqlTruncateException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="e">内部 <see cref="T:System.Exception" /> への参照。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary>
        <see cref="N:System.Data.SqlTypes" /> の基本例外クラス。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlTypeException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary>指定したエラー メッセージを使用して、<see cref="T:System.Data.SqlTypes.SqlTypeException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary>指定したエラー メッセージと、この例外の原因である内部例外への参照を使用して、<see cref="T:System.Data.SqlTypes.SqlTypeException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外を説明するメッセージ。このコンストラクターの呼び出し元では、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
      <param name="e">現在の例外の原因である例外。<paramref name="innerException" /> パラメーターが null でない場合は、内部例外を処理する catch ブロックで現在の例外が発生します。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary>サーバーに格納する、またはサーバーから取得する XML データを表します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary>新しい <see cref="T:System.Data.SqlTypes.SqlXml" /> インスタンスを作成します。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary>新しい <see cref="T:System.Data.SqlTypes.SqlXml" /> インスタンスを作成します。<see cref="T:System.IO.Stream" /> から派生したインスタンスを引数に受け取り、XML 値を生成します。</summary>
      <param name="value">
        <see cref="T:System.IO.Stream" /> から派生したインスタンス (<see cref="T:System.IO.FileStream" /> など)。このインスタンスから、<see cref="T:System.Data.SqlTypes.SqlXml" /> インスタンスの Xml コンテンツが読み込まれます。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary>新しい <see cref="T:System.Data.SqlTypes.SqlXml" /> インスタンスを作成し、指定された <see cref="T:System.Xml.XmlReader" /> の内容と関連付けます。</summary>
      <param name="value">新しい <see cref="T:System.Data.SqlTypes.SqlXml" /> インスタンスの値として使用する、<see cref="T:System.Xml.XmlReader" /> の派生クラスのインスタンス。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> として表現された、<see cref="T:System.Data.SqlTypes.SqlXml" /> の XML コンテンツの値を取得します。</summary>
      <returns>XML コンテンツを格納している、<see cref="T:System.Xml.XmlReader" /> から派生したインスタンス。実際の型は、サーバー上で情報が内部的にどのように表現されているかによって異なる場合があります。たとえば、戻り値は <see cref="T:System.Xml.XmlTextReader" /> になる場合もあります。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <see cref="T:System.Data.SqlTypes.SqlXml" /> の null インスタンスに対し、このプロパティにアクセスしようとしました。</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary>このインスタンスが null の <see cref="T:System.Data.SqlTypes.SqlXml" /> 値を表すかどうかを示します。</summary>
      <returns>Value が null の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 型の null インスタンスを表します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 型の Null インスタンス。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary>この <see cref="T:System.Data.SqlTypes.SqlXml" /> インスタンスが保持する XML コンテンツの文字列形式を取得します。</summary>
      <returns>XML コンテンツの文字列形式。</returns>
    </member>
  </members>
</doc>