<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.SqlClient</name>
  </assembly>
  <members>
    <member name="T:Microsoft.SqlServer.Server.SqlDataRecord">
      <summary>表示資料的單一資料列及其中繼資料 (Metadata)。此類別無法被繼承。</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.#ctor(Microsoft.SqlServer.Server.SqlMetaData[])">
      <summary>使用以做為引數傳遞之 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 物件陣列為基礎的結構描述 (Schema)，初始化新的 <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 執行個體。</summary>
      <param name="metaData">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 物件的陣列，描述 <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 中的每個資料行。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="metaData" /> 為 null。</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount">
      <summary>取得資料列中的資料行數目。這個屬性是唯讀的。</summary>
      <returns>資料列中資料行的數目 (為整數)。</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetBoolean(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Boolean" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Boolean" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> 指定的資料行為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetByte(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Byte" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Byte" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> 指定的資料行為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>取得序數所指定之資料行的值，以做為 <see cref="T:System.Byte" /> 物件的陣列。</summary>
      <returns>複製的位元組數目。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="fieldOffset">欄位值中開始擷取位元組的位移 (Offset)。</param>
      <param name="buffer">要將位元組複製至的目標緩衝區。</param>
      <param name="bufferOffset">緩衝區中開始複製位元組的位移。</param>
      <param name="length">要複製至緩衝區的位元組數目。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> 指定的資料行為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetChar(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Char" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Char" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> 指定的資料行為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>取得序數所指定之資料行的值，以做為 <see cref="T:System.Char" /> 物件的陣列。</summary>
      <returns>複製的字元數目。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="fieldOffset">欄位值中開始擷取字元的位移。</param>
      <param name="buffer">要將字元複製至的目標緩衝區。</param>
      <param name="bufferOffset">緩衝區中開始複製字元的位移。</param>
      <param name="length">複製至緩衝區的字元數目。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> 指定的資料行為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDataTypeName(System.Int32)">
      <summary>傳回序數引數指定之資料行的資料型別名稱。</summary>
      <returns>
        <see cref="T:System.String" />，其中包含資料行的資料型別。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDateTime(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.DateTime" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.DateTime" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> 指定的資料行為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDateTimeOffset(System.Int32)">
      <summary>傳回指定資料行的資料做為 <see cref="T:System.DateTimeOffset" />。</summary>
      <returns>做為 <see cref="T:System.DateTimeOffset" /> 之指定資料行的值。</returns>
      <param name="ordinal">以零起始的資料行序數。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDecimal(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Decimal" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Decimal" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> 指定的資料行為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDouble(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Double" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Double" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> 指定的資料行為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetFieldType(System.Int32)">
      <summary>傳回 <see cref="T:System.Type" /> 物件，表示 Common Language Runtime (CLR) 型別，該型別對應至 <paramref name="ordinal" /> 引數指定之資料行的 SQL Server 型別。</summary>
      <returns>資料行型別 (一個 <see cref="T:System.Type" /> 物件)。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.TypeLoadException">此欄的型別是使用者定義的型別，進行呼叫的應用程式網域無法使用。</exception>
      <exception cref="T:System.IO.FileNotFoundException">此欄的型別是使用者定義的型別，進行呼叫的應用程式網域無法使用。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetFloat(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 float)。</summary>
      <returns>欄值，其型別為 float。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> 指定的資料行為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetGuid(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Guid" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Guid" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> 指定的資料行為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt16(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Int16" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Int16" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> 指定的資料行為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt32(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Int32" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Int32" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> 指定的資料行為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt64(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Int64" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Int64" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" /> 指定的資料行為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetName(System.Int32)">
      <summary>傳回由序數引數指定之資料行的名稱。</summary>
      <returns>
        <see cref="T:System.String" />，包含資料行名稱。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetOrdinal(System.String)">
      <summary>傳回資料行名稱指定的資料行序數。</summary>
      <returns>資料行的序數 (以零起始的整數)。</returns>
      <param name="name">要查詢之資料行的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 為 null。</exception>
      <exception cref="T:System.IndexOutOfRangeException">找不到資料行名稱。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBinary(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlBinary" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlBinary" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBoolean(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlBoolean" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlByte(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlByte" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBytes(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlBytes" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlBytes" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlChars(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlChars" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlChars" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDateTime(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlDateTime" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDecimal(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlDecimal" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDouble(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlDouble" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlFieldType(System.Int32)">
      <summary>傳回 <see cref="T:System.Type" /> 物件，表示對應至資料行之 SQL Server 型別的型別 (為 SQL Server 型別，定義於 <see cref="N:System.Data.SqlTypes" /> 中)。</summary>
      <returns>資料行型別 (一個 <see cref="T:System.Type" /> 物件)。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.TypeLoadException">此欄的型別是使用者定義的型別，進行呼叫的應用程式網域無法使用。</exception>
      <exception cref="T:System.IO.FileNotFoundException">此欄的型別是使用者定義的型別，進行呼叫的應用程式網域無法使用。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlGuid(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlGuid" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt16(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlInt16" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt32(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlInt32" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt64(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlInt64" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMetaData(System.Int32)">
      <summary>傳回 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 物件，描述資料行序數指定之資料行的中繼資料。</summary>
      <returns>資料行中繼資料 (一個 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 物件)。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMoney(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlMoney" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlSingle(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlSingle" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlString(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlString" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValue(System.Int32)">
      <summary>傳回資料行序數指定之資料行中儲存的資料值 (表示為 SQL Server 型別)。</summary>
      <returns>做為 <see cref="T:System.Object" /> 的資料行值，表示為 SQL Server 型別。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValues(System.Object[])">
      <summary>傳回陣列中資料錄之所有資料行 (表示為 SQL Server 型別) 的值。</summary>
      <returns>
        <see cref="T:System.Int32" />，表示複製的資料行數目。</returns>
      <param name="values">要將值資料行值複製至的陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> 為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlXml(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.Data.SqlTypes.SqlXml" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.Data.SqlTypes.SqlXml" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetString(System.Int32)">
      <summary>取得序數所指定的資料行之值 (此值為 <see cref="T:System.String" />)。</summary>
      <returns>欄值，其型別為 <see cref="T:System.String" />。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetTimeSpan(System.Int32)">
      <summary>傳回指定資料行的資料做為 <see cref="T:System.TimeSpan" />。</summary>
      <returns>做為 <see cref="T:System.TimeSpan" /> 的指定資料行值。</returns>
      <param name="ordinal">以零起始的資料行序數。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetValue(System.Int32)">
      <summary>傳回序數引數指定之資料行的 Common Language Runtime (CLR) 型別值。</summary>
      <returns>序數指定之資料行的 CLR 型別值。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetValues(System.Object[])">
      <summary>傳回陣列中資料錄之所有資料行 (表示為 Common Language Runtime (CLR) 型別) 的值。</summary>
      <returns>
        <see cref="T:System.Int32" />，表示複製的資料行數目。</returns>
      <param name="values">要將值資料行值複製至的陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> 為 null。</exception>
      <exception cref="T:System.InvalidCastException">型別不相符。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.IsDBNull(System.Int32)">
      <summary>如果資料行序數參數指定的資料行為 null，則會傳回 true。</summary>
      <returns>如果資料行為 null，則為 true，否則為 false。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.Item(System.Int32)">
      <summary>取得資料行 <paramref name="ordinal" /> 引數指定之資料行的 Common Language Runtime (CLR) 型別值。</summary>
      <returns>
        <paramref name="ordinal" /> 指定之資料行的 CLR 型別值。</returns>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.Item(System.String)">
      <summary>取得資料行 <paramref name="name" /> 引數指定之資料行的 Common Language Runtime (CLR) 型別值。</summary>
      <returns>
        <paramref name="name" /> 指定之資料行的 CLR 型別值。</returns>
      <param name="name">資料行名稱。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetBoolean(System.Int32,System.Boolean)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Boolean" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetByte(System.Int32,System.Byte)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Byte" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>將儲存在資料行中的資料設為指定的 <see cref="T:System.Byte" /> 值陣列。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="fieldOffset">欄位值中開始複製位元組的位移。</param>
      <param name="buffer">要從其複製位元組的目標緩衝區。</param>
      <param name="bufferOffset">緩衝區中開始從其複製位元組的位移。</param>
      <param name="length">從緩衝區複製的位元組數目。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetChar(System.Int32,System.Char)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Char" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>將儲存在資料行中的資料設為指定的 <see cref="T:System.Char" /> 值陣列。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="fieldOffset">欄位值中開始複製字元的位移。</param>
      <param name="buffer">要從其複製字元的目標緩衝區。</param>
      <param name="bufferOffset">緩衝區中開始從其複製字元的位移。</param>
      <param name="length">從緩衝區複製的字元數目。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDateTime(System.Int32,System.DateTime)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.DateTime" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDateTimeOffset(System.Int32,System.DateTimeOffset)">
      <summary>將指定資料行的值設定為 <see cref="T:System.DateTimeOffset" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDBNull(System.Int32)">
      <summary>將指定資料行中的值設定為 <see cref="T:System.DBNull" />。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDecimal(System.Int32,System.Decimal)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Decimal" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDouble(System.Int32,System.Double)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Double" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetFloat(System.Int32,System.Single)">
      <summary>將儲存在資料行中的資料，設定為指定的 float 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetGuid(System.Int32,System.Guid)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Guid" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt16(System.Int32,System.Int16)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Int16" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt32(System.Int32,System.Int32)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Int32" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt64(System.Int32,System.Int64)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Int64" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBytes(System.Int32,System.Data.SqlTypes.SqlBytes)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlChars(System.Int32,System.Data.SqlTypes.SqlChars)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlXml(System.Int32,System.Data.SqlTypes.SqlXml)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetString(System.Int32,System.String)">
      <summary>將儲存在資料行中的資料，設定為指定的 <see cref="T:System.String" /> 值。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetTimeSpan(System.Int32,System.TimeSpan)">
      <summary>將指定資料行的值設定為 <see cref="T:System.TimeSpan" />。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">傳入的 <paramref name="ordinal" /> 是負數。</exception>
      <exception cref="T:System.ArgumentException">傳入的 <see cref="T:System.TimeSpan" /> 值長度大於 24 小時。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValue(System.Int32,System.Object)">
      <summary>為資料行序數指定之資料行設定新值，表示為 Common Language Runtime (CLR) 型別。</summary>
      <param name="ordinal">資料行的以零起始的序數。</param>
      <param name="value">指定之資料行的新值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" /> 小於 0 或大於欄數 (也就是 <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValues(System.Object[])">
      <summary>為 <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 中的所有資料行設定新值。這些值會表示為 Common Language Runtime (CLR) 型別。</summary>
      <returns>設定的資料行值數目 (為整數)。</returns>
      <param name="values">
        <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 執行個體之新值的陣列，表示為包裝成 <see cref="T:System.Object" /> 參考的 CLR 型別。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">值的大小不符合 <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 執行個體中的資料行數目。</exception>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlMetaData">
      <summary>指定並擷取 <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 物件之參數和資料行的中繼資料 (Metadata) 資訊。此類別無法被繼承。</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)">
      <summary>使用指定的資料行名稱和型別，初始化 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 類別的新執行個體。</summary>
      <param name="name">資料行名稱。</param>
      <param name="dbType">參數或資料行的 SQL Server 型別。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">傳遞給建構函式做為 <paramref name="dbType" /> 的 SqlDbType 為不允許的型別。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>使用指定的資料行名稱和預設伺服器，初始化 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 類別的新執行個體。這個形式的建構函式允許您指定資料行在資料表值參數中是否是唯一的、資料行的排序順序和排序資料行的序數，以支援資料表值參數。</summary>
      <param name="name">資料行名稱。</param>
      <param name="dbType">參數或資料行的 SQL Server 型別。</param>
      <param name="useServerDefault">指定這個資料行是否應該使用預設的伺服器值。</param>
      <param name="isUniqueKey">指定資料表值參數中的資料行是否是唯一的。</param>
      <param name="columnSortOrder">指定資料行的排序順序。</param>
      <param name="sortOrdinal">指定排序資料行的序數。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)">
      <summary>使用指定的資料行名稱、型別、精確度和小數位數，初始化 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 類別的新執行個體。</summary>
      <param name="name">參數或資料行的名稱。</param>
      <param name="dbType">參數或資料行的 SQL Server 型別。</param>
      <param name="precision">參數或資料行的精確度。</param>
      <param name="scale">參數或資料行的小數點位數。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">不允許的 SqlDbType 已做為 <paramref name="dbType" /> 傳遞至建構函式，或 <paramref name="scale" /> 大於 <paramref name="precision" />。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>使用指定的資料行名稱、型別、精確度、小數點位數和預設伺服器，初始化 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 類別的新執行個體。這個形式的建構函式允許您指定資料行在資料表值參數中是否是唯一的、資料行的排序順序和排序資料行的序數，以支援資料表值參數。</summary>
      <param name="name">資料行名稱。</param>
      <param name="dbType">參數或資料行的 SQL Server 型別。</param>
      <param name="precision">參數或資料行的精確度。</param>
      <param name="scale">參數或資料行的小數點位數。</param>
      <param name="useServerDefault">指定這個資料行是否應該使用預設的伺服器值。</param>
      <param name="isUniqueKey">指定資料表值參數中的資料行是否是唯一的。</param>
      <param name="columnSortOrder">指定資料行的排序順序。</param>
      <param name="sortOrdinal">指定排序資料行的序數。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)">
      <summary>使用指定的資料行名稱、型別和最大長度，初始化 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 類別的新執行個體。</summary>
      <param name="name">資料行名稱。</param>
      <param name="dbType">參數或資料行的 SQL Server 型別。</param>
      <param name="maxLength">指定之型別的最大長度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">傳遞給建構函式做為 <paramref name="dbType" /> 的 SqlDbType 為不允許的型別。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>使用指定的資料行名稱、型別、最大長度和預設伺服器，初始化 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 類別的新執行個體。這個形式的建構函式允許您指定資料行在資料表值參數中是否是唯一的、資料行的排序順序和排序資料行的序數，以支援資料表值參數。</summary>
      <param name="name">資料行名稱。</param>
      <param name="dbType">參數或資料行的 SQL Server 型別。</param>
      <param name="maxLength">指定之型別的最大長度。</param>
      <param name="useServerDefault">指定這個資料行是否應該使用預設的伺服器值。</param>
      <param name="isUniqueKey">指定資料表值參數中的資料行是否是唯一的。</param>
      <param name="columnSortOrder">指定資料行的排序順序。</param>
      <param name="sortOrdinal">指定排序資料行的序數。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)">
      <summary>使用指定的資料行名稱、型別、最大長度、精確度、小數點位數、地區設定 ID、比較選項和使用者定義型別 (UDT)，初始化 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 類別的新執行個體。</summary>
      <param name="name">資料行名稱。</param>
      <param name="dbType">參數或資料行的 SQL Server 型別。</param>
      <param name="maxLength">指定之型別的最大長度。</param>
      <param name="precision">參數或資料行的精確度。</param>
      <param name="scale">參數或資料行的小數點位數。</param>
      <param name="locale">參數或資料行的地區設定 ID。</param>
      <param name="compareOptions">參數或資料行的比較規則。</param>
      <param name="userDefinedType">指向 UDT 的 <see cref="T:System.Type" /> 執行個體。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">不允許的 SqlDbType 已做為 <paramref name="dbType" /> 傳遞至建構函式，或 <paramref name="userDefinedType" /> 指向未宣告 <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> 的型別。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>使用指定的資料行名稱、型別、最大長度、精確度、小數點位數、地區設定 ID、比較選項和使用者定義型別 (UDT)，初始化 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 類別的新執行個體。這個形式的建構函式允許您指定資料行在資料表值參數中是否是唯一的、資料行的排序順序和排序資料行的序數，以支援資料表值參數。</summary>
      <param name="name">資料行名稱。</param>
      <param name="dbType">參數或資料行的 SQL Server 型別。</param>
      <param name="maxLength">指定之型別的最大長度。</param>
      <param name="precision">參數或資料行的精確度。</param>
      <param name="scale">參數或資料行的小數點位數。</param>
      <param name="localeId">參數或資料行的地區設定 ID。</param>
      <param name="compareOptions">參數或資料行的比較規則。</param>
      <param name="userDefinedType">指向 UDT 的 <see cref="T:System.Type" /> 執行個體。</param>
      <param name="useServerDefault">指定這個資料行是否應該使用預設的伺服器值。</param>
      <param name="isUniqueKey">指定資料表值參數中的資料行是否是唯一的。</param>
      <param name="columnSortOrder">指定資料行的排序順序。</param>
      <param name="sortOrdinal">指定排序資料行的序數。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>使用指定的資料行名稱、型別、最大長度、地區設定和比較選項，初始化 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 類別的新執行個體。</summary>
      <param name="name">參數或資料行的名稱。</param>
      <param name="dbType">參數或資料行的 SQL Server 型別。</param>
      <param name="maxLength">指定之型別的最大長度。</param>
      <param name="locale">參數或資料行的地區設定 ID。</param>
      <param name="compareOptions">參數或資料行的比較規則。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">傳遞給建構函式做為 <paramref name="dbType" /> 的 SqlDbType 為不允許的型別。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>以指定的資料行名稱、型別、最大長度、地區設定、比較選項和伺服器預設值，初始化 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 類別的新執行個體。這個形式的建構函式允許您指定資料行在資料表值參數中是否是唯一的、資料行的排序順序和排序資料行的序數，以支援資料表值參數。</summary>
      <param name="name">資料行名稱。</param>
      <param name="dbType">參數或資料行的 SQL Server 型別。</param>
      <param name="maxLength">指定之型別的最大長度。</param>
      <param name="locale">參數或資料行的地區設定 ID。</param>
      <param name="compareOptions">參數或資料行的比較規則。</param>
      <param name="useServerDefault">指定這個資料行是否應該使用預設的伺服器值。</param>
      <param name="isUniqueKey">指定資料表值參數中的資料行是否是唯一的。</param>
      <param name="columnSortOrder">指定資料行的排序順序。</param>
      <param name="sortOrdinal">指定排序資料行的序數。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)">
      <summary>使用指定的資料行名稱、型別、資料庫名稱、擁有結構描述和物件名稱，初始化 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 類別的新執行個體。</summary>
      <param name="name">資料行名稱。</param>
      <param name="dbType">參數或資料行的 SQL Server 型別。</param>
      <param name="database">具型別 XML 執行個體之 XML 結構描述集合的資料庫名稱。</param>
      <param name="owningSchema">具型別 XML 執行個體之 XML 結構描述集合的相關結構描述名稱。</param>
      <param name="objectName">具型別 XML 執行個體之 XML 結構描述集合的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" /> 為 null，或當 <paramref name="database" /> 和 <paramref name="owningSchema" /> 為非 null 時 <paramref name="objectName" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">傳遞給建構函式做為 <paramref name="dbType" /> 的 SqlDbType 為不允許的型別。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>以指定的資料行名稱、資料庫名稱、擁有結構描述、物件名稱和預設伺服器，初始化 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 類別的新執行個體。這個形式的建構函式允許您指定資料行在資料表值參數中是否是唯一的、資料行的排序順序和排序資料行的序數，以支援資料表值參數。</summary>
      <param name="name">資料行名稱。</param>
      <param name="dbType">參數或資料行的 SQL Server 型別。</param>
      <param name="database">具型別 XML 執行個體之 XML 結構描述集合的資料庫名稱。</param>
      <param name="owningSchema">具型別 XML 執行個體之 XML 結構描述集合的相關結構描述名稱。</param>
      <param name="objectName">具型別 XML 執行個體之 XML 結構描述集合的名稱。</param>
      <param name="useServerDefault">指定這個資料行是否應該使用預設的伺服器值。</param>
      <param name="isUniqueKey">指定資料表值參數中的資料行是否是唯一的。</param>
      <param name="columnSortOrder">指定資料行的排序順序。</param>
      <param name="sortOrdinal">指定排序資料行的序數。</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Boolean)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Boolean" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Boolean" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Byte" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Byte" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte[])">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Byte" /> 值陣列，並在必要時調整此值。</summary>
      <returns>調整的值，為 <see cref="T:System.Byte" /> 值的陣列。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Char" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Char" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char[])">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Char" /> 值陣列，並在必要時調整此值。</summary>
      <returns>調整的值，為 <see cref="T:System.Char" /> 值的陣列。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlBinary" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlBoolean" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlByte" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlBytes" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlChars" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlDateTime" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlDecimal" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlDouble" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlGuid" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlInt16" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlInt32" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlInt64" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlMoney" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlSingle" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlString" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Data.SqlTypes.SqlXml" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTime)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.DateTime" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.DateTime" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTimeOffset)">
      <summary>根據中繼資料驗證指定的 <see cref="T:System.DateTimeOffset" /> 值，並在必要時調整此值。</summary>
      <returns>調整的值，為 <see cref="T:System.DateTimeOffset" /> 值的陣列。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Decimal)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Decimal" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Decimal" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Double)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Double" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Double" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Guid)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Guid" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Guid" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int16)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Int16" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Int16" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int32)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Int32" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Int32" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int64)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Int64" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Int64" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Object)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Object" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Object" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Single)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.Single" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.Single" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.String)">
      <summary>依中繼資料驗證指定的 <see cref="T:System.String" /> 值，並在必要時調整此值。</summary>
      <returns>調整過的值 (其型態為 <see cref="T:System.String" />)。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.TimeSpan)">
      <summary>根據中繼資料驗證指定的 <see cref="T:System.TimeSpan" /> 值，並在必要時調整此值。</summary>
      <returns>調整的值，為 <see cref="T:System.TimeSpan" /> 值的陣列。</returns>
      <param name="value">要根據 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體驗證的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 與 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 型別不相符，或 <paramref name="value" /> 無法調整。</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.CompareOptions">
      <summary>取得用於資料行或參數的比較規則。</summary>
      <returns>用於資料行或參數的比較規則 (其型態為 <see cref="T:System.Data.SqlTypes.SqlCompareOptions" />)。</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.InferFromValue(System.Object,System.String)">
      <summary>從指定的物件推斷中繼資料，並將其做為 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體傳回。</summary>
      <returns>推斷出來的中繼資料 (為 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體)。</returns>
      <param name="value">用於從其推斷中繼資料的物件。</param>
      <param name="name">指派至傳回之 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 執行個體的名稱。</param>
      <exception cref="T:System.ArgumentNullException">v<paramref name="alue" /> 為 null。</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.IsUniqueKey">
      <summary>指出資料表值參數中的資料行是否是唯一的。</summary>
      <returns>Boolean 值。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.LocaleId">
      <summary>取得資料行或參數的地區設定 ID。</summary>
      <returns>資料行或參數的地區設定 ID (其型態為 <see cref="T:System.Int64" />)。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Max">
      <summary>取得 text、ntext 和 image 資料型別的長度。</summary>
      <returns>text、ntext 和 image 資料型別的長度。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.MaxLength">
      <summary>取得資料行或參數的最大長度。</summary>
      <returns>資料行或參數的最大長度 (其型態為 <see cref="T:System.Int64" />)。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Name">
      <summary>取得資料行或參數的名稱。</summary>
      <returns>資料行或參數的名稱 (其型態為 <see cref="T:System.String" />)。</returns>
      <exception cref="T:System.InvalidOperationException">建構函式中指定的 <paramref name="Name" /> 長度超過 128 個字元。</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Precision">
      <summary>取得資料行或參數的精確度。</summary>
      <returns>資料行或參數的精確度 (其型態為 <see cref="T:System.Byte" />)。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Scale">
      <summary>取得資料行或參數的小數點位數。</summary>
      <returns>資料行或參數的小數點位數。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SortOrder">
      <summary>傳回資料行的排序順序。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SortOrder" /> 物件。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SortOrdinal">
      <summary>傳回排序資料行的序數。</summary>
      <returns>排序資料行的序數。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SqlDbType">
      <summary>取得資料行或參數的資料型別。</summary>
      <returns>資料行或參數的資料型別 (其型態為 <see cref="T:System.Data.DbType" />)。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.TypeName">
      <summary>取得由執行個體表示之使用者定義型別 (UDT) 或 SQL Server 型別的三部分名稱。</summary>
      <returns>UDT 或 SQL Server 型別的名稱 (其型別為 <see cref="T:System.String" />)。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.UseServerDefault">
      <summary>報告這個資料行是否應該使用預設的伺服器值。</summary>
      <returns>Boolean 值。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionDatabase">
      <summary>取得這個 XML 執行個體之結構描述集合所在的資料庫名稱。</summary>
      <returns>這個 XML 執行個體之結構描述集合所在的資料庫名稱 (其型態為 <see cref="T:System.String" />)。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionName">
      <summary>取得這個 XML 執行個體的結構描述集合名稱。</summary>
      <returns>這個 XML 執行個體的結構描述集合名稱 (其型態為 <see cref="T:System.String" />)。</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionOwningSchema">
      <summary>取得這個 XML 執行個體之結構描述集合所在的擁有關聯式結構描述。</summary>
      <returns>這個 XML 執行個體之結構描述集合所在的擁有關聯式結構描述 (其型態為 <see cref="T:System.String" />)。</returns>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary>指定欄位的 SQL Server 特定的資料型別與屬性，以便在 <see cref="T:System.Data.SqlClient.SqlParameter" /> 中使用。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary>
        <see cref="T:System.Int64" />.64 位元帶正負號的整數。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary>型別 <see cref="T:System.Byte" /> 的 <see cref="T:System.Array" />。二進位資料的固定長度資料流，範圍在 1 和 8,000 位元組之間。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary>
        <see cref="T:System.Boolean" />.不帶正負號的數值，這個值可以是 0、1 或 null。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary>
        <see cref="T:System.String" />.非 Unicode 字元的固定長度資料流，範圍在 1 到 8,000 個字元之間。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary>日期資料範圍是從西元 1 年 1 月 1 日到西元 9999 年 12 月 31 日。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary>
        <see cref="T:System.DateTime" />.日期和時間資料，值範圍從 1753 年 1 月 1 日到 9999 年 12 月 31 日，正確率為 3.33 毫秒。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary>日期和時間資料。日期值範圍是從西元後 1 年 1 月 1 日到西元後 9999 年 12 月31 日。時間值的範圍從 00:00:00 到 23:59:59.9999999，精確度為 100 奈秒。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary>具備時區感知功能的日期和時間資料。日期值範圍是從西元後 1 年 1 月 1 日到西元後 9999 年 12 月31 日。時間值的範圍從 00:00:00 到 23:59:59.9999999，精確度為 100 奈秒。時區值範圍從 -14:00 到 +14:00。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary>
        <see cref="T:System.Decimal" />.固定的有效位數及小數位數值，介於 -10 38 -1 和 10 38 -1 之間。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary>
        <see cref="T:System.Double" />.浮點數，範圍為 -1.79E +308 到 1.79E +308。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary>型別 <see cref="T:System.Byte" /> 的 <see cref="T:System.Array" />。二進位資料的可變長度資料流，範圍從 0 到 2 31 -1 (或 2,147,483,647) 個位元組。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary>
        <see cref="T:System.Int32" />.32 位元帶正負號的整數。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary>
        <see cref="T:System.Decimal" />.貨幣值，範圍從 -2 63 (或 -9,223,372,036,854,775,808) 到 2 63 -1 (或 +9,223,372,036,854,775,807)，正確率為貨幣單位的千分之十。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary>
        <see cref="T:System.String" />.Unicode 字元的固定長度資料流，範圍在 1 到 4,000 個字元之間。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary>
        <see cref="T:System.String" />.Unicode 資料的可變長度資料流，具有 2 30 - 1 (或 1,073,741,823) 個字元的最大長度。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary>
        <see cref="T:System.String" />.Unicode 字元的可變長度資料流，範圍在 1 到 4,000 個字元之間。如果字串大於 4,000 個字元，則隱含轉換會失敗。當使用大於 4,000 個字元的字串時，明確設定物件。當資料庫資料行是 nvarchar(max) 時，請使用 <see cref="F:System.Data.SqlDbType.NVarChar" />。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary>
        <see cref="T:System.Single" />.浮點數，範圍為 -3.40E +38 到 3.40E +38。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary>
        <see cref="T:System.DateTime" />.日期和時間資料，值範圍從 1900 年 1 月 1 日到 2079 年 6 月 6 日，正確率為 1 分鐘。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary>
        <see cref="T:System.Int16" />.16 位元帶正負號的整數。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary>
        <see cref="T:System.Decimal" />.貨幣值，範圍從 -214,748.3648 到 +214,748.3647，正確率為貨幣單位的千分之十。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary>特殊資料型別，可指定資料表值參數所包含的結構化資料。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary>
        <see cref="T:System.String" />.非 Unicode 資料的可變長度資料流，具有 2 31 - 1 (或 2,147,483,647) 個字元的最大長度。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary>24 小時制的時間資料。時間值的範圍從 00:00:00 到 23:59:59.9999999，精確度為 100 奈秒。對應至 SQL Server time 值。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary>型別 <see cref="T:System.Byte" /> 的 <see cref="T:System.Array" />。自動產生的二進位號碼，保證都是資料庫內唯一的號碼timestamp 通常用來當做為版本戳記表格列的機制。儲存區大小為 8 位元組。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary>
        <see cref="T:System.Byte" />.8 位元不帶正負號的整數。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary>SQL Server 使用者定義類型 (UDT)。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary>
        <see cref="T:System.Guid" />.全域唯一識別項 (或 GUID)。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary>型別 <see cref="T:System.Byte" /> 的 <see cref="T:System.Array" />。二進位資料的可變長度資料流，範圍在 1 和 8,000 位元組之間。如果位元組陣列大於 8,000 個位元組，則隱含轉換會失敗。在使用大於 8,000 個位元組的位元組陣列時，明確設定物件。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary>
        <see cref="T:System.String" />.非 Unicode 字元的可變長度資料流，範圍在 1 和 8,000 字元之間。當資料庫資料行是 varchar(max) 時，請使用 <see cref="F:System.Data.SqlDbType.VarChar" />。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary>
        <see cref="T:System.Object" />.特殊的資料型別，可以包含數值、字串、二進位或日期資料，以及 Empty 和 Null 等 SQL Server 值 (如果未宣告其他型別，則會假定為這個型別)。</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary>XML 值。使用 <see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> 方法或 <see cref="P:System.Data.SqlTypes.SqlXml.Value" /> 屬性取得 XML 做為字串，或呼叫 <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" /> 方法 <see cref="T:System.Xml.XmlReader" /> 取得 XML 做為字串。</summary>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary>提供 <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 事件的其他資訊。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary>建立 <see cref="T:System.Data.StatementCompletedEventArgs" /> 類別的新執行個體。</summary>
      <param name="recordCount">指出導致發生 <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 事件之陳述式所影響的列數。</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary>指出導致發生 <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 事件之陳述式所影響的列數。</summary>
      <returns>受影響的資料列數目。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary>
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 事件之事件處理常式的委派型別。</summary>
      <param name="sender">事件的來源。</param>
      <param name="e">事件的資料。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.ApplicationIntent">
      <summary>指定 <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent" /> 的值。可能的值為 ReadWrite 和 ReadOnly。</summary>
    </member>
    <member name="F:System.Data.SqlClient.ApplicationIntent.ReadOnly">
      <summary>連接到伺服器時的應用程式工作負載類型是唯讀的。</summary>
    </member>
    <member name="F:System.Data.SqlClient.ApplicationIntent.ReadWrite">
      <summary>連接到伺服器時的應用程式工作負載類型是可讀寫的。</summary>
    </member>
    <member name="T:System.Data.SqlClient.SortOrder">
      <summary>指定資料列的排序方式。</summary>
    </member>
    <member name="F:System.Data.SqlClient.SortOrder.Ascending">
      <summary>資料列是依遞增順序來排序。</summary>
    </member>
    <member name="F:System.Data.SqlClient.SortOrder.Descending">
      <summary>資料列是依遞減順序來排序。</summary>
    </member>
    <member name="F:System.Data.SqlClient.SortOrder.Unspecified">
      <summary>預設值。未指定排序順序。</summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientFactory">
      <summary>表示一組方法，用於建立 <see cref="N:System.Data.SqlClient" /> 提供者之資料來源類別 (Class) 實作的執行個體。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateCommand">
      <summary>傳回強型別的 <see cref="T:System.Data.Common.DbCommand" /> 執行個體。</summary>
      <returns>
        <see cref="T:System.Data.Common.DbCommand" /> 的新強型別執行個體。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateConnection">
      <summary>傳回強型別的 <see cref="T:System.Data.Common.DbConnection" /> 執行個體。</summary>
      <returns>
        <see cref="T:System.Data.Common.DbConnection" /> 的新強型別執行個體。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder">
      <summary>傳回強型別的 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 執行個體。</summary>
      <returns>
        <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 的新強型別執行個體。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateParameter">
      <summary>傳回強型別的 <see cref="T:System.Data.Common.DbParameter" /> 執行個體。</summary>
      <returns>
        <see cref="T:System.Data.Common.DbParameter" /> 的新強型別執行個體。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientFactory.Instance">
      <summary>取得 <see cref="T:System.Data.SqlClient.SqlClientFactory" /> 的執行個體。這可以用來擷取強型別的資料物件。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlCommand">
      <summary>表示要對 SQL Server 資料庫執行的 Transact-SQL 陳述式或預存程序。此類別無法被繼承。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor">
      <summary>初始化 <see cref="T:System.Data.SqlClient.SqlCommand" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
      <summary>使用查詢的文字，初始化 <see cref="T:System.Data.SqlClient.SqlCommand" /> 類別的新執行個體。</summary>
      <param name="cmdText">查詢的文字。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
      <summary>使用查詢的文字和 <see cref="T:System.Data.SqlClient.SqlConnection" />，初始化 <see cref="T:System.Data.SqlClient.SqlCommand" /> 類別的新執行個體。</summary>
      <param name="cmdText">查詢的文字。</param>
      <param name="connection">
        <see cref="T:System.Data.SqlClient.SqlConnection" />，表示 SQL Server 執行個體的連接。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
      <summary>使用查詢的文字、<see cref="T:System.Data.SqlClient.SqlConnection" /> 和 <see cref="T:System.Data.SqlClient.SqlTransaction" />，初始化 <see cref="T:System.Data.SqlClient.SqlCommand" /> 類別的新執行個體。</summary>
      <param name="cmdText">查詢的文字。</param>
      <param name="connection">
        <see cref="T:System.Data.SqlClient.SqlConnection" />，表示 SQL Server 執行個體的連接。</param>
      <param name="transaction">
        <see cref="T:System.Data.SqlClient.SqlCommand" /> 執行的所在 <see cref="T:System.Data.SqlClient.SqlTransaction" />。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.Cancel">
      <summary>嘗試取消 <see cref="T:System.Data.SqlClient.SqlCommand" /> 的執行。</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandText">
      <summary>取得或設定要在資料來源執行的 Transact-SQL 陳述式、資料表名稱或預存程序。</summary>
      <returns>要執行的 Transact-SQL 陳述式或預存程序。預設為空字串。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
      <summary>取得或設定結束執行命令的嘗試並產生錯誤之前的等待時間。</summary>
      <returns>等待命令執行的時間 (以秒為單位)。預設為 30 秒。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandType">
      <summary>取得或設定值，其表示 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 屬性解譯的方式。</summary>
      <returns>其中一個 <see cref="T:System.Data.CommandType" /> 值。預設值為 Text。</returns>
      <exception cref="T:System.ArgumentException">The value was not a valid <see cref="T:System.Data.CommandType" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Connection">
      <summary>取得或設定這個 <see cref="T:System.Data.SqlClient.SqlCommand" /> 的執行個體所使用的 <see cref="T:System.Data.SqlClient.SqlConnection" />。</summary>
      <returns>資料來源的連接。預設值是 null。</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> property was changed while the command was enlisted in a transaction.. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.CreateParameter">
      <summary>建立 <see cref="T:System.Data.SqlClient.SqlParameter" /> 物件的新執行個體。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> 物件。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible">
      <summary>取得或設定值，指出命令物件是否應該在 Windows Form 設計工具控制項中顯示。</summary>
      <returns>值，指出命令物件是否應該顯示在控制項中。預設值為 true。</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
      <summary>針對連接執行 Transact-SQL 陳述式，並傳回受影響的資料列數目。</summary>
      <returns>受影響的資料列數目。</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 資料流支援.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row.This exception is not generated when you are using Microsoft .NET Framework version 1.0.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary>非同步版本的 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />，這個版本會對連接執行 Transact-SQL 陳述式，並傳回受影響的資料列數目。取消語彙基元可用於要求在命令逾時之前捨棄作業。例外狀況將經由傳回的 Task 物件回報。</summary>
      <returns>表示非同步作業的工作。</returns>
      <param name="cancellationToken">取消指令。</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 資料流支援.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 資料流支援.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
      <summary>將 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 傳送至 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，並建置 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlDataReader" /> 物件。</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 資料流支援.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row.This exception is not generated when you are using Microsoft .NET Framework version 1.0.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.InvalidOperationException">The current state of the connection is closed.<see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> requires an open <see cref="T:System.Data.SqlClient.SqlConnection" />.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>將 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 傳送至 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，並使用其中一個 <see cref="T:System.Data.CommandBehavior" /> 值來建置 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlDataReader" /> 物件。</returns>
      <param name="behavior">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 資料流支援.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
      <summary>非同步版本的 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />，這個版本會將 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 傳送至 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> 並建置 <see cref="T:System.Data.SqlClient.SqlDataReader" />。例外狀況將經由傳回的 Task 物件回報。</summary>
      <returns>表示非同步作業的工作。</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 資料流支援.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 資料流支援.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary>非同步版本的 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />，這個版本會將 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 傳送至 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，並建置 <see cref="T:System.Data.SqlClient.SqlDataReader" />。例外狀況將經由傳回的 Task 物件回報。</summary>
      <returns>表示非同步作業的工作。</returns>
      <param name="behavior">陳述式執行和資料擷取的選項。設定為 Default 時，<see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> 會在傳回完成的工作之前，讀取整個資料列。</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 資料流支援.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 資料流支援.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>非同步版本的 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />，這個版本會將 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 傳送至 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />，並建置 <see cref="T:System.Data.SqlClient.SqlDataReader" />。取消語彙基元可用於要求在命令逾時之前捨棄作業。例外狀況將經由傳回的 Task 物件回報。</summary>
      <returns>表示非同步作業的工作。</returns>
      <param name="behavior">陳述式執行和資料擷取的選項。設定為 Default 時，<see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> 會在傳回完成的工作之前，讀取整個資料列。</param>
      <param name="cancellationToken">取消指令。</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 資料流支援.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 資料流支援.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary>非同步版本的 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />，這個版本會將 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 傳送至 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> 並建置 <see cref="T:System.Data.SqlClient.SqlDataReader" />。取消語彙基元可用於要求在命令逾時之前捨棄作業。例外狀況將經由傳回的 Task 物件回報。</summary>
      <returns>表示非同步作業的工作。</returns>
      <param name="cancellationToken">取消指令。</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 資料流支援.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 資料流支援.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
      <summary>執行查詢，並傳回查詢所傳回的結果集第一個資料列的第一個資料行。會忽略其他的資料行或資料列。</summary>
      <returns>結果集中第一個資料列的第一個資料行；如果結果集是空的，則為 Null 參考 (在 Visual Basic 中為 Nothing)。最多傳回 2033 個字元。</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 資料流支援.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row.This exception is not generated when you are using Microsoft .NET Framework version 1.0.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary>
        <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />的非同步版本，該版本會執行非同步查詢並傳回查詢所傳回的結果集中第一個資料列的第一個資料行。會忽略其他的資料行或資料列。取消語彙基元可用於要求在命令逾時之前捨棄作業。例外狀況將經由傳回的 Task 物件回報。</summary>
      <returns>表示非同步作業的工作。</returns>
      <param name="cancellationToken">取消指令。</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 資料流支援.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 資料流支援.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
      <summary>將 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 傳送至 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> 並建置 <see cref="T:System.Xml.XmlReader" /> 物件。</summary>
      <returns>
        <see cref="T:System.Xml.XmlReader" /> 物件。</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 資料流支援.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row.This exception is not generated when you are using Microsoft .NET Framework version 1.0.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
      <summary>非同步版本的 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />，這個版本會將 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 傳送至 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> 並建置 <see cref="T:System.Xml.XmlReader" /> 物件。例外狀況將經由傳回的 Task 物件回報。</summary>
      <returns>表示非同步作業的工作。</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 資料流支援.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 資料流支援.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
      <summary>非同步版本的 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />，這個版本會將 <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 傳送至 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> 並建置 <see cref="T:System.Xml.XmlReader" /> 物件。取消語彙基元可用於要求在命令逾時之前捨棄作業。例外狀況將經由傳回的 Task 物件回報。</summary>
      <returns>表示非同步作業的工作。</returns>
      <param name="cancellationToken">取消指令。</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 資料流支援.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 資料流支援.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 資料流支援.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Parameters">
      <summary>取得 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />。</summary>
      <returns>Transact-SQL 陳述式或預存程序的參數。預設為空集合。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.Prepare">
      <summary>在 SQL Server 的執行個體上建立命令的預備版本。</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.SqlClient.SqlCommand.StatementCompleted">
      <summary>發生於 Transact-SQL 陳述式執行完畢時。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Transaction">
      <summary>取得或設定 <see cref="T:System.Data.SqlClient.SqlTransaction" />，<see cref="T:System.Data.SqlClient.SqlCommand" /> 將會在其中執行。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlTransaction" />。預設值是 null。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
      <summary>取得或設定當由 <see cref="T:System.Data.Common.DbDataAdapter" /> 的 Update 方法使用命令結果時，如何套用至 <see cref="T:System.Data.DataRow" />。</summary>
      <returns>其中一個 <see cref="T:System.Data.UpdateRowSource" /> 值。</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlConnection">
      <summary>表示 SQL Server 資料庫的開啟連接。此類別無法被繼承。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.#ctor">
      <summary>初始化 <see cref="T:System.Data.SqlClient.SqlConnection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
      <summary>指定包含連接字串的字串時，初始化 <see cref="T:System.Data.SqlClient.SqlConnection" /> 類別的新執行個體。</summary>
      <param name="connectionString">用來開啟 SQL Server 資料庫的連接。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
      <summary>開始資料庫交易。</summary>
      <returns>代表新交易的物件。</returns>
      <exception cref="T:System.Data.SqlClient.SqlException">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</exception>
      <exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>使用指定的隔離等級開始資料庫交易。</summary>
      <returns>代表新交易的物件。</returns>
      <param name="iso">應該在其下執行交易的隔離等級。</param>
      <exception cref="T:System.Data.SqlClient.SqlException">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</exception>
      <exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
      <summary>使用指定的隔離等級和交易名稱開始資料庫交易。</summary>
      <returns>代表新交易的物件。</returns>
      <param name="iso">應該在其下執行交易的隔離等級。</param>
      <param name="transactionName">異動的名稱。</param>
      <exception cref="T:System.Data.SqlClient.SqlException">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</exception>
      <exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
      <summary>使用指定的交易名稱開始資料庫交易。</summary>
      <returns>代表新交易的物件。</returns>
      <param name="transactionName">異動的名稱。</param>
      <exception cref="T:System.Data.SqlClient.SqlException">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</exception>
      <exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
      <summary>為開啟的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 變更目前的資料庫。</summary>
      <param name="database">用於代替目前資料庫的資料庫名稱。</param>
      <exception cref="T:System.ArgumentException">The database name is not valid.</exception>
      <exception cref="T:System.InvalidOperationException">The connection is not open. </exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Cannot change the database. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ClearAllPools">
      <summary>清空連接集區。</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)">
      <summary>清空與特定連接關聯的連接集區。</summary>
      <param name="connection">要從集區中清除的 <see cref="T:System.Data.SqlClient.SqlConnection" />。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
      <summary>最近連線的連線 ID，無論連線是否成功。</summary>
      <returns>最近連線的連線 ID。</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.Close">
      <summary>關閉與資料庫的連接。這是關閉任何開啟連接的慣用方法。</summary>
      <exception cref="T:System.Data.SqlClient.SqlException">The connection-level error that occurred while opening the connection. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ConnectionString">
      <summary>取得或設定用來開啟 SQL Server 資料庫的字串。</summary>
      <returns>連接字串，包含來源資料庫名稱和其他建立初始連接所需要的參數。預設值為空字串。</returns>
      <exception cref="T:System.ArgumentException">An invalid connection string argument has been supplied, or a required connection string argument has not been supplied. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
      <summary>取得在終止嘗試並產生錯誤前嘗試建立連接的等待時間。</summary>
      <returns>等待連接開啟的時間 (以秒為單位)。預設值為 15 秒。</returns>
      <exception cref="T:System.ArgumentException">The value set is less than 0. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.CreateCommand">
      <summary>建立並傳回與 <see cref="T:System.Data.SqlClient.SqlConnection" /> 相關聯的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.Database">
      <summary>取得目前資料庫或要在連接開啟之後使用的資料庫名稱。</summary>
      <returns>目前資料庫的名稱或連接開啟後要使用之資料庫的名稱。預設值為空字串。</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.DataSource">
      <summary>取得要連接的 SQL Server 執行個體名稱。</summary>
      <returns>要連接的 SQL Server 執行個體名稱。預設值為空字串。</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
      <summary>取得或設定 <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> 屬性。</summary>
      <returns>如果 <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> 屬性已經設定，則為 true，否則為 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Data.SqlClient.SqlConnection.InfoMessage">
      <summary>發生於 SQL Server 傳回警告或告知性訊息時。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.Open">
      <summary>使用 <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /> 所指定的屬性設定，開啟資料庫連接。</summary>
      <exception cref="T:System.InvalidOperationException">Cannot open a connection without specifying a data source or server.orThe connection is already open.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">A connection-level error occurred while opening the connection.If the <see cref="P:System.Data.SqlClient.SqlException.Number" /> property contains the value 18487 or 18488, this indicates that the specified password has expired or must be reset.See the <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /> method for more information.The &lt;system.data.localdb&gt; tag in the app.config file has invalid or unknown elements.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">There are two entries with the same name in the &lt;localdbinstances&gt; section.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary>非同步版本的 <see cref="M:System.Data.SqlClient.SqlConnection.Open" />，這個版本會透過 <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /> 所指定的屬性設定開啟資料庫連接。取消語彙基元可用於要求在連線逾時之前捨棄作業。例外狀況將經由傳回的工作傳播。如果超過連接逾時期限而未順利連線，傳回的工作會標示為失敗並發生例外狀況。實作會傳回一項工作，而不需針對集區和非集區的連接封鎖呼叫的執行緒。</summary>
      <returns>表示非同步作業的工作。</returns>
      <param name="cancellationToken">取消指令。</param>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.Context Connection=true is specified in the connection string.A connection was not available from the connection pool before the connection time out elapsed.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Any error returned by SQL Server that occurred while opening the connection.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.PacketSize">
      <summary>取得用來與 SQL Server 執行個體通訊的網路封包大小 (位元組)。</summary>
      <returns>網路封包的大小 (位元組)。預設值為 8000。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ResetStatistics">
      <summary>如果啟用統計資料蒐集，則所有值都會重設為零。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics">
      <summary>呼叫方法時，傳回統計資料的名稱值配對集合。</summary>
      <returns>傳回 <see cref="T:System.Collections.DictionaryEntry" /> 項目之 <see cref="T:System.Collections.IDictionary" /> 類型的參考。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ServerVersion">
      <summary>取得字串，其中包含用戶端連接的 SQL Server 執行個體版本。</summary>
      <returns>SQL Server 執行個體的版本。</returns>
      <exception cref="T:System.InvalidOperationException">The connection is closed. <see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" /> was called while the returned Task was not completed and the connection was not opened after a call to <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.State">
      <summary>指出在連接上執行最近一次網路作業期間 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的狀態。</summary>
      <returns>
        <see cref="T:System.Data.ConnectionState" /> 列舉。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled">
      <summary>設定為 true 時，啟用目前連接的統計資料蒐集。</summary>
      <returns>若啟用了統計資料蒐集，則傳回 true；否則傳回 false。預設值為 false。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.WorkstationId">
      <summary>取得識別資料庫用戶端的字串。</summary>
      <returns>識別資料庫用戶端的字串。如果沒有指定，則為用戶端電腦的名稱。如果都沒有指定，則該值為空字串。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.SqlClient.SqlConnectionStringBuilder">
      <summary>提供簡單的方法，以建立和管理 <see cref="T:System.Data.SqlClient.SqlConnection" /> 類別使用之連接字串的內容。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.#ctor">
      <summary>初始化 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 類別的新執行個體。所提供的連接字串會提供執行個體內部連接資訊的資料。</summary>
      <param name="connectionString">物件內部連接資訊的基準。剖析至名稱/值組。無效索引鍵名稱會引發 <see cref="T:System.Collections.Generic.KeyNotFoundException" />。</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">連接字串內的無效索引鍵名稱。</exception>
      <exception cref="T:System.FormatException">連接字串內的無效值 (尤其在應提供而未提供布林值 (Boolean) 或數值時)。</exception>
      <exception cref="T:System.ArgumentException">提供的 <paramref name="connectionString" /> 無效。</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent">
      <summary>當連接到 SQL Server 可用性群組中的資料庫時，宣告應用程式工作負載類型。您可以使用 <see cref="T:System.Data.SqlClient.ApplicationIntent" /> 來設定這個屬性的值。如需 SqlClient 對於 AlwaysOn 可用性群組之支援的詳細資訊，請參閱 高可用性、嚴重損壞修復的 SqlClient 支援。</summary>
      <returns>傳回屬性的目前值 (類型 <see cref="T:System.Data.SqlClient.ApplicationIntent" /> 的值)。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName">
      <summary>取得或設定與連接字串相關聯的應用程式名稱。</summary>
      <returns>應用程式的名稱，如果沒有提供任何名稱，則為 ".NET SqlClient Data Provider"。</returns>
      <exception cref="T:System.ArgumentNullException">若要將值設為 null，請使用 <see cref="F:System.DBNull.Value" />。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename">
      <summary>取得或設定包含主要資料檔名稱的字串。這包括可附加資料庫的完整路徑名稱。</summary>
      <returns>AttachDBFilename 屬性的值，如果未提供任何值，則為 String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">若要將值設為 null，請使用 <see cref="F:System.DBNull.Value" />。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.Clear">
      <summary>清除 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 執行個體的內容。</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount">
      <summary>[在 .NET Framework 4.5.1 或更新版本中支援]在識別發生閒置連接失敗後嘗試重新連線的次數。這必須是介於 0 到 255 之間的整數。預設值為 1。設為 0 以停用閒置連接失敗時的重新連線。如果設定的值超出允許範圍，則擲回 <see cref="T:System.ArgumentException" />。</summary>
      <returns>在識別發生閒置連接失敗後嘗試重新連線的次數。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval">
      <summary>[在 .NET Framework 4.5.1 或更新版本中支援]在識別發生閒置連接失敗後，每次重新連線嘗試之間的時間量 (以秒為單位)。這必須是介於 1 到 60 之間的整數。預設為 10 秒。如果設定的值超出允許範圍，則擲回 <see cref="T:System.ArgumentException" />。</summary>
      <returns>在識別發生閒置連接失敗後，每次重新連線嘗試之間的時間量 (以秒為單位)。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout">
      <summary>取得或設定在終止嘗試並產生錯誤之前，要等待伺服器連接的時間長度 (以秒為單位)。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout" /> 屬性的值，如果未提供任何值，則為 15 秒。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)">
      <summary>判斷 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 是否包含特定索引鍵。</summary>
      <returns>如果 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 包含具有指定索引鍵的項目，則為 true，否則為 false。</returns>
      <param name="keyword">要在 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 中尋找的索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> 為 null (在 Visual Basic 中為 Nothing)。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage">
      <summary>取得或設定 SQL Server 語言記錄名稱。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage" /> 屬性的值，如果未提供任何值，則為 String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">若要將值設為 null，請使用 <see cref="F:System.DBNull.Value" />。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.DataSource">
      <summary>取得或設定要連接 SQL Server 之執行個體的名稱或網路位址。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.DataSource" /> 屬性的值，如果未提供任何值，則為 String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">若要將值設為 null，請使用 <see cref="F:System.DBNull.Value" />。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt">
      <summary>取得或設定布林值，指出如果伺服器已安裝憑證，SQL Server 是否會對在用戶端與伺服器之間傳送的所有資料使用 SSL 加密 (Encryption)。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt" /> 屬性的值，如果未提供任何值，則為 false。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner">
      <summary>取得或設定主要伺服器當機時，要連接之協力伺服器的名稱或位址。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner" /> 屬性的值，如果未提供任何值，則為 String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">若要將值設為 null，請使用 <see cref="F:System.DBNull.Value" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog">
      <summary>取得或設定與連接相關聯的資料庫名稱。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog" /> 屬性的值，如果未提供任何值，則為 String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">若要將值設為 null，請使用 <see cref="F:System.DBNull.Value" />。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity">
      <summary>取得或設定布林值，指出是否在連接中指定使用者 ID (User ID) 和密碼 (false 時) 或目前 Windows 帳戶認證是否用於驗證 (true 時)。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity" /> 屬性的值，如果未提供任何值，則為 false。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)">
      <summary>取得或設定和指定索引鍵關聯的值。在 C# 中，這個屬性是索引子。</summary>
      <returns>與指定索引鍵關聯的值。</returns>
      <param name="keyword">要取得或設定的項目索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">嘗試加入可用索引鍵中不存在的索引鍵。</exception>
      <exception cref="T:System.FormatException">連接字串內的無效值 (尤其在應提供而未提供布林值或數值時)。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Keys">
      <summary>取得 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 中包含索引鍵的 <see cref="T:System.Collections.ICollection" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 中包含索引鍵的 <see cref="T:System.Collections.ICollection" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout">
      <summary>取得或設定在遭到終結之前，連接在連接集區中存在的最短時間 (以秒為單位)。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout" /> 屬性的值，如果未提供任何值，則為 0。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize">
      <summary>取得或設定連接集區中，允許之這個指定連接字串的最大連接數目。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize" /> 屬性的值，如果未提供任何值，則為 100。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize">
      <summary>取得或設定連接集區中，允許之這個指定連接字串的最小連接數目。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize" /> 屬性的值，如果未提供任何值，則為 0。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets">
      <summary>如果為 true，則應用程式可維護 Multiple Active Result Set (MARS)。如果為 false，則應用程式必須處理或取消一個批次的所有結果集，才能夠執行該連接的其他批次。如需詳細資訊，請參閱 Multiple Active Result Sets (MARS)。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets" /> 屬性的值，如果未提供任何值，則為 false。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover">
      <summary>如果您的應用程式在不同子網路上連接到 AlwaysOn 可用性群組 (AG)，則設定 MultiSubnetFailover=true 能夠更快速地偵測目前使用中的伺服器並與其連接。如需 SqlClient 對於 AlwaysOn 可用性群組之支援的詳細資訊，請參閱 高可用性、嚴重損壞修復的 SqlClient 支援。</summary>
      <returns>傳回表示屬性目前值的 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize">
      <summary>取得或設定用於與 SQL Server 之執行個體通訊的網路封包大小 (以位元組為單位)。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize" /> 屬性的值，如果未提供任何值，則為 8000。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Password">
      <summary>取得或設定 SQL Server 帳戶的密碼。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Password" /> 屬性的值，如果未提供任何值，則為 String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">密碼已不正確地設定為 null。請參閱下列程式碼範例。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo">
      <summary>取得或設定布林值，指出連接開啟或曾經處於開啟狀態時，是否將安全性相關資訊 (如密碼) 當做連接的一部分傳回。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo" /> 屬性的值，如果未提供任何值，則為 false。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Pooling">
      <summary>取得或設定布林值，指出每次要求連接時，是否緩衝或明確開啟連接。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Pooling" /> 屬性的值，如果未提供任何值，則為 true。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)">
      <summary>將具有指定索引鍵的項目從 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 執行個體移除。</summary>
      <returns>如果索引鍵存在於連接字串內且已移除，則為 true，否則為 false。</returns>
      <param name="keyword">要從這個 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 的連接字串中移除之索引鍵/值組的索引鍵。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> 為 null (在 Visual Basic 中為 Nothing)。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Replication">
      <summary>取得或設定布林值，指出使用連接是否支援複寫。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Replication" /> 屬性的值，如果未提供任何值，則為 false。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>指出這個 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 執行個體中，是否存在指定的索引鍵。</summary>
      <returns>如果 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 包含的項目具有指定索引鍵，則為 true，否則為 false。</returns>
      <param name="keyword">要在 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 中尋找的索引鍵。</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate">
      <summary>取得或設定值，指出通道是否會加密，同時略過驗證信任的憑證鏈結查核。</summary>
      <returns>Boolean。可辨認的值為 true、false、yes 和 no。</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>從這個 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 擷取對應至所提供索引鍵的值。</summary>
      <returns>如果在連接字串中找到 <paramref name="keyword" />，則為 true，否則為 false。</returns>
      <param name="keyword">要擷取的項目索引鍵。</param>
      <param name="value">對應至 <paramref name="keyword." /> 的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> 包含 null 值 (在 Visual Basic 中為 Nothing)。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion">
      <summary>取得或設定字串值，表示應用程式預期的類型系統。</summary>
      <returns>下列表格顯示 <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion" /> 屬性的可能值。值說明SQL Server 2005使用 SQL Server 2005 類型系統。對於目前版本的 ADO.NET，不執行任何轉換。SQL Server 2008使用 SQL Server 2008 類型系統。Latest使用這個主從組能處理的最新版本。當用戶端和伺服器元件更新時，這也會自動更新。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserID">
      <summary>取得或設定連接至 SQL Server 時要使用的使用者 ID。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserID" /> 屬性的值，如果未提供任何值，則為 String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">若要將值設為 null，請使用 <see cref="F:System.DBNull.Value" />。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance">
      <summary>取得或設定值，指出是否將連接從預設 SQL Server Express 執行個體，重新導向至在呼叫端帳戶下執行之執行階段啟始的執行個體。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance" /> 屬性的值，如果未提供任何值，則為 False。</returns>
      <exception cref="T:System.ArgumentNullException">若要將值設為 null，請使用 <see cref="F:System.DBNull.Value" />。</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Values">
      <summary>取得 <see cref="T:System.Collections.ICollection" />，此集合包含 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 中的值。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />，在 <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 中包含值。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID">
      <summary>取得或設定連接至 SQL Server 的工作站名稱。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID" /> 屬性的值，如果未提供任何值，則為 String.Empty。</returns>
      <exception cref="T:System.ArgumentNullException">若要將值設為 null，請使用 <see cref="F:System.DBNull.Value" />。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.SqlClient.SqlDataReader">
      <summary>提供從 SQL Server 資料庫讀取資料列的順向 (Forward-Only) 資料流之方式。此類別無法被繼承。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Connection">
      <summary>取得與 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 相關聯的 <see cref="T:System.Data.SqlClient.SqlConnection" />。</summary>
      <returns>與 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 相關聯的 <see cref="T:System.Data.SqlClient.SqlConnection" />。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Depth">
      <summary>取得值，表示目前資料列的巢狀深度。</summary>
      <returns>目前資料列的巢狀深度。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.FieldCount">
      <summary>取得目前資料列中的資料行數目。</summary>
      <returns>當未置於有效資料錄集 (Recordset) 時，則為 0，否則為目前資料列中的資料行數目。預設值為 -1。</returns>
      <exception cref="T:System.NotSupportedException">目前沒有連接至 SQL Server 的執行個體。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)">
      <summary>取得指定的資料行值做為布林值。</summary>
      <returns>資料行的值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidCastException">指定的轉型無效。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)">
      <summary>取得指定資料行的值做為位元組。</summary>
      <returns>指定資料行的值做為位元組。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidCastException">指定的轉型無效。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>從指定的資料行位移將字元的資料流讀入做為陣列的緩衝區，開始於指定的緩衝區位移。</summary>
      <returns>讀取的實際位元組數目。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <param name="dataIndex">要開始讀取作業之資料欄位中的來源索引。</param>
      <param name="buffer">要讀入位元組資料流的目的緩衝區。</param>
      <param name="bufferIndex">
        <paramref name="buffer" /> 內寫入作業開始之處的索引。</param>
      <param name="length">複製入緩衝區的最大長度。</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)">
      <summary>取得指定資料行的值做為字元。</summary>
      <returns>指定的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidCastException">指定的轉型無效。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>從指定的資料行位移將字元的資料流讀入做為陣列的緩衝區，開始於指定的緩衝區位移。</summary>
      <returns>讀取的實際字元數目。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <param name="dataIndex">要開始讀取作業之資料欄位中的來源索引。</param>
      <param name="buffer">要讀入位元組資料流的目的緩衝區。</param>
      <param name="bufferIndex">
        <paramref name="buffer" /> 內寫入作業開始之處的索引。</param>
      <param name="length">複製入緩衝區的最大長度。</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)">
      <summary>取得字串，表示指定之資料行的資料型別。</summary>
      <returns>字串，表示指定之資料行的資料型別。</returns>
      <param name="i">要尋找之資料行以零起始的序數位置。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)">
      <summary>取得指定之資料行的值做為 <see cref="T:System.DateTime" /> 物件。</summary>
      <returns>指定的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidCastException">指定的轉型無效。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)">
      <summary>擷取指定資料行的值做為 <see cref="T:System.DateTimeOffset" /> 物件。</summary>
      <returns>指定的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidCastException">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)">
      <summary>取得指定之資料行的值做為 <see cref="T:System.Decimal" /> 物件。</summary>
      <returns>指定的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidCastException">指定的轉型無效。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)">
      <summary>取得指定資料行的值做為雙精確度浮點數。</summary>
      <returns>指定的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidCastException">指定的轉型無效。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetEnumerator">
      <summary>傳回透過 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 重複的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlDataReader" /> 的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)">
      <summary>取得 <see cref="T:System.Type" />，即是物件的資料型別。</summary>
      <returns>
        <see cref="T:System.Type" />，即是物件的資料型別。如果型別不存在於用戶端上，則在從資料庫傳回使用者定義型別 (UDT) 的案例中，GetFieldType 會傳回 null。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)">
      <summary>同步取得指定之資料行的值做為型別。<see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" /> 是這個方法的非同步版本。</summary>
      <returns>傳回的型別物件。</returns>
      <param name="i">要擷取的資料行。</param>
      <typeparam name="T">要傳回的值型别。如需詳細資訊，請參閱「備註」一節。</typeparam>
      <exception cref="T:System.InvalidOperationException">在資料擷取期間，連線中斷或關閉。<see cref="T:System.Data.SqlClient.SqlDataReader" />在資料擷取期間已關閉。沒有可供讀取的資料 (例如，第一個 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 沒有被呼叫，或傳回 false)。嘗試在循序模式下讀取先前讀取的資料行。有進行中的非同步作業。當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException">嘗試讀取不存在的資料行。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">資料行的值是 null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> = = true)，擷取非 SQL 型別。</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="T" />不符合 SQL Server 傳回的型別或無法轉換。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary>非同步取得指定之資料行的值做為型別。<see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" /> 是這個方法的同步版本。</summary>
      <returns>傳回的型別物件。</returns>
      <param name="i">要擷取的資料行。</param>
      <param name="cancellationToken">取消指令，其會傳播說明應該取消作業的通知。這並不保證取消。如果設定為 CancellationToken.None，就會使這個方法相當於 <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />。傳回的工作必須標記為已取消。</param>
      <typeparam name="T">要傳回的值型别。如需詳細資訊，請參閱「備註」一節。</typeparam>
      <exception cref="T:System.InvalidOperationException">在資料擷取期間，連線中斷或關閉。<see cref="T:System.Data.SqlClient.SqlDataReader" />在資料擷取期間已關閉。沒有可供讀取的資料 (例如，第一個 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 沒有被呼叫，或傳回 false)。嘗試在循序模式下讀取先前讀取的資料行。有進行中的非同步作業。當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。Context Connection=true 指定於連接字串中。</exception>
      <exception cref="T:System.IndexOutOfRangeException">嘗試讀取不存在的資料行。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">資料行的值是 null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> = = true)，擷取非 SQL 型別。</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="T" />不符合 SQL Server 傳回的型別或無法轉換。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)">
      <summary>取得指定資料行的值做為單精確度浮點數。</summary>
      <returns>指定的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidCastException">指定的轉型無效。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)">
      <summary>取得指定資料行的值做為全域唯一識別項 (GUID)。</summary>
      <returns>指定的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidCastException">指定的轉型無效。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)">
      <summary>取得指定資料行的值做為 16 位元帶正負號的整數。</summary>
      <returns>指定的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidCastException">指定的轉型無效。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)">
      <summary>取得指定資料行的值做為 32 位元帶正負號的整數。</summary>
      <returns>指定的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidCastException">指定的轉型無效。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)">
      <summary>取得指定資料行的值做為 64 位元帶正負號的整數。</summary>
      <returns>指定的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidCastException">指定的轉型無效。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)">
      <summary>取得指定資料行的名稱。</summary>
      <returns>指定資料行的名稱。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)">
      <summary>提供資料行的名稱，取得資料行序數。</summary>
      <returns>以零起始的資料行序數。</returns>
      <param name="name">資料行的名稱。</param>
      <exception cref="T:System.IndexOutOfRangeException">指定的名稱不是有效的資料行名稱。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>取得 Object，其為基礎提供者特定欄位型別的表示。</summary>
      <returns>取得 <see cref="T:System.Object" />，其為基礎提供者特定欄位型別的表示。</returns>
      <param name="i">
        <see cref="T:System.Int32" />，表示資料行序數。</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>取得 Object，其為基礎提供者特定值的表示。</summary>
      <returns>
        <see cref="T:System.Object" />，是基礎提供者特定值的表示。</returns>
      <param name="i">
        <see cref="T:System.Int32" />，表示資料行序數。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>取得物件的陣列，這些物件是基礎提供者特定值的表示。</summary>
      <returns>取得物件的陣列，這些物件是基礎提供者特定值的表示。</returns>
      <param name="values">要將資料行值複製到其中的目標 <see cref="T:System.Object" /> 陣列。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)">
      <summary>取得指定的資料行值做為 <see cref="T:System.Data.SqlTypes.SqlBinary" />。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)">
      <summary>取得指定的資料行值做為 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns>資料行的值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)">
      <summary>取得指定的資料行值做為 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)">
      <summary>取得指定資料行的值做為 <see cref="T:System.Data.SqlTypes.SqlBytes" />。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)">
      <summary>取得指定資料行的值做為 <see cref="T:System.Data.SqlTypes.SqlChars" />。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlTypes.SqlChars" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)">
      <summary>取得指定的資料行值做為 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)">
      <summary>取得指定的資料行值做為 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)">
      <summary>取得指定的資料行值做為 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)">
      <summary>取得指定的資料行值做為 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)">
      <summary>取得指定的資料行值做為 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)">
      <summary>取得指定的資料行值做為 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)">
      <summary>取得指定的資料行值做為 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)">
      <summary>取得指定的資料行值做為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)">
      <summary>取得指定的資料行值做為 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)">
      <summary>取得指定的資料行值做為 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlTypes.SqlString" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)">
      <summary>將指定之資料行內的資料值當做 SQL Server 型別傳回。</summary>
      <returns>表示為 <see cref="T:System.Data.SqlDbType" /> 的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])">
      <summary>填滿 <see cref="T:System.Object" /> 陣列，其中包含記錄內所有資料行 (表示為 SQL Server 型別) 的值。</summary>
      <returns>整數，表示已複製的資料行數目。</returns>
      <param name="values">要將值複製到其中的目標 <see cref="T:System.Object" /> 陣列。資料行的值都會以 SQL Server 型別來表示。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> 為 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)">
      <summary>取得指定資料行的值做為 XML 值。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 值，包含對應欄位內儲存的 XML。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
      <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 中讀取或存取資料行。</exception>
      <exception cref="T:System.InvalidCastException">擷取的資料與 <see cref="T:System.Data.SqlTypes.SqlXml" /> 型別不相容。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)">
      <summary>擷取二進位、影像、varbinary、UDT 和 variant 資料型別做為<see cref="T:System.IO.Stream" />。</summary>
      <returns>資料流物件。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidOperationException">在資料擷取期間，連線中斷或關閉。<see cref="T:System.Data.SqlClient.SqlDataReader" />在資料擷取期間已關閉。沒有可供讀取的資料 (例如，第一個 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 沒有被呼叫，或傳回 false)。嘗試在循序模式下讀取先前讀取的資料行。有進行中的非同步作業。當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException">嘗試讀取不存在的資料行。</exception>
      <exception cref="T:System.InvalidCastException">傳回的型別不是下列型別：binaryimagevarbinaryUDT</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)">
      <summary>取得指定的資料行值做為字串。</summary>
      <returns>指定的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidCastException">指定的轉型無效。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)">
      <summary>擷取 Char、NChar、 NText、 NVarChar、 文字、 varChar 及 Variant 資料型別做為<see cref="T:System.IO.TextReader" />。</summary>
      <returns>已傳回的物件。</returns>
      <param name="i">要擷取的資料行。</param>
      <exception cref="T:System.InvalidOperationException">在資料擷取期間，連線中斷或關閉。<see cref="T:System.Data.SqlClient.SqlDataReader" />在資料擷取期間已關閉。沒有可供讀取的資料 (例如，第一個 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 沒有被呼叫，或傳回 false)。嘗試在循序模式下讀取先前讀取的資料行。有進行中的非同步作業。當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException">嘗試讀取不存在的資料行。</exception>
      <exception cref="T:System.InvalidCastException">傳回的型別不是下列型別：charncharntextnvarchar文字varchar</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)">
      <summary>擷取指定資料行的值做為 <see cref="T:System.TimeSpan" /> 物件。</summary>
      <returns>指定的資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.InvalidCastException">指定的轉型無效。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)">
      <summary>取得使用原生格式的指定資料行值。</summary>
      <returns>對於 null 資料庫資料行來說，這個方法會傳回 <see cref="T:System.DBNull" />。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])">
      <summary>使用目前資料列的資料行值填入物件陣列。</summary>
      <returns>陣列中 <see cref="T:System.Object" /> 的執行個體數目。</returns>
      <param name="values">屬性資料行要複製到其中的 <see cref="T:System.Object" /> 陣列。</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)">
      <summary>擷取 XML 型別的資料做為<see cref="T:System.Xml.XmlReader" />。</summary>
      <returns>已傳回的物件。</returns>
      <param name="i">指定的資料行值。</param>
      <exception cref="T:System.InvalidOperationException">在資料擷取期間，連線中斷或關閉。<see cref="T:System.Data.SqlClient.SqlDataReader" />在資料擷取期間已關閉。沒有可供讀取的資料 (例如，第一個 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 沒有被呼叫，或傳回 false)。嘗試在循序模式下讀取先前讀取的資料行。有進行中的非同步作業。當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。</exception>
      <exception cref="T:System.IndexOutOfRangeException">嘗試讀取不存在的資料行。</exception>
      <exception cref="T:System.InvalidCastException">傳回的型別不是 xml。</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.HasRows">
      <summary>取得值，指出 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 是否包含一個或多個資料列。</summary>
      <returns>如果 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 包含一個或更多資料列，則為 true，否則為 false。</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.IsClosed">
      <summary>擷取布林值，指出指定的 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 執行個體是否已關閉。</summary>
      <returns>如果指定的 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 已關閉，則為 true，否則為 false。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)">
      <summary>取得值，指出資料行是否含有不存在或遺漏的值。</summary>
      <returns>如果指定的資料行值等於 <see cref="T:System.DBNull" />，則為 true，否則為 false。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>
        <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> 的非同步版本，該版本會取得值，表示資料行是否包含不存在或遺漏的值。取消語彙基元可用於要求在命令逾時之前捨棄作業。例外狀況將經由傳回的 Task 物件回報。</summary>
      <returns>如果指定的資料行值等於 DBNull，則為 true，否則為 false。</returns>
      <param name="i">要擷取的以零起始的資料行。</param>
      <param name="cancellationToken">取消指令，其會傳播說明應該取消作業的通知。這並不保證取消。如果設定為 CancellationToken.None，就會使這個方法相當於 <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />。傳回的工作必須標記為已取消。</param>
      <exception cref="T:System.InvalidOperationException">在資料擷取期間，連線中斷或關閉。<see cref="T:System.Data.SqlClient.SqlDataReader" />在資料擷取期間已關閉。沒有可供讀取的資料 (例如，第一個 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 沒有被呼叫，或傳回 false)。嘗試在循序模式下讀取先前讀取的資料行。有進行中的非同步作業。當在循序模式中執行時，此適用於所有 Get* 方法，因為在讀取資料流時可能會呼叫它們。Context Connection=true 指定於連接字串中。</exception>
      <exception cref="T:System.IndexOutOfRangeException">嘗試讀取不存在的資料行。</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)">
      <summary>提供資料行序數，取得使用原生格式的指定資料行值。</summary>
      <returns>使用原生格式的指定資料行值。</returns>
      <param name="i">以零起始的資料行序數。</param>
      <exception cref="T:System.IndexOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Item(System.String)">
      <summary>提供資料行名稱，取得使用原生格式的指定資料行值。</summary>
      <returns>使用原生格式的指定資料行值。</returns>
      <param name="name">資料行名稱。</param>
      <exception cref="T:System.IndexOutOfRangeException">找不到具有指定名稱的資料行。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.NextResult">
      <summary>當讀取批次 Transact-SQL 陳述式的結果時，將資料讀取器前移到下一個結果。</summary>
      <returns>如果有其他的結果集 (Result Set)，則為 true，否則為 false。</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary>
        <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" /> 的非同步版本，該版本會在讀取批次 Transact-SQL 陳述式的結果時，將資料讀取器前移至下一個結果。取消語彙基元可用於要求在命令逾時之前捨棄作業。例外狀況將經由傳回的 Task 物件回報。</summary>
      <returns>表示非同步作業的工作。</returns>
      <param name="cancellationToken">取消指令。</param>
      <exception cref="T:System.InvalidOperationException">在工作完成之前，多次呼叫相同執行個體的 <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" />。Context Connection=true 指定於連接字串中。</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">執行命令文字時，SQL Server 傳回錯誤。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.Read">
      <summary>將 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 前進到下一個資料錄。</summary>
      <returns>如果有多個資料列，則為 true，否則為 false。</returns>
      <exception cref="T:System.Data.SqlClient.SqlException">執行命令文字時，SQL Server 傳回錯誤。</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary>非同步版本的 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />，這個版本會將 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 前移至下一筆記錄。取消語彙基元可用於要求在命令逾時之前捨棄作業。例外狀況將經由傳回的 Task 物件回報。</summary>
      <returns>表示非同步作業的工作。</returns>
      <param name="cancellationToken">取消指令。</param>
      <exception cref="T:System.InvalidOperationException">在工作完成之前，多次呼叫相同執行個體的 <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />。Context Connection=true 指定於連接字串中。</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">執行命令文字時，SQL Server 傳回錯誤。</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.RecordsAffected">
      <summary>取得 Transact-SQL 陳述式的執行所變更、插入或刪除的資料列數目。</summary>
      <returns>變更、插入或刪除的資料列數目；如果沒有任何資料列受影響或陳述式失敗，則為 0；SELECT 陳述式則為 -1。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.VisibleFieldCount">
      <summary>取得 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 中未隱藏的欄位數目。</summary>
      <returns>未隱藏的欄位數目。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.SqlClient.SqlError">
      <summary>收集與 SQL Server 所傳回之警告或錯誤相關的資訊。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Class">
      <summary>取得從 SQL Server 傳回之錯誤的嚴重性層級。</summary>
      <returns>從 1 到 25 的值，表示錯誤的嚴重性層級。預設值為 0。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.LineNumber">
      <summary>取得包含錯誤之 Transact-SQL 命令批次或預存程序內的行號。</summary>
      <returns>包含錯誤之 Transact-SQL 命令批次或預存程序內的行號。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Message">
      <summary>取得描述錯誤的文字。</summary>
      <returns>描述錯誤的文字。如需 SQL 伺服器所產生之錯誤的詳細資訊，請參閱《SQL Server 線上叢書》。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Number">
      <summary>取得識別錯誤類型的值。</summary>
      <returns>識別錯誤類型的值。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Procedure">
      <summary>取得產生錯誤之預存程序或遠端程序呼叫 (RPC) 的名稱。</summary>
      <returns>預存程序或 RPC 的名稱。如需 SQL 伺服器所產生之錯誤的詳細資訊，請參閱《SQL Server 線上叢書》。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Server">
      <summary>取得產生錯誤之 SQL Server 執行個體的名稱。</summary>
      <returns>SQL Server 執行個體的名稱。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Source">
      <summary>取得產生錯誤之提供者的名稱。</summary>
      <returns>產生錯誤之提供者的名稱。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.State">
      <summary>某些錯誤訊息可能會在資料庫引擎程式碼中的多個點上引發。例如，1105 錯誤可能會因為許多不同情況而引發。每個引發錯誤的特定條件會指派唯一的狀態碼。</summary>
      <returns>狀態碼。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlError.ToString">
      <summary>取得錯誤訊息的完整文字。</summary>
      <returns>錯誤的完整文字。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlErrorCollection">
      <summary>收集 .NET Framework Data Provider for SQL Server 產生的所有錯誤。此類別無法被繼承。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>從指定的索引開始，將 <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> 集合的項目複製到 <see cref="T:System.Array" />。</summary>
      <param name="array">要複製元素到其中的 <see cref="T:System.Array" />。</param>
      <param name="index">要開始複製到 <paramref name="array" /> 參數中的索引。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 的總和，以及 <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> 集合中的元素數目，大於 <see cref="T:System.Array" /> 的 <see cref="P:System.Array.Length" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 對 <paramref name="array" /> 無效。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Data.SqlClient.SqlError[],System.Int32)">
      <summary>從指定的索引開始，將 <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> 集合的項目複製到 <see cref="T:System.Data.SqlClient.SqlErrorCollection" />。</summary>
      <param name="array">要複製元素到其中的 <see cref="T:System.Data.SqlClient.SqlErrorCollection" />。</param>
      <param name="index">要開始複製到 <paramref name="array" /> 參數中的索引。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 以及 <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> 集合中項目數的總和大於 <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> 的長度。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 對 <paramref name="array" /> 無效。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.Count">
      <summary>取得集合中的錯誤數目。</summary>
      <returns>集合中的錯誤總數。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlErrorCollection.GetEnumerator">
      <summary>傳回在 <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> 中逐一查看的列舉值。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> 的 <see cref="T:System.Collections.IEnumerator" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.Item(System.Int32)">
      <summary>取得在指定之索引處的錯誤。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlError" />，含有在指定之索引處的錯誤。</returns>
      <param name="index">要擷取的錯誤之以零起始索引。</param>
      <exception cref="T:System.IndexOutOfRangeException">索引參數是在陣列界限之外。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>如需這個成員的描述，請參閱 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>如果對 <see cref="T:System.Collections.ICollection" /> 的存取為同步 (安全執行緒)，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#SyncRoot">
      <summary>如需這個成員的描述，請參閱 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>可用來同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlException">
      <summary>當 SQL Server 傳回警告或錯誤時所擲回的例外狀況。此類別無法被繼承。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Class">
      <summary>取得從 .NET Framework Data Provider for SQL Server 傳回的錯誤之嚴重性層級。</summary>
      <returns>1 到 25 的值表示錯誤的嚴重性層級。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.ClientConnectionId">
      <summary>表示用戶端連接 ID。如需詳細資訊，請參閱ADO.NET 中的資料追蹤。</summary>
      <returns>傳回用戶端連接 ID。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Errors">
      <summary>取得一個或多個 <see cref="T:System.Data.SqlClient.SqlError" /> 物件的集合，這些物件可提供有關 .NET Framework Data Provider for SQL Server 產生的例外狀況之詳細資訊。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlError" /> 類別的已收集執行個體。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.LineNumber">
      <summary>取得 Transact-SQL 命令批次內的行號或產生錯誤的預存程序 (Stored Procedure)。</summary>
      <returns>Transact-SQL 命令批次內的行號或產生錯誤的預存程序。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Number">
      <summary>取得識別錯誤類型的數值。</summary>
      <returns>識別錯誤類型的數值。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Procedure">
      <summary>取得預存程序的名稱或已產生錯誤的遠端程序呼叫 (RPC)。</summary>
      <returns>預存程序或 RPC 的名稱。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Server">
      <summary>取得執行 SQL Server 之執行個體 (會產生錯誤) 的電腦名稱。</summary>
      <returns>執行 SQL Server 之執行個體的電腦名稱。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Source">
      <summary>取得產生錯誤的提供者名稱。</summary>
      <returns>產生錯誤的提供者名稱。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.State">
      <summary>從 SQL Server 取得表示錯誤、警告或「找不到資料」訊息的數值錯誤碼。如需如何將這些值解碼的詳細資訊，請參閱《SQL Server 線上叢書》。</summary>
      <returns>表示錯誤碼的數值。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlException.ToString">
      <summary>傳回字串，代表目前的<see cref="T:System.Data.SqlClient.SqlException" />物件，並包含用戶端連線識別碼 (如需詳細資訊，請參閱<see cref="P:System.Data.SqlClient.SqlException.ClientConnectionId" />)。</summary>
      <returns>表示目前 <see cref="T:System.Data.SqlClient.SqlException" /> 物件的字串。<see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlInfoMessageEventArgs">
      <summary>提供 <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> 事件的資料。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Errors">
      <summary>取得從伺服器傳送的警告集合。</summary>
      <returns>從伺服器傳送的警告集合。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Message">
      <summary>取得傳送自資料庫的錯誤全文。</summary>
      <returns>錯誤的全文。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Source">
      <summary>取得產生錯誤的物件名稱</summary>
      <returns>產生錯誤的物件名稱。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlInfoMessageEventArgs.ToString">
      <summary>擷取 <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> 事件的字串表示。</summary>
      <returns>表示 <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> 事件的字串。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlInfoMessageEventHandler">
      <summary>表示處理 <see cref="T:System.Data.SqlClient.SqlConnection" /> 的 <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> 事件的方法。</summary>
      <param name="sender">事件的來源。</param>
      <param name="e">
        <see cref="T:System.Data.SqlClient.SqlInfoMessageEventArgs" /> 物件，包含事件資料。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlParameter">
      <summary>表示 <see cref="T:System.Data.SqlClient.SqlCommand" /> 的參數及其對 <see cref="T:System.Data.DataSet" /> 資料行的對應 (選擇性)。此類別無法被繼承。如需參數的詳細資訊，請參閱設定參數和參數資料型別。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor">
      <summary>初始化 <see cref="T:System.Data.SqlClient.SqlParameter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)">
      <summary>初始化 <see cref="T:System.Data.SqlClient.SqlParameter" /> 類別的新執行個體，該類別使用參數名稱和資料型別。</summary>
      <param name="parameterName">要對應的參數名稱。</param>
      <param name="dbType">其中一個 <see cref="T:System.Data.SqlDbType" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dbType" /> 參數中提供的值是無效的後端資料型別。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>初始化 <see cref="T:System.Data.SqlClient.SqlParameter" /> 類別的新執行個體，該類別使用參數名稱、<see cref="T:System.Data.SqlDbType" /> 和大小。</summary>
      <param name="parameterName">要對應的參數名稱。</param>
      <param name="dbType">其中一個 <see cref="T:System.Data.SqlDbType" /> 值。</param>
      <param name="size">參數的長度。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dbType" /> 參數中提供的值是無效的後端資料型別。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>初始化 <see cref="T:System.Data.SqlClient.SqlParameter" /> 類別的新執行個體，該類別使用參數名稱、<see cref="T:System.Data.SqlDbType" />、大小和來源資料行名稱。</summary>
      <param name="parameterName">要對應的參數名稱。</param>
      <param name="dbType">其中一個 <see cref="T:System.Data.SqlDbType" /> 值。</param>
      <param name="size">參數的長度。</param>
      <param name="sourceColumn">如果這個 <see cref="T:System.Data.SqlClient.SqlParameter" /> 是用於對 <see cref="Overload:System.Data.Common.DbDataAdapter.Update" /> 的呼叫，則為來源資料行 (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) 的名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dbType" /> 參數中提供的值是無效的後端資料型別。</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)">
      <summary>初始化 <see cref="T:System.Data.SqlClient.SqlParameter" /> 類別的新執行個體，該類別使用參數名稱和新的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 值。</summary>
      <param name="parameterName">要對應的參數名稱。</param>
      <param name="value">
        <see cref="T:System.Object" />，即是 <see cref="T:System.Data.SqlClient.SqlParameter" /> 的值。</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.CompareInfo">
      <summary>取得或設定 <see cref="T:System.Globalization.CompareInfo" /> 物件，其定義應當如何為這個參數執行字串比較。</summary>
      <returns>
        <see cref="T:System.Globalization.CompareInfo" /> 物件，定義這個參數的字串比較。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.DbType">
      <summary>取得或設定參數的 <see cref="T:System.Data.SqlDbType" />。</summary>
      <returns>其中一個 <see cref="T:System.Data.SqlDbType" /> 值。預設為 NVarChar。</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Direction">
      <summary>取得或設定值，指出參數是否為只能輸入、只能輸出、雙向 (Bidirectional) 或預存程序 (Stored Procedure) 傳回值參數。</summary>
      <returns>其中一個 <see cref="T:System.Data.ParameterDirection" /> 值。預設為 Input。</returns>
      <exception cref="T:System.ArgumentException">屬性並未設定為其中一個有效的 <see cref="T:System.Data.ParameterDirection" /> 值。</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.IsNullable">
      <summary>取得或設定值，指出參數是否接受 null 值。<see cref="P:System.Data.SqlClient.SqlParameter.IsNullable" /> 不會用於驗證參數的值，而且不會在執行命令時阻止傳送或接收 null 值。</summary>
      <returns>如果接受 null 值，則為 true，否則為 false。預設為 false。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.LocaleId">
      <summary>取得或設定地區設定識別項 (Locale Identifier)，其判斷特定區域的慣例和語言。</summary>
      <returns>傳回與這個參數相關聯的地區設定識別項。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Offset">
      <summary>取得或設定 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 屬性的位移 (Offset)。</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 的位移。預設值為 0。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.ParameterName">
      <summary>取得或設定 <see cref="T:System.Data.SqlClient.SqlParameter" /> 的名稱。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> 的名稱。預設為空字串。</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Precision">
      <summary>取得或設定用來表示 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 屬性的最大位數。</summary>
      <returns>用來表示 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 屬性的最大位數。預設值為 0。這表示資料提供者會設定 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 的精確度。</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.ResetDbType">
      <summary>重設與這個 <see cref="T:System.Data.SqlClient.SqlParameter" /> 關聯的型別。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.ResetSqlDbType">
      <summary>重設與這個 <see cref="T:System.Data.SqlClient.SqlParameter" /> 關聯的型別。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Scale">
      <summary>取得或設定解析 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 的小數位數數目。</summary>
      <returns>解析 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 的小數位數數目。預設值為 0。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Size">
      <summary>取得或設定資料行中資料的最大大小 (以位元組為單位)。</summary>
      <returns>資料行中資料的最大大小 (以位元組為單位)。預設值是由參數值推斷。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SourceColumn">
      <summary>取得或設定來源資料行的名稱，這個資料行對應至 <see cref="T:System.Data.DataSet" />，並用來載入或傳回 <see cref="P:System.Data.SqlClient.SqlParameter.Value" />。</summary>
      <returns>來源資料行名稱，對應至 <see cref="T:System.Data.DataSet" />。預設為空字串。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping">
      <summary>設定或取得值，這個值表示來源資料行是否可為 Null。這可讓 <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> 為可為 null 的資料行正確地產生 Update 陳述式。</summary>
      <returns>如果來源資料行可為 null，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SqlDbType">
      <summary>取得或設定參數的 <see cref="T:System.Data.SqlDbType" />。</summary>
      <returns>其中一個 <see cref="T:System.Data.SqlDbType" /> 值。預設為 NVarChar。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SqlValue">
      <summary>以 SQL 型別取得或設定參數值。</summary>
      <returns>
        <see cref="T:System.Object" />，為使用 SQL 型別的參數值。預設值為 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.ToString">
      <summary>取得包含 <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" /> 的字串。</summary>
      <returns>包含 <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" /> 的字串。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.TypeName">
      <summary>取得或設定資料表值參數的型別名稱。</summary>
      <returns>指定之資料表值參數的型別名稱。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Value">
      <summary>取得或設定參數的值。</summary>
      <returns>
        <see cref="T:System.Object" />，為參數的值。預設值為 null。</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase">
      <summary>取得這個 XML 執行個體之結構描述集合所在的資料庫名稱。</summary>
      <returns>這個 XML 執行個體之結構描述集合所在的資料庫名稱。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName">
      <summary>取得這個 XML 執行個體的結構描述集合名稱。</summary>
      <returns>這個 XML 執行個體的結構描述集合名稱。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema">
      <summary>這個 XML 執行個體之結構描述集合所在的主控關聯式結構描述。</summary>
      <returns>這個 XML 執行個體的主控關聯式結構描述。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlParameterCollection">
      <summary>表示與 <see cref="T:System.Data.SqlClient.SqlCommand" /> 關聯的參數集合，以及它們與 <see cref="T:System.Data.DataSet" /> 中資料行的個別對應。此類別無法被繼承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.Data.SqlClient.SqlParameter)">
      <summary>將指定的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 物件加入至 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中。</summary>
      <returns>新的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 物件。</returns>
      <param name="value">要加入到集合中的 <see cref="T:System.Data.SqlClient.SqlParameter" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 參數中指定的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 已經加入至這個或另一個 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />。</exception>
      <exception cref="T:System.InvalidCastException">傳遞的參數不是 <see cref="T:System.Data.SqlClient.SqlParameter" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 參數為 null。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.Object)">
      <summary>將指定的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 物件加入至 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中。</summary>
      <returns>新 <see cref="T:System.Data.SqlClient.SqlParameter" /> 物件的索引。</returns>
      <param name="value">
        <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType)">
      <summary>將 <see cref="T:System.Data.SqlClient.SqlParameter" /> 加入至具有指定之參數名稱和資料型別的 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 物件。</returns>
      <param name="parameterName">參數的名稱。</param>
      <param name="sqlDbType">其中一個 <see cref="T:System.Data.SqlDbType" /> 值。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>將 <see cref="T:System.Data.SqlClient.SqlParameter" /> 加入至具有指定參數名稱、<see cref="T:System.Data.SqlDbType" /> 和大小的 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 物件。</returns>
      <param name="parameterName">參數的名稱。</param>
      <param name="sqlDbType">要加入集合的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 之 <see cref="T:System.Data.SqlDbType" />。</param>
      <param name="size">大小為 <see cref="T:System.Int32" />。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.AddRange(System.Array)">
      <summary>將值陣列加入至 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 的結尾。</summary>
      <param name="values">要加入的 <see cref="T:System.Array" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.AddRange(System.Data.SqlClient.SqlParameter[])">
      <summary>將 <see cref="T:System.Data.SqlClient.SqlParameter" /> 值的陣列加入至 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 的結尾。</summary>
      <param name="values">要加入的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 值。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>將值加入至 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 的結尾。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> 物件。</returns>
      <param name="parameterName">參數的名稱。</param>
      <param name="value">要加入的值。使用<see cref="F:System.DBNull.Value" />而非 null，表示 null 值。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Clear">
      <summary>從 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中移除所有 <see cref="T:System.Data.SqlClient.SqlParameter" /> 物件。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.Data.SqlClient.SqlParameter)">
      <summary>判斷指定的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 是否在此 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中。</summary>
      <returns>如果 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 含有值則為 true，否則為 false。</returns>
      <param name="value">
        <see cref="T:System.Data.SqlClient.SqlParameter" /> 值。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否在此 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中。</summary>
      <returns>如果 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 含有值則為 true，否則為 false。</returns>
      <param name="value">
        <see cref="T:System.Object" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.String)">
      <summary>判斷指定的參數名稱是否在 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中。</summary>
      <returns>如果 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 含有值則為 true，否則為 false。</returns>
      <param name="value">
        <see cref="T:System.String" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>從指定之目的 <see cref="T:System.Array" /> 索引開始，將目前 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 之所有項目複製到指定的一維 <see cref="T:System.Array" />。</summary>
      <param name="array">一維 <see cref="T:System.Array" />，是從目前 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 複製的元素的目的端。</param>
      <param name="index">32 位元的整數，代表 <see cref="T:System.Array" /> 中的索引，由此開始複製。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Data.SqlClient.SqlParameter[],System.Int32)">
      <summary>從指定之目的索引開始，將目前 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 之所有項目複製到指定的 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />。</summary>
      <param name="array">
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />，是從目前的 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 複製過來之項目的目的端。</param>
      <param name="index">32 位元的整數，代表 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中的索引，由此開始複製。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Count">
      <summary>傳回包含 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中之項目數目的整數。唯讀。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中的項目數目，做為整數。</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.GetEnumerator">
      <summary>傳回在 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中逐一查看的列舉值。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Data.SqlClient.SqlParameter)">
      <summary>取得集合中指定的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 位置。</summary>
      <returns>在集合中為 <see cref="T:System.Data.SqlClient.SqlParameter" /> 的指定 <see cref="T:System.Data.SqlClient.SqlParameter" /> 之以零起始位置。當 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中沒有物件時，傳回 -1。</returns>
      <param name="value">要尋找的 <see cref="T:System.Data.SqlClient.SqlParameter" />。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Object)">
      <summary>取得集合中指定的 <see cref="T:System.Object" /> 位置。</summary>
      <returns>在集合中為 <see cref="T:System.Data.SqlClient.SqlParameter" /> 的指定 <see cref="T:System.Object" /> 之以零起始位置。當 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中沒有物件時，傳回 -1。</returns>
      <param name="value">要尋找的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.String)">
      <summary>取得指定之 <see cref="T:System.Data.SqlClient.SqlParameter" /> 的位置，該參數具有指定的名稱。</summary>
      <returns>指定之 <see cref="T:System.Data.SqlClient.SqlParameter" /> 的以零起始位置，該參數具有指定之區分大小寫名稱。當 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中沒有物件時，傳回 -1。</returns>
      <param name="parameterName">要尋找之 <see cref="T:System.Data.SqlClient.SqlParameter" /> 的區分大小寫名稱。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Data.SqlClient.SqlParameter)">
      <summary>將 <see cref="T:System.Data.SqlClient.SqlParameter" /> 物件插入至 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 的指定索引處。</summary>
      <param name="index">應該插入值的以零起始索引。</param>
      <param name="value">要在 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中插入的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 物件。</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Object)">
      <summary>將 <see cref="T:System.Object" /> 插入 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中指定之索引處。</summary>
      <param name="index">應該插入值的以零起始索引。</param>
      <param name="value">要在 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 中插入的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Item(System.Int32)">
      <summary>取得在指定索引處的 <see cref="T:System.Data.SqlClient.SqlParameter" />。</summary>
      <returns>在指定索引處的 <see cref="T:System.Data.SqlClient.SqlParameter" />。</returns>
      <param name="index">要擷取的參數之以零起始索引。</param>
      <exception cref="T:System.IndexOutOfRangeException">指定的索引不存在。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Item(System.String)">
      <summary>取得具有指定名稱的 <see cref="T:System.Data.SqlClient.SqlParameter" />。</summary>
      <returns>具有指定名稱的 <see cref="T:System.Data.SqlClient.SqlParameter" />。</returns>
      <param name="parameterName">要擷取的參數名稱。</param>
      <exception cref="T:System.IndexOutOfRangeException">指定的 <paramref name="parameterName" /> 無效。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Remove(System.Data.SqlClient.SqlParameter)">
      <summary>從集合中移除指定的 <see cref="T:System.Data.SqlClient.SqlParameter" />。</summary>
      <param name="value">要從集合中移除的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 物件。</param>
      <exception cref="T:System.InvalidCastException">參數不是 <see cref="T:System.Data.SqlClient.SqlParameter" />。</exception>
      <exception cref="T:System.SystemException">參數不存在於集合中。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Remove(System.Object)">
      <summary>從集合中移除指定的 <see cref="T:System.Data.SqlClient.SqlParameter" />。</summary>
      <param name="value">要從集合移除的物件。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.Int32)">
      <summary>從 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 移除指定之索引處的 <see cref="T:System.Data.SqlClient.SqlParameter" />。</summary>
      <param name="index">要移除的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 物件之以零起始的索引。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.String)">
      <summary>從 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 移除指定之參數名稱的 <see cref="T:System.Data.SqlClient.SqlParameter" />。</summary>
      <param name="parameterName">要移除的 <see cref="T:System.Data.SqlClient.SqlParameter" /> 名稱。</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.SyncRoot">
      <summary>取得可用來同步存取 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 的物件。</summary>
      <returns>可用來同步存取 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 的物件。</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlTransaction">
      <summary>表示要在 SQL Server 資料庫中進行的 Transact-SQL 交易。此類別無法被繼承。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Commit">
      <summary>認可資料庫交易。</summary>
      <exception cref="T:System.Exception">嘗試認可交易時發生錯誤。</exception>
      <exception cref="T:System.InvalidOperationException">已認可或復原交易。-或-連接中斷。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlTransaction.Connection">
      <summary>取得與交易相關聯的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 物件或 null (如果交易不再有效)。</summary>
      <returns>與交易相關聯的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 物件。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
      <summary>指定用於這個交易的 <see cref="T:System.Data.IsolationLevel" />。</summary>
      <returns>用於這個交易的 <see cref="T:System.Data.IsolationLevel" />。預設值為 ReadCommitted。</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Rollback">
      <summary>從暫止狀態復原交易。</summary>
      <exception cref="T:System.Exception">嘗試認可交易時發生錯誤。</exception>
      <exception cref="T:System.InvalidOperationException">已認可或復原交易。-或-連接中斷。</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
      <summary>從暫止狀態中復原交易，並指定交易和儲存點名稱。</summary>
      <param name="transactionName">要復原的交易名稱，或要復原的儲存點。</param>
      <exception cref="T:System.ArgumentException">沒有指定任何交易名稱。</exception>
      <exception cref="T:System.InvalidOperationException">已認可或復原交易。-或-連接中斷。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
      <summary>建立交易中的儲存點 (可用來復原部分的交易)，以及指定儲存點名稱。</summary>
      <param name="savePointName">儲存點的名稱。</param>
      <exception cref="T:System.Exception">嘗試認可交易時發生錯誤。</exception>
      <exception cref="T:System.InvalidOperationException">已認可或復原交易。-或-連接中斷。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary>所有的 <see cref="N:System.Data.SqlTypes" /> 物件和結構都會實作 INullable 介面。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary>指出結構是否為 null。這個屬性是唯讀的。</summary>
      <returns>如果這個物件的值是 null，則為 <see cref="T:System.Data.SqlTypes.SqlBoolean" />true。否則為 false。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary>表示要存放在資料庫或從資料庫中擷取之二進位資料的可變長度資料流。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary>將 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 屬性設定為提供的位元組陣列之內容，來初始化 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構的新執行個體。</summary>
      <param name="value">要存放或擷取的位元組陣列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>將兩個指定的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 參數串連，以建立新的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" />，其為 x 和 y 的串連值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件與提供的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，指出這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構與物件的相對值。傳回值條件小於零這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件的值小於物件。Zero這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件和物件相同。大於零這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件大於物件。-或-物件是 Null 參考。</returns>
      <param name="value">要與這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構相比較的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件與提供的物件相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，指出這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構與物件的相對值。傳回值條件小於零這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件的值小於物件。Zero這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件和物件相同。大於零這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件大於物件。-或-物件是 Null 參考。</returns>
      <param name="value">要與這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構相比較的物件。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>將兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構串連以建立新的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</summary>
      <returns>
        <paramref name="x" /> 和 <paramref name="y" /> 參數的串連值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷它們是否相等。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。如果任一執行個體是 null，則 SqlBinary 會是 null。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary>將提供的物件參數與 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件的 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 屬性相比較。</summary>
      <returns>如果物件是 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的執行個體，並且兩者相等，則為 true，否則為 false。</returns>
      <param name="value">要比較的物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary>傳回這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構的雜湊程式碼。</summary>
      <returns>32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary>表示這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構是否為 null。這個屬性是唯讀的。</summary>
      <returns>如果是 null 則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary>從位於整數參數 <paramref name="index" /> 所指示之位置的 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 屬性中取得單一位元組。如果 <paramref name="index" /> 指示超過位元組陣列末端的位置，則會引發 <see cref="T:System.Data.SqlTypes.SqlNullValueException" />。這個屬性是唯讀的。</summary>
      <returns>位元組，位於整數參數所指示的位置。</returns>
      <param name="index">要擷取的位元組位置。</param>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">當 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 屬性包含 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> 時讀取屬性。-或-<paramref name="index" /> 參數指示超過位元組陣列長度的位置，如 <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> 屬性所指示。</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary>取得 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 屬性的長度，以位元組為單位。這個屬性是唯讀的。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 屬性中二進位資料的長度。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">當 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 屬性包含 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> 時，就會讀取 <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> 屬性。</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary>表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>將兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 參數串連以建立新的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</summary>
      <returns>
        <paramref name="x" /> 和 <paramref name="y" /> 參數的串連值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構轉換成 <see cref="T:System.Byte" /> 陣列。</summary>
      <returns>
        <see cref="T:System.Byte" /> 陣列。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</summary>
      <returns>要轉換的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary>將位元組的陣列轉換成 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，表示轉換的位元組陣列。</returns>
      <param name="x">要轉換的位元組陣列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構，判斷第一個結構是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的執行個體轉換成 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 物件轉換成字串。</summary>
      <returns>字串，含有 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />。如果 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 為 null，則字串將包含 "null"。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary>取得 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構的值。這個屬性是唯讀的。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構的值。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">當屬性包含 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" /> 時，就會讀取 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 屬性。</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary>表示要存放在資料庫或從資料庫擷取的 1 或 0 之整數值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary>使用提供的布林值，初始化 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的新執行個體。</summary>
      <param name="value">新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值，不是 true 就是 false。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary>使用指定的整數值，初始化 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的新執行個體。</summary>
      <param name="value">整數，其值會用於新的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>計算兩個指定 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的位元 AND 運算。</summary>
      <returns>邏輯的 AND 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary>取得 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值做為位元組。</summary>
      <returns>位元組，表示 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 物件與提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 物件相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，指出執行個體與值的相對值。值說明負整數這個執行個體小於 <paramref name="value" />。Zero這個執行個體等於 <paramref name="value" />。正整數這個執行個體大於 <paramref name="value" />。-或-<paramref name="value" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</returns>
      <param name="value">要比較的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> 物件，或 null 參考 (在 Visual Basic 中為 Nothing)。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary>比較這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構與指定的物件，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，指出執行個體與值的相對值。值說明負整數這個執行個體小於 <paramref name="value" />。Zero這個執行個體等於 <paramref name="value" />。正整數這個執行個體大於 <paramref name="value" />。-或-<paramref name="value" /> 為 null 參考 (在 Visual Basic 中為 Nothing)。</returns>
      <param name="value">要比較的物件，或 null 參考 (在 Visual Basic 為 Nothing)。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一執行個體是 Null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary>比較提供的物件參數與 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns>如果物件是 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的執行個體，而且比較結果是兩者相等，則為 true，否則為 false。</returns>
      <param name="value">要比較的物件。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary>表示可以指派至 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構之執行個體的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 屬性的 False 值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一個執行個體大於第二個執行個體，則為 true，否則為 false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一個執行個體大於或等於第二個執行個體，則為 true，否則為 false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary>指示目前的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 是否為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</summary>
      <returns>如果 Value 為 False，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary>表示這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構是否為 null。</summary>
      <returns>如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構為 null，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary>表示目前的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 是否為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。</summary>
      <returns>如果 Value 為 True，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一個執行個體小於第二個執行個體，則為 true，否則為 false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一個執行個體小於或等於第二個執行個體，則為 true，否則為 false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一執行個體是 Null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary>表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的執行個體。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary>表示可以指派至 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構之執行個體的 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 屬性的一個值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>在提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構上執行一進位補數運算。</summary>
      <returns>所提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 一進位補數。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>計算兩個指定 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的位元 AND 運算。</summary>
      <returns>邏輯的 AND 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>計算其運算元的位元 OR 運算。</summary>
      <returns>邏輯 OR 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一執行個體是 Null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>在提供的參數上執行位元 Exclusive-OR (XOR) 運算。</summary>
      <returns>邏輯 XOR 作業的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 轉換成布林。</summary>
      <returns>布林設定為 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />。</returns>
      <param name="x">要進行轉換的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，其值等於 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />。</returns>
      <param name="x">轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其值等於 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性。</returns>
      <param name="x">轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，其值等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 屬性。</returns>
      <param name="x">轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，其值等於 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性。</returns>
      <param name="x">轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，其值等於 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性。</returns>
      <param name="x">轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，其值等於 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性。</returns>
      <param name="x">轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其值等於 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性。</returns>
      <param name="x">轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，其值等於 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 屬性。</returns>
      <param name="x">轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其值等於 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 屬性。</returns>
      <param name="x">轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的 <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary>False 運算子可以用來測試 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />，判斷它是否為 False。</summary>
      <returns>如果提供的參數為 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 是 False，則傳回 true，否則為 false。</returns>
      <param name="x">要測試的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，判斷第一個結構是否大於第二個。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一個執行個體大於第二個執行個體，則為 true，否則為 false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 物件。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，判斷第一個結構是否大於或等於第二個。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一個執行個體大於或等於第二個執行個體，則為 true，否則為 false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary>將提供的位元組值轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns>包含 0 或 1 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 值。</returns>
      <param name="x">要被轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的位元組值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體，判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一執行個體是 Null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一個執行個體小於第二個執行個體，則為 true，否則為 false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果第一個執行個體小於或等於第二個執行個體，則為 true，否則為 false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary>在 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 上執行 NOT 運算。</summary>
      <returns>如果引數是 true，則為具有 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> 的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果引數是 null，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。</returns>
      <param name="x">其中將執行 NOT 運算的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>在提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構上執行一進位補數運算。</summary>
      <returns>所提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 一進位補數。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary>True 運算子可以用來測試 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />，判斷它是否為 True。</summary>
      <returns>如果提供的參數為 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 是 True，則傳回 true，否則為 false。</returns>
      <param name="x">要測試的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>在兩個指定的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構上執行位元 OR 運算。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構，其 Value 是位元 OR 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary>將邏輯值的指定 <see cref="T:System.String" /> 表示轉換成它的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 相等物。</summary>
      <returns>含有剖析值的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</returns>
      <param name="s">要轉換的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其值為 1 或 0。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 true，則新 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的值為 1。否則，新 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的值為 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其值為 1 或 0。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 true，則新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的值為 1。否則，新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的值為 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，其值為 1 或 0。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 true，則新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的值為 1。否則，新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的值為 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 SqlInt16 結構，其值為 1 或 0。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 true，則新 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值為 1。否則，新 SqlInt16 結構的值為 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 SqlInt32 結構，其值為 1 或 0。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 true，則新 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構的值為 1。否則，新 SqlInt32 結構的值為 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 SqlInt64 結構，其值為 1 或 0。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 true，則新 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的值為 1。否則，新 SqlInt64 結構的值為 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其值為 1 或 0。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 true，則新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 值為 1。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 false，則新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 值為 0。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值不是 1 也不是 0，新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 值就會是 <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其值為 1 或 0。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 true，新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的值會是 1，否則，新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的值就會是 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構，其值為 1 或 0。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值等於 true ，則  <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的值為 1。否則，新 <see cref="T:System.Data.SqlTypes.SqlString" />  結構的值為 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成字串。</summary>
      <returns>字串，含有 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的值。如果該值是 null，則字串將包含 "null"。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary>表示 true 值，這個值可以指派至 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構之執行個體的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 屬性。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary>取得 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值。這個屬性是唯讀的。</summary>
      <returns>如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，則為 true，否則為 false。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">屬性會設定為 null。</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>在提供的參數上執行位元 Exclusive-OR 運算。</summary>
      <returns>邏輯 XOR 作業的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary>表示零值，其可以指派至 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構之執行個體的 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 屬性。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary>表示要存放在資料庫或從資料庫擷取的 8 位元不帶正負號的整數 (Unsigned Integer)，範圍介於 0 到 255 之間。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary>使用指定的位元組值，初始化 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的新執行個體。</summary>
      <param name="value">位元組值，要存放在新 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性中。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構之總和。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 Value 屬性包含加法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>計算其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的位元 AND 運算。</summary>
      <returns>位元 AND 作業的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>執行其兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的位元 OR 運算。</summary>
      <returns>位元 OR 作業的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary>將這個執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 物件相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (在 Visual Basic 中為 Nothing)</returns>
      <param name="value">要比較的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary>將這個執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (在 Visual Basic 中為 Nothing)</returns>
      <param name="value">要比較的 <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>用 <see cref="T:System.Data.SqlTypes.SqlByte" /> 第二個運算元除第一個運算元。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。如果任一執行個體是 null，則 SqlByte 會是 null。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary>將提供的 <see cref="T:System.Object" /> 參數與 <see cref="T:System.Data.SqlTypes.SqlByte" /> 物件的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性相比較。</summary>
      <returns>如果物件是 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的執行個體，並且兩者相等，則為 true，否則為 false。</returns>
      <param name="value">要比較的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，判斷第一個結構是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary>取得布林值，這個值表示這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構是否為 null。</summary>
      <returns>如果是 null 則為 true。否則為 false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary>常數，表示 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的最大可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary>常數，表示 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的最小可能值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>在將餘數的第一個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元除以它的第二個運算元之後計算餘數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 包含餘數。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>為兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 值進行除法運算，並傳回餘數。</summary>
      <returns>除法運算之後的餘數會在 <paramref name="x" /> 和 <paramref name="y" /> 上執行。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的乘積。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性包含乘法運算的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary>表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>一進位補數運算子在其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元上執行位元一進位補數作業。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性包含 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數之元件。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構之總和。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" />，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性包含兩個運算元的總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>計算其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的位元 AND 運算。</summary>
      <returns>位元 AND 作業的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>執行其兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的位元 OR 運算。</summary>
      <returns>位元 OR 作業的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>用 <see cref="T:System.Data.SqlTypes.SqlByte" /> 第二個運算元除第一個運算元。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>在提供的參數上執行位元 Exclusive-OR 運算。</summary>
      <returns>位元 XOR 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" />，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於指定之 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />。</returns>
      <param name="x">要轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成位元組。</summary>
      <returns>位元組，其值等於 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性。</returns>
      <param name="x">要轉換成位元組的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 SqlInt64 參數的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />。</returns>
      <param name="x">SqlMoney 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 表示的數值。</returns>
      <param name="x">SqlString 類別的執行個體。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 SqlBoolean 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary>將提供的位元組值轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性等於提供的參數。</returns>
      <param name="x">要轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的位元組值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>在將餘數的第一個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元除以它的第二個運算元之後計算餘數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 包含餘數。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的乘積。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性包含乘法運算的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>一進位補數運算子在其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元上執行位元一進位補數作業。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性包含 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數之元件。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>從第一個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元減去第二個運算元。</summary>
      <returns>第一個運算元減去第二個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary>將數字的 <see cref="T:System.String" /> 表示轉換成它的對等 8 位元不帶正負號的整數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，含有 String 參數表示的 8 位元數字。</returns>
      <param name="s">要剖析的 String。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>從第一個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元減去第二個運算元。</summary>
      <returns>第一個運算元減去第二個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns>如果 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 為非零，則為 true，如果為零，則為 false，否則為 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>SqlDecimal 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>SqlDouble 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>SqlInt16 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>SqlInt32 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>SqlInt64 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>SqlMoney 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>SqlSingle 結構，擁有和這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構相同的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的執行個體轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>SqlString，含有 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 之字串表示。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.String" />。</summary>
      <returns>字串，含有 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />。如果 Value 為 null，則 String 將會是 null 字串。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary>取得 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的值。這個屬性是唯讀的。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>在提供的參數上執行位元 Exclusive-OR 運算。</summary>
      <returns>XOR 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary>表示零值，其可以指派至 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構之執行個體的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary>表示可變動的參考型別 (Reference Type)，用來包裝 <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> 或 <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" />。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary>初始化 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary>根據指定的位元組陣列，初始化 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 類別的新執行個體。</summary>
      <param name="buffer">不帶正負號的位元組陣列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary>根據指定的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 值來初始化 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 類別的新執行個體。</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary>根據指定的 <see cref="T:System.IO.Stream" /> 值來初始化 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 類別的新執行個體。</summary>
      <param name="s">
        <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary>傳回內部緩衝區的參考。</summary>
      <returns>傳回內部緩衝區的參考。如果是在 Unmanaged 指標上建立的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體，則會傳回內部緩衝區的 Managed 複本。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary>取得布林值，這個值表示這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 是否為 null。</summary>
      <returns>如果 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 是 null，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary>取得或設定位於指定索引處的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體。</summary>
      <returns>
        <see cref="T:System.Byte" /> 值。</returns>
      <param name="offset">
        <see cref="T:System.Int64" /> 值。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary>取得 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體內含值的長度。</summary>
      <returns>
        <see cref="T:System.Int64" /> 值，表示 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體內含值的長度。如果沒有緩衝區可供執行個體使用，或值為 null，則傳回 -1。傳回資料流包裝執行個體的 <see cref="P:System.IO.Stream.Length" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary>取得這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的內部緩衝區值的最大長度。</summary>
      <returns>long，表示內部緩衝區值的最大長度。傳回 -1，代表資料流包裝的 <see cref="T:System.Data.SqlTypes.SqlBytes" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary>傳回這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的 null 執行個體。</summary>
      <returns>以 <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" /> 傳回 true 的類似方式傳回執行個體。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 結構。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 結構。</returns>
      <param name="value">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 結構。</returns>
      <param name="value">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>將位元組從這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體複製到傳入緩衝區，並傳回複製位元組的數目。</summary>
      <returns>
        <see cref="T:System.Int64" /> long 值，表示複製的位元組數目。</returns>
      <param name="offset">
        <see cref="T:System.Int64" /> long 值，位移至包含在 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體中的值。</param>
      <param name="buffer">要複製的目標位元組陣列緩衝區。</param>
      <param name="offsetInBuffer">緩衝區中要開始進行資料複製的 <see cref="T:System.Int32" /> 整數位移。</param>
      <param name="count">
        <see cref="T:System.Int32" /> 整數，表示要複製的位元組數目。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary>設定這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體的長度。</summary>
      <param name="value">表示長度的 <see cref="T:System.Int64" /> long 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體設定為 null。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary>取得或將這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的資料設定為資料流。</summary>
      <returns>包含 SqlBytes 資料的資料流。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary>從這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體建構並傳回 <see cref="T:System.Data.SqlTypes.SqlBinary" />。</summary>
      <returns>來自這個執行個體的 <see cref="T:System.Data.SqlTypes.SqlBinary" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary>傳回這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 所保留值的 Managed 複本。</summary>
      <returns>這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的位元組陣列值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>將位元組從傳入緩衝區複製到這個 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體。</summary>
      <param name="offset">
        <see cref="T:System.Int64" /> long 值，位移至包含在 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 執行個體中的值。</param>
      <param name="buffer">要複製的目標位元組陣列緩衝區。</param>
      <param name="offsetInBuffer">緩衝區中要開始進行資料複製的 <see cref="T:System.Int32" /> 整數位移。</param>
      <param name="count">
        <see cref="T:System.Int32" /> 整數，表示要複製的位元組數目。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 是一種可變動的參考型別 (Reference Type)，它會包裝 <see cref="T:System.Char" /> 陣列或 <see cref="T:System.Data.SqlTypes.SqlString" /> 執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary>初始化 <see cref="T:System.Data.SqlTypes.SqlChars" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary>根據指定的字元陣列，初始化 <see cref="T:System.Data.SqlTypes.SqlChars" /> 類別的新執行個體。</summary>
      <param name="buffer">
        <see cref="T:System.Char" /> 陣列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary>根據指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 值來初始化 <see cref="T:System.Data.SqlTypes.SqlChars" /> 類別的新執行個體。</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary>傳回內部緩衝區的參考。</summary>
      <returns>傳回內部緩衝區的參考。如果是在 Unmanaged 指標上建立的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體，則會傳回內部緩衝區的 Managed 複本。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary>取得布林值，這個值表示這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 是否為 null。</summary>
      <returns>如果 <see cref="T:System.Data.SqlTypes.SqlChars" /> 是 null，則為 true。否則為 false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary>取得或設定位於指定索引處的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體。</summary>
      <returns>
        <see cref="T:System.Char" /> 值。</returns>
      <param name="offset">
        <see cref="T:System.Int64" /> 值。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary>取得 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體內含值的長度。</summary>
      <returns>
        <see cref="T:System.Int64" /> 值，表示 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體內含值的字元長度。如果沒有緩衝區可供執行個體使用，或值為 null，則傳回 -1。傳回資料流包裝執行個體的 <see cref="P:System.IO.Stream.Length" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary>取得內部緩衝區可以保留的值的最大長度 (以雙位元組字元為單位)。</summary>
      <returns>
        <see cref="T:System.Int64" /> 值，表示內部緩衝區中值的最大長度 (以雙位元組字元為單位)。傳回 -1，代表資料流包裝的 <see cref="T:System.Data.SqlTypes.SqlChars" />。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary>傳回這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 的 null 執行個體。</summary>
      <returns>以 <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" /> 傳回 true 的類似方式傳回執行個體。如需詳細資訊，請參閱處理 Null 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlChars" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 結構。</returns>
      <param name="value">要轉換的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlChars" /> 結構。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 結構。</returns>
      <param name="value">要轉換的 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>將字元從這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體複製到傳入緩衝區，並傳回複製字元的數目。</summary>
      <returns>
        <see cref="T:System.Int64" />long 值，表示複製的位元組數目。</returns>
      <param name="offset">
        <see cref="T:System.Int64" />long 值，會位移至包含在 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體中的值。</param>
      <param name="buffer">要複製的目標字元陣列緩衝區。</param>
      <param name="offsetInBuffer">緩衝區中要開始進行資料複製的 <see cref="T:System.Int32" /> 整數位移。</param>
      <param name="count">
        <see cref="T:System.Int32" /> 整數值，表示要複製的字元數目。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary>設定這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體的長度。</summary>
      <param name="value">表示長度的 <see cref="T:System.Int64" />long 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體設定為 null。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體轉換成其對等的 <see cref="T:System.Data.SqlTypes.SqlString" /> 表示。</summary>
      <returns>這個型別的 <see cref="T:System.Data.SqlTypes.SqlString" /> 表示。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary>傳回這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 所保留值的 Managed 複本。</summary>
      <returns>這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 的字元陣列值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>將字元從傳入緩衝區複製到這個 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體。</summary>
      <param name="offset">long 值，位移至包含在 <see cref="T:System.Data.SqlTypes.SqlChars" /> 執行個體中的值。</param>
      <param name="buffer">要複製的目標字元陣列緩衝區。</param>
      <param name="offsetInBuffer">緩衝區中要開始進行資料複製的 <see cref="T:System.Int32" /> 整數位移。</param>
      <param name="count">
        <see cref="T:System.Int32" /> 整數，表示要複製的字元數目。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary>指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的比較選項。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary>指定排序應該根據字元數值，而非其字母順序值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary>執行二進位編碼排序。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary>指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比較必須忽略大小寫。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary>指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比較必須忽略假名類型。假名類型意指日文平假名和片假名字元，表示日本語言中的語音。平假名用於本土日文的語句和字詞，而片假名則用於自其他語言引進的字詞，例如「computer」或「Internet」。平假名和片假名都可以用來表達語音。如果選取這個值，就會將代表一個語音的平假名字元視為等於代表相同語音的片假名字元。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary>指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比較必須忽略非空格組成的字元，例如變音符號 (Diacritic)。Unicode Standard 將組合的字元定義為與基底字元結合以產生新字元的字元。非空格組合的字元在呈現時本身並不會使用字元空間。如需非空格組合字元的詳細資訊，請參閱 http://www.unicode.org 的＜The Unicode Standard＞。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary>指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比較必須忽略字元寬度。例如，日文片假名字元可以書寫為全型或半型，而如果這個值被選取，片假名字元則書寫成全型並被視為相等於以半型書寫的相同字元。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary>指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比較的預設選項設定值。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary>表示要存放在資料庫或從資料庫擷取的日期與時間資料，值範圍從 1753 年 1 月 1 日至 9999 年 12 月 31 日，精確度為 3.33 毫秒。<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構擁有的基礎資料結構與其對應的 .NET Framework 型別 <see cref="T:System.DateTime" /> 不同，後者可以表示介於 0001 年 1 月 1 日上午 12:00:00 到 9999 年 12 月 31 日下午 11:59:59 的任何時間，精確度可達 100 奈秒。<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 實際儲存的則是與 1900 年 1 月 1 日上午 00:00:00 的相對差異。因此將 "00:00:00 AM 1/1/1900" 轉換成整數的結果將傳回 0。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary>使用指定的 <see cref="T:System.DateTime" /> 值，初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的新執行個體。</summary>
      <param name="value">DateTime 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary>使用提供的參數，初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的新執行個體。</summary>
      <param name="dayTicks">表示日期為刻度的整數值。</param>
      <param name="timeTicks">表示時間為刻度的整數值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>使用提供的參數來初始化年、月、日，初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的新執行個體。</summary>
      <param name="year">整數，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的年。</param>
      <param name="month">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的月。</param>
      <param name="day">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的日數。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>使用提供的參數來初始化年、月、日、時、分和秒，初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的新執行個體。</summary>
      <param name="year">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的年。</param>
      <param name="month">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的月。</param>
      <param name="day">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構之月份日期。</param>
      <param name="hour">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的時。</param>
      <param name="minute">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的分。</param>
      <param name="second">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的秒。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>使用提供的參數以初始化年、月、日、時、分、秒和毫秒，初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的新執行個體。</summary>
      <param name="year">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的年。</param>
      <param name="month">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的月。</param>
      <param name="day">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構之月份日期。</param>
      <param name="hour">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的時。</param>
      <param name="minute">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的分。</param>
      <param name="second">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的秒。</param>
      <param name="millisecond">雙精度浮點數 (Double) 值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的毫秒。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>使用提供的參數以初始化年、月、日、時、分、秒和毫微秒 (Billisecond)，初始化 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的新執行個體。</summary>
      <param name="year">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的年。</param>
      <param name="month">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的月。</param>
      <param name="day">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的日。</param>
      <param name="hour">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的時。</param>
      <param name="minute">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的分。</param>
      <param name="second">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的秒。</param>
      <param name="bilisecond">整數值，表示新 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的毫微秒 (十億分之一秒)。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 加入至 TimeSpan。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 值。</param>
      <param name="t">Timespan 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構與提供的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。Zero這個執行個體和 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 相同。大於零這個執行個體大於 <see cref="T:System.Data.SqlTypes.SqlDateTime" />-或-<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 為 null 參考 (在 Visual Basic 中為 Nothing )</returns>
      <param name="value">要比較的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (Visual Basic 中的 Nothing)。</returns>
      <param name="value">要比較的 <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary>取得表示這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的日期的刻度數。</summary>
      <returns>刻度數，表示包含在這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 屬性中的日期。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">當 <see cref="N:System.Data.SqlTypes" /> 結構的 Value 屬性設定為 null 時，所擲回的例外狀況。</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary>將提供的物件參數與 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 物件的 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 屬性相比較。</summary>
      <returns>如果物件是 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的執行個體，並且兩者相等，則為 true，否則為 false。</returns>
      <param name="value">要比較的物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary>取得這個執行個體的雜湊碼。</summary>
      <returns>32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary>表示這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構是否為 null。</summary>
      <returns>如果是 null 則為 true。否則為 false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary>表示 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的最大有效日期值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary>表示 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的最小有效日期值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 執行個體的邏輯比對，以判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary>表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>將提供的 <see cref="T:System.TimeSpan" /> 參數 (<paramref name="t" />) 指示的時期間加入至提供的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構中。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。如果任一引數為 <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />，則新的 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="t">
        <see cref="T:System.TimeSpan" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構轉換成 <see cref="T:System.DateTime" /> 結構。</summary>
      <returns>
        <see cref="T:System.DateTime" /> 物件，其 <see cref="P:System.DateTime.Date" /> 和 <see cref="P:System.DateTime.TimeOfDay" /> 屬性包含與提供的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構之 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 屬性相同的日期與時間值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數表示的日期與時間。如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 為 Null，則新建立的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構之 Value 將會是 Null。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的任一執行個體是 Null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary>將 <see cref="T:System.DateTime" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 等於提供的 <see cref="T:System.DateTime" /> 結構之組合的 <see cref="P:System.DateTime.Date" /> 和 <see cref="P:System.DateTime.TimeOfDay" /> 屬性。</returns>
      <param name="value">DateTime 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 執行個體的邏輯比對，以判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>從提供的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構中減去提供的 <see cref="T:System.TimeSpan" /> 結構 (<paramref name="t" />)。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構，表示減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
      <param name="t">
        <see cref="T:System.TimeSpan" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary>將日期與時間的指定 <see cref="T:System.String" /> 表示轉換成它的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構，等於指定的 string 表示的日期與時間。</returns>
      <param name="s">要剖析的 string。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary>常數的值相當於 1 小時的刻度數。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary>常數的值相當於 1 分鐘的刻度數。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary>常數的值相當於 1 秒鐘的刻度數。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>從這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 執行個體中減去指定的 Timespan。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 值。</param>
      <param name="t">Timespan 值。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary>取得表示這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的時間的刻度數。</summary>
      <returns>刻度數，表示這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的時間的刻度數。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>SqlString 結構，其值為一個字串，表示包含在這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構中的日期和時間。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構轉換成 <see cref="T:System.String" />。</summary>
      <returns>String，表示這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 屬性。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary>取得 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的值。這個屬性是唯讀的。</summary>
      <returns>這個 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構的值。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">當 <see cref="N:System.Data.SqlTypes" /> 結構的 Value 屬性設定為 null 時，所擲回的例外狀況。</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary>表示具有固定整數位數和小數位數的數值，介於 - 10^38 +1 和 10^38 - 1 之間。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>使用提供的參數，初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的新執行個體。</summary>
      <param name="bPrecision">可以用來表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構之 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性的最大位數。</param>
      <param name="bScale">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性要對新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構解析的小數位數。</param>
      <param name="fPositive">布林值，指出新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構是否表示正數或負數。</param>
      <param name="data1">32 位元不帶正負號的整數 (Unsigned Integer)，將與 data2、data3 和 data4 組合以構成表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值的 128 位元不帶正負號的整數。</param>
      <param name="data2">32 位元不帶正負號的整數，將與 data1、data3 和 data4 組合以構成表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值的 128 位元不帶正負號的整數。</param>
      <param name="data3">32 位元不帶正負號的整數，將與 data1、data2 和 data4 組合以構成表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值的 128 位元不帶正負號的整數。</param>
      <param name="data4">32 位元不帶正負號的整數，將與 data1、data2 和 data3 組合以構成表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值的 128 位元不帶正負號的整數。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary>使用提供的參數，初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的新執行個體。</summary>
      <param name="bPrecision">可以用來表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構之 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性的最大位數。</param>
      <param name="bScale">
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性要對新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構解析的小數位數。</param>
      <param name="fPositive">布林值，指出新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構是否表示正數或負數。</param>
      <param name="bits">128 位元不帶正負號的整數，提供新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary>使用提供的 <see cref="T:System.Decimal" /> 值，初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的新執行個體。</summary>
      <param name="value">要被存放為 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的 <see cref="T:System.Decimal" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary>使用提供的雙精度浮點數 (Double) 參數，初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的新執行個體。</summary>
      <param name="dVal">雙精度浮點數，表示新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary>使用提供的整數值，初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的新執行個體。</summary>
      <param name="value">提供的整數值，將被用來做為新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary>使用提供的長整數 (Long Integer) 值，初始化 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的新執行個體。</summary>
      <param name="value">提供的長整數值，將被用來做為新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary>Abs 方法會取得 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的絕對值。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含表示 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數之絕對值的不帶正負號的數字。</returns>
      <param name="n">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算子的總和。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算元的小數點位數調整成數字參數所指定的數字位數。根據 fRound 參數的值，這個值不是被四捨五入到適合的數字位數，就是被截斷。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含調整過的位數。</returns>
      <param name="n">要調整的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="digits">在調整結構中的數字位數。</param>
      <param name="fRound">如果這個參數為 true，則新 Value 將被四捨五入，如果為 false，則該值將被截斷。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary>取得這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值的二進位表示當做位元組的陣列。</summary>
      <returns>位元組的陣列，包含 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值的二進位表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary>傳回大於或等於指定之 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的最小整數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />，表示大於或等於指定之 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的最小整數。</returns>
      <param name="n">要計算最高限度值的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 物件相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (在 Visual Basic 中為 Nothing)</returns>
      <param name="value">要比較的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (在 Visual Basic 中為 Nothing)</returns>
      <param name="value">要比較的 <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算元的值調整成指示的精確度和小數位數。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 Value 已經被調整成參數中所指示的精確度和小數位數。</returns>
      <param name="n">要調整值的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="precision">新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的精確度。</param>
      <param name="scale">新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的小數點位數。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary>取得這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的二進位表示當做整數的陣列。</summary>
      <returns>整數的陣列，包含這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的二進位表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>除法運算子計算將第一個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算子除以第二個的結果。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算元的邏輯比對，以判斷它們是否相等。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。如果任一執行個體為 null，SqlDecimal 的值也將是 null。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary>將提供的 <see cref="T:System.Object" /> 參數與 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 執行個體的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性相比較。</summary>
      <returns>如果物件是 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的執行個體，並且兩者相等，則為 true。否則為 false。</returns>
      <param name="value">要比較的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 數字四捨五入到下一個較低的整數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，包含這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的整數部分。</returns>
      <param name="n">要計算最低限度值的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的邏輯比對，判斷第一個結構是否大於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的邏輯比對，以判斷第一個參數是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary>表示這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構是否為 null。</summary>
      <returns>如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構為 null，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary>指出這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 是否大於零。</summary>
      <returns>如果將 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 指定為 null，則為 true。否則為 false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的邏輯比對，判斷第一個結構是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的邏輯比對，以判斷第一個參數是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary>常數，表示 <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" /> 屬性的最大可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary>常數，表示 <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" /> 屬性的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary>常數，表示 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary>常數，表示 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的最小值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>乘法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的乘積。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含乘法運算的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary>表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算子的總和。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>除法運算子計算將第一個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算子除以第二個的結果。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算元的邏輯比對，以判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數轉換成 <see cref="T:System.Decimal" />。</summary>
      <returns>新的 Decimal 結構，其值等於 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數表示的值。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary>將 <see cref="T:System.Double" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其值等於 <see cref="T:System.Double" /> 參數的值。</returns>
      <param name="x">要轉換的 <see cref="T:System.Double" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的邏輯比對，判斷第一個結構是否大於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的邏輯比對，以判斷第一個參數是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換成 SqlDecimal。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 運算元轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary>將 <see cref="T:System.Decimal" /> 值轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性等於 Decimal 參數的值。</returns>
      <param name="x">要被轉換的 <see cref="T:System.Decimal" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary>將提供的 <see cref="T:System.Int64" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性等於 <see cref="T:System.Int64" /> 參數的值。</returns>
      <param name="x">要轉換的 <see cref="T:System.Int64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的邏輯比對，判斷第一個結構是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的邏輯比對，以判斷第一個參數是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>乘法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的乘積。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性包含乘法運算的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>計算第一個運算元減去第二個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算元的結果。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 Value 屬性包含減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary>一元減號運算子將 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 變成相反值。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其值包含負運算的結果。</returns>
      <param name="x">要變成相反值的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary>將數字的 <see cref="T:System.String" /> 表示轉換為其 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 對等值。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />，等於指定 <see cref="T:System.String" /> 中所包含的值。</returns>
      <param name="s">要剖析的 String。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值做為指定的指數乘冪。</summary>
      <returns>包含結果的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</returns>
      <param name="n">要做為乘冪數的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="exp">雙精度浮點數值，指出應該提高哪一個乘冪數。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary>取得用來表示 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性的最大位數。</summary>
      <returns>最大位數，用來表示這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的 Value。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>取得最接近指定之 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構值的數字 (具有指定的精確度)。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，包含四捨五入運算的結果。</returns>
      <param name="n">要被四捨五入的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="position">在傳回值中的有效分數位數 (精確度) 的數目。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary>取得解析 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 的小數位數數目。</summary>
      <returns>解析 Value 屬性的小數位數數目。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary>取得值，指出 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性之符號。</summary>
      <returns>數字，指出 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的符號。</returns>
      <param name="n">要評估其符號的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>計算第一個運算元減去第二個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 運算元的結果。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 Value 屬性包含減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary>傳回雙精度浮點數，等於這個執行個體的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性內容。</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性的十進位表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns>如果 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 為非零，則為 true，如果為零，則為 false，否則為 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 Value 等於這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的 Value。如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的值為 true，則 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 Value 將會是 1。否則，<see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 Value 會是 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 之執行個體相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 之執行個體相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 之執行個體相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 之執行個體相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 之執行個體相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，具有與這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 之執行個體相同的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 結構，其值為字串，這個字串表示這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構中包含的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換成 <see cref="T:System.String" />。</summary>
      <returns>新的 <see cref="T:System.String" /> 物件，包含 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性之字串表示。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構之值截斷到想要的位置。</summary>
      <returns>提供 <paramref name="position" /> 參數的負值，以便將該值截斷至小數點左邊的對應位置。</returns>
      <param name="n">要被截斷的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
      <param name="position">將截斷數字的小數點位置。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary>取得 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構的值。這個屬性是唯讀的。</summary>
      <returns>介於 -79,228,162,514,264,337,593,543,950,335 到 79,228,162,514,162,514,264,337,593,543,950,335 之間的數字。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary>表示 -1.79E +308 到 1.79E +308 範圍內的浮點數 (儲存於資料庫或從資料庫擷取)。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary>使用提供的雙精確度浮點數 (Double) 參數設定新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 屬性，以初始化 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的新執行個體。</summary>
      <param name="value">雙精確度浮點數 (Double)，其值將被用於新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>加法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的總和。</summary>
      <returns>兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (在 Visual Basic 中為 Nothing)</returns>
      <param name="value">要比較的 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (Visual Basic 中的 Nothing )。</returns>
      <param name="value">要比較的 <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>除法運算子用第二個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元除第一個運算元。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 執行個體的邏輯比對，以判斷它們是否相等。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary>將提供的物件參數與 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 物件的 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 屬性相比較。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。</returns>
      <param name="value">要比較的物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary>傳回這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的雜湊程式碼。</summary>
      <returns>32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary>傳回布林值，這個值表示這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 執行個體是否為 null。</summary>
      <returns>如果 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 為 null，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary>常數，表示 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary>常數，表示 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的最小可能值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>乘法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的乘積。</summary>
      <returns>兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary>表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>加法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的總和。</summary>
      <returns>兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>除法運算子用第二個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元除第一個運算元。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 執行個體的邏輯比對，以判斷它們是否相等。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，根據 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 屬性，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 不是 0 就是 1。如果 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成雙精確度浮點數。</summary>
      <returns>雙精確度浮點數，相當於指定的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構之值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 表示的數字值。如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 為 <see cref="F:System.Data.SqlTypes.SqlString.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />。如果 <see cref="T:System.Data.SqlTypes.SqlByte" /> 為 <see cref="F:System.Data.SqlTypes.SqlByte.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />。如果 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 為 <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 為 <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 為 <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 為 <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />。如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 為 <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />。如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 為 <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />，則 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構會是 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary>將提供的雙精確度浮點數值轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />，具有與指定的雙精確度浮點數參數相同的值。</returns>
      <param name="x">要轉換的雙精確度浮點數值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>乘法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的乘積。</summary>
      <returns>兩個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>減法運算子從第一個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元減去第二個運算元。</summary>
      <returns>減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary>傳回指定的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的負值。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，含有負值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary>將數字的 <see cref="T:System.String" /> 表示轉換成相等的雙精確度浮點數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />，包含 String 表示的值。</returns>
      <param name="s">要剖析的 String。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>減法運算子從第一個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 運算元減去第二個運算元。</summary>
      <returns>減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns>SqlBoolean 結構，如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 為非零值，則它的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 將會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 為零，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />，如果 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構為 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>SqlByte 結構，其 Value 等於這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的 Value。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 SqlDecimal 結構，其轉換值等於這個 SqlDouble 的進位值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 Value 等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構值的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 Value 等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構值的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 Value 等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構值的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新的 SqlMoney 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新的 SqlSingle 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>SqlString，表示這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成字串。</summary>
      <returns>字串，表示這個 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary>取得 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的值。這個屬性是唯讀的。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構的值。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary>表示可以指派至 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構之執行個體的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 屬性的零值。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary>表示要存放在資料庫或從資料庫擷取的 GUID。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary>使用提供的位元組陣列參數，初始化 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的新執行個體。</summary>
      <param name="value">位元組陣列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary>使用指定的 <see cref="T:System.Guid" /> 參數，初始化 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的新執行個體。</summary>
      <param name="g">
        <see cref="T:System.Guid" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>使用指定的值，初始化 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的新執行個體。</summary>
      <param name="a">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的前 4 個位元組。</param>
      <param name="b">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下兩個位元組。</param>
      <param name="c">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下兩個位元組。</param>
      <param name="d">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
      <param name="e">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
      <param name="f">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
      <param name="g">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
      <param name="h">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
      <param name="i">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
      <param name="j">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
      <param name="k">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的下一個位元組。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary>使用指定的 <see cref="T:System.String" /> 參數，初始化 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的新執行個體。</summary>
      <param name="s">
        <see cref="T:System.String" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構與提供的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 相比較，並傳回它們相對值的指示。比較最後 6 個以上的位元組，並將最後 6 個位元組視為比較中的最大顯著性位元組。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件為 Null 參考 (Nothing)。</returns>
      <param name="value">要比較的 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構與提供的物件相比較，並傳回它們相對值的指示。比較最後 6 個以上的位元組，並將最後 6 個位元組視為比較中的最大顯著性位元組。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件為 Null 參考 (Nothing)。</returns>
      <param name="value">要比較的 <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。如果任一執行個體是 null，則 SqlGuid 會是 null。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary>將提供的物件參數與 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 物件的 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 屬性相比較。</summary>
      <returns>如果物件是 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的執行個體，並且兩者相等，則為 true，否則為 false。</returns>
      <param name="value">要比較的物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary>傳回這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的雜湊程式碼。</summary>
      <returns>32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary>取得布林值，這個值表示這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構是否為 null。</summary>
      <returns>如果是 null 則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的邏輯比對，判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary>表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlGuid" />，其 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />。</returns>
      <param name="x">SqlBinary 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 參數轉換成 <see cref="T:System.Guid" />。</summary>
      <returns>新的 <see cref="T:System.Guid" />，等於 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />，其 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數表示的值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary>將提供的 <see cref="T:System.Guid" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlGuid" />，其 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 等於 <see cref="T:System.Guid" /> 參數。</returns>
      <param name="x">
        <see cref="T:System.Guid" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的邏輯比對，判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的兩個執行個體，判斷第一個執行個體是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary>將指定的 <see cref="T:System.String" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />，等於指定 <see cref="T:System.String" /> 中所包含的值。</returns>
      <param name="s">要剖析的 String。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構轉換成位元組陣列。</summary>
      <returns>位元組的陣列，表示這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBinary" />。</summary>
      <returns>SqlBinary 結構，包含 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構中的位元組。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 結構，包含 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的字串表示。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構轉換成 <see cref="T:System.String" />。</summary>
      <returns>
        <see cref="T:System.String" />，包含 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的字串表示。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary>取得 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構的值。這個屬性是唯讀的。</summary>
      <returns>
        <see cref="T:System.Guid" /> 結構。</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary>表示要在資料庫中儲存或擷取的 16 位元帶正負號的整數 (Signed Integer)。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary>使用提供的短整數 (Short Integer) 參數，初始化 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的新執行個體。</summary>
      <param name="value">短整數。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的總和。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>計算其 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的位元 AND 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含位元 AND 的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>執行其兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的位元 OR 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含位元 OR 的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (在 Visual Basic 中為 Nothing)</returns>
      <param name="value">要比較的 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (在 Visual Basic 中為 Nothing)</returns>
      <param name="value">要比較的 <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>用第二個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元除第一個運算元。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。如果任一執行個體是 null，則 SqlInt16 會是 null。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary>比較指定的物件與 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 物件的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性。</summary>
      <returns>如果物件是 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的執行個體，並且兩者相等，則為 true，否則為 false。</returns>
      <param name="value">要比較的物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，判斷第一個結構是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary>表示這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構是否為 null。</summary>
      <returns>如果是 null 則為 true。否則為 false。如需詳細資訊，請參閱處理 Null 值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，判斷第一個結構是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary>常數，表示 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的最大可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary>常數，表示 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的最小可能值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>在將餘數的第一個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元除以它的第二個運算元之後計算餘數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 包含餘數。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>為兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 值進行除法運算，並傳回餘數。</summary>
      <returns>除法運算之後的餘數會在 <paramref name="x" /> 和 <paramref name="y" /> 上執行。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 值。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的乘積。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 包含兩個參數的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的邏輯比對，以判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary>表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>~ 運算子在其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元上執行位元一進位補數作業。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含指定的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構之補數。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的總和。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>計算其 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的位元 AND 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含位元 AND 的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>執行其兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的位元 OR 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含位元 OR 的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>用第二個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元除第一個運算元。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的邏輯比對，以判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>在提供的參數上執行位元 Exclusive-OR 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含位元 XOR 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 屬性。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數的整數部分。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成短整數。</summary>
      <returns>短整數，其值是 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的 Value。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的整數部分。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件參數表示的值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的兩個執行個體，判斷第一個執行個體是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，判斷第一個結構是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary>將提供的短整數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，具有與指定之短整數相同的值。</returns>
      <param name="x">短整數值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的邏輯比對，以判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>比較 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的兩個執行個體，判斷第一個執行個體是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，判斷第一個結構是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>在將餘數的第一個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元除以它的第二個運算元之後計算餘數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 包含餘數。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的乘積。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 包含兩個參數的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>~ 運算子在其 <see cref="T:System.Data.SqlTypes.SqlByte" /> 運算元上執行位元一進位補數作業。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含指定的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構之補數。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>從第一個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數減去第二個參數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary>一元減號運算子將 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 運算元的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 變成相反值。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，含有相反值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary>將數字的 <see cref="T:System.String" /> 表示轉換成它的對等 16 位元帶正負號的整數。</summary>
      <returns>16 位元帶正負號的整數，等於指定之 <see cref="T:System.String" /> 中所包含的值。</returns>
      <param name="s">要剖析的 String。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>從第一個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數減去第二個參數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性包含減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns>如果 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 為非零，則為 true，如果為零，則為 false，否則為 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 小於 0 或大於 255，則會發生 <see cref="T:System.OverflowException" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，其 Value 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，其 Value 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 Value 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 Value 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 Value 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 Value 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" />，表示這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 之執行個體的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構轉換成 <see cref="T:System.String" />。</summary>
      <returns>
        <see cref="T:System.String" /> 物件，表示這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 之執行個體的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary>取得這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構之執行個體的值。這個屬性是唯讀的。</summary>
      <returns>短整數，表示這個 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>在提供的參數上執行位元 Exclusive-OR 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，包含 XOR 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary>表示零值，其可以指派至 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構之執行個體的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary>表示要在資料庫中儲存或擷取的 32 位元帶正負號的整數 (Signed Integer)。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary>使用提供的整數值，初始化 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構的新執行個體。</summary>
      <param name="value">要轉換的整數。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構之總和。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性包含指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構之總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>計算其 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 運算元的位元 AND 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含位元 AND 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>計算指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構之位元 OR 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含位元 OR 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (在 Visual Basic 中為 Nothing)</returns>
      <param name="value">要比較的 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (Visual Basic 中的 Nothing)。</returns>
      <param name="value">要比較的 <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>用第二個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數除第一個參數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" />，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的邏輯比對，以判斷它們是否相等。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。如果任一執行個體是 null，則 SqlInt32 會是 null。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary>將提供的物件參數與 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 物件的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性相比較。</summary>
      <returns>如果物件是 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的執行個體，並且兩者相等，則為 true，否則為 false。</returns>
      <param name="value">要比較的物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary>表示這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構是否為 null。</summary>
      <returns>如果 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 是 null，則這個屬性為 true。否則為 false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary>常數，表示 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的最大可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary>常數，表示 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的最小可能值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>在將第一個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數除以第二個參數之後計算餘數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 包含餘數。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>為兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 值進行除法運算，並傳回餘數。</summary>
      <returns>除法運算之後的餘數會在 <paramref name="x" /> 和 <paramref name="y" /> 上執行。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 值。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的乘積。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 包含兩個參數的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary>表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>在指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構上執行位元一進位補數運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含一進位補數運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構之總和。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性包含指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構之總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>計算其 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 運算元的位元 AND 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含位元 AND 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>計算指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構之位元 OR 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含位元 OR 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>用第二個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數除第一個參數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" />，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的邏輯比對，以判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>在指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構上執行位元 Exclusive-OR 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含位元 XOR 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 屬性。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 屬性。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數的整數部分。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成整數。</summary>
      <returns>轉換的整數值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 SqlInt64 參數的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的整數部分。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數表示的值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 屬性轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary>將提供的整數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 Value 屬性等於整數參數。</returns>
      <param name="x">整數值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的邏輯比較，判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>比較兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數，判斷第一個參數是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>在將第一個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數除以第二個參數之後計算餘數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 包含餘數。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的乘積。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 包含兩個參數的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>在指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構上執行位元一進位補數運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含一進位補數運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>從第一個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數減去第二個參數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性包含減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 運算元的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 變成相反值。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，含有相反的值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary>將數字的 <see cref="T:System.String" /> 表示轉換成它的對等 32 位元帶正負號的整數。</summary>
      <returns>32 位元帶正負號的整數，等於指定的 <see cref="T:System.String" /> 中所包含的值。</returns>
      <param name="s">要剖析的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>從第一個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數減去第二個參數。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性包含減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns>如果 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 為非零，則為 true，如果為零，則為 false，否則為 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 Value 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構的 Value。如果 SqlInt32 小於 0 或大於 255，則會發生 <see cref="T:System.OverflowException" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.String" />。</summary>
      <returns>新的 <see cref="T:System.String" /> 結構，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary>取得這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構的值。這個屬性是唯讀的。</summary>
      <returns>整數，表示這個 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構的值。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">屬性包含 <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />。</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>在指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構上執行位元 Exclusive-OR 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構，包含位元 XOR 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary>表示零值，其可以指派至 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構之執行個體的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary>表示要在資料庫中儲存或擷取的 64 位元帶正負號的整數 (Signed Integer)。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary>使用提供的長整數 (Long Integer)，初始化 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的新執行個體。</summary>
      <param name="value">長整數。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的總和。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>計算其 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 運算元的位元 AND 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，包含位元 AND 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>執行其兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 運算元的位元 OR 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，包含位元 OR 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (Visual Basic 中的 Nothing)。</returns>
      <param name="value">要比較的 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (Visual Basic 中的 Nothing )。</returns>
      <param name="value">要比較的 <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>用第二個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數除第一個參數。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，以判斷它們是否相等。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。如果任一執行個體是 null，則 SqlInt64 會是 null。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary>將提供的物件參數與 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 物件的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性相比較。</summary>
      <returns>如果物件是 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的執行個體，並且兩者相等，則為 true，否則為 false。</returns>
      <param name="value">要比較的物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，以判斷第一個參數是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，以判斷第一個參數是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary>取得布林值，這個值表示這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構是否為 null。</summary>
      <returns>如果是 null 則為 true。否則為 false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，判斷第一個參數是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，判斷第一個參數是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary>常數，表示 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的最大可能值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary>常數，表示 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的最小可能值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>在將第一個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數除以第二個參數之後計算餘數。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性包含其餘部分。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>為兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 值進行除法運算，並傳回餘數。</summary>
      <returns>除法運算之後的餘數會在 <paramref name="x" /> 和 <paramref name="y" /> 上執行。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 值。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的乘積。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>對兩個 SqlInt64 參數進行邏輯比較以判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary>表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>在其 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 運算元上執行位元一進位補數作業。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的一進位補數。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的總和。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>計算其 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 運算元的位元 AND 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，包含位元 AND 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>執行其兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 運算元的位元 OR 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，包含位元 OR 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>用第二個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數除第一個參數。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，以判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>在提供的參數上執行位元 Exclusive-OR 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，包含位元 XOR 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的整數部分。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數的整數部分。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數轉換成長整數。</summary>
      <returns>新的長整數值，等於 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的整數部分。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性包含 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的整數部分。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" />，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數表示的值。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，以判斷第一個參數是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，以判斷第一個參數是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 屬性。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 屬性。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 屬性。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary>將長整數參數轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於長整數參數的值。</returns>
      <param name="x">長整數值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>對兩個 SqlInt64 參數進行邏輯比較以判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，判斷第一個參數是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的邏輯比對，判斷第一個參數是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>在將第一個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數除以第二個參數之後計算餘數。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性包含其餘部分。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的乘積。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於兩個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>在其 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 運算元上執行位元一進位補數作業。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的一進位補數。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>從第一個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數減去第二個參數。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary>一元減號運算子將 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 運算元的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 變成相反值。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的否定 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary>將數字的 <see cref="T:System.String" /> 表示轉換成它的對等 64 位元帶正負號的整數。</summary>
      <returns>64 位元帶正負號的整數，等於指定的 <see cref="T:System.String" /> 中所包含的值。</returns>
      <param name="s">要剖析的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>從第一個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數減去第二個參數。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性等於減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns>如果 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 為非零，則為 true，如果為零，則為 false，否則為 null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 Value 等於這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的 Value。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt16" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlSingle" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" />，表示這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的執行個體轉換成 <see cref="T:System.String" />。</summary>
      <returns>
        <see cref="T:System.String" />，表示這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary>取得這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的值。這個屬性是唯讀的。</summary>
      <returns>短整數，表示這個 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>在提供的參數上執行位元 Exclusive-OR 運算。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構，包含位元 XOR 運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary>表示零值，其可以指派至 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構之執行個體的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 屬性。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary>表示要存放在資料庫或從資料庫擷取的貨幣值，範圍從 -2 63 (或 -922,337,203,685,477.5808) 到 2 63 -1 (或 +922,337,203,685,477.5807)，正確率為貨幣單位的萬分之一。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary>使用指定的 <see cref="T:System.Decimal" /> 值，初始化 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 類別的新執行個體。</summary>
      <param name="value">要初始化的貨幣值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary>使用指定的雙精度浮點數 (Double) 值，初始化 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 類別的新執行個體。</summary>
      <param name="value">要初始化的貨幣值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary>使用指定的整數值，初始化 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 類別的新執行個體。</summary>
      <param name="value">要初始化的貨幣值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary>使用指定的長整數 (Long Integer) 值，初始化 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 類別的新執行個體。</summary>
      <param name="value">要初始化的貨幣值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的總和。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (在 Visual Basic 中為 Nothing)</returns>
      <param name="value">要比較的 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (在 Visual Basic 中為 Nothing)</returns>
      <param name="value">要比較的 <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>除法運算子用第二個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數除第一個參數。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷它們是否相等。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。如果任一執行個體是 null，則 SqlMoney 會是 null。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary>將提供的物件參數與 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 物件的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性相比較。</summary>
      <returns>如果物件是 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的執行個體，並且兩者相等，則 Equals 會傳回 true，否則為 false。</returns>
      <param name="value">要比較的物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary>取得這個執行個體的雜湊碼。</summary>
      <returns>32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary>傳回布林值，這個值表示這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構是否為 null。</summary>
      <returns>如果是 null 則為 true。否則為 false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary>表示可以指派至 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 類別之執行個體的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary>表示可以指派至 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 類別之執行個體的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性的最小值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>乘法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的乘積。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含乘法運算的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary>表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>計算兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的總和。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>除法運算子用第二個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數除第一個參數。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary>這個隱含運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 屬性。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary>這個運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary>這個運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Decimal" />。</summary>
      <returns>新的 <see cref="T:System.Decimal" /> 結構，其值等於 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary>這個運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary>這個運算子會將 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數表示的值。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary>這個隱含運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 屬性。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary>這個隱含運算子將提供的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary>這個隱含運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary>這個隱含運算子將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary>這個隱含運算子將提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary>將 <see cref="T:System.Decimal" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 等於 <see cref="T:System.Decimal" /> 參數的值。</returns>
      <param name="x">要被轉換的 <see cref="T:System.Decimal" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary>這個隱含運算子會將提供的 <see cref="T:System.Int64" /> 參數轉換為 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性等於 <see cref="T:System.Int64" /> 參數的值。</returns>
      <param name="x">要轉換的 <see cref="T:System.Int64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的邏輯比對，以判斷第一個參數是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>乘法運算子計算兩個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的乘積。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含乘法運算的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>減法運算子從第一個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數減去第二個參數。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，包含減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary>一元減號運算子將 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 變成相反值。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 包含負運算的結果。</returns>
      <param name="x">要變成相反值的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary>將數字的 <see cref="T:System.String" /> 表示轉換為其 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 對等值。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" />，等於指定 <see cref="T:System.String" /> 中所包含的值。</returns>
      <param name="s">要剖析的 String。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>減法運算子從第一個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數減去第二個參數。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構，包含減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 之執行個體的 Value 轉換為 <see cref="T:System.Decimal" /> 結構。</summary>
      <returns>
        <see cref="T:System.Decimal" /> 結構，其值等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Double" />。</summary>
      <returns>雙精度浮點數，具有等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Int32" />。</summary>
      <returns>32 位元的整數，其值等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的值轉換成 <see cref="T:System.Int64" />。</summary>
      <returns>64 位元的整數，其值等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的整數部分。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。如果 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的值為零，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構的值將會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt16" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt32" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlSingle" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 結構，其值是表示這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 之值的字串。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的執行個體轉換成字串。</summary>
      <returns>字串，其值是表示這個 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 之值的字串。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary>取得 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的執行個體之貨幣值。這個屬性是唯讀的。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構的執行個體之貨幣值。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">屬性會設定為 null。</exception>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary>表示可以指派至 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 類別之執行個體的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 屬性的零值。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary>當 <see cref="N:System.Data.SqlTypes" /> 結構的 Value 屬性設定為 null 時，所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary>以系統提供的錯誤說明訊息，初始化 <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary>使用指定的錯誤說明訊息，初始化 <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況的訊息。這個建構函式的呼叫端必須確保這個字串已經為目前系統的文化特性當地語系化。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和造成這個例外狀況原因的內部例外狀況參考，初始化 <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況的訊息。這個建構函式的呼叫端必須確保這個字串已經為目前系統的文化特性當地語系化。</param>
      <param name="e">導致目前例外狀況的例外。如果 <paramref name="innerException" /> 參數不是 null，則目前的例外狀況會在處理內部例外的 catch 區塊中引發。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary>表示 -3.40E +38 到 3.40E +38 範圍內的浮點數 (儲存於資料庫或從資料庫擷取)。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary>使用提供的雙精度浮點數 (Double) 參數，初始化 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的新執行個體。</summary>
      <param name="value">雙精度浮點數值，將用來做為新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary>初始化 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的新執行個體。</summary>
      <param name="value">浮點數值，將用來做為新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構之總和。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含兩個指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構之總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (在 Visual Basic 中為 Nothing)</returns>
      <param name="value">要比較的 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 執行個體與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (在 Visual Basic 中為 Nothing)</returns>
      <param name="value">要比較的 <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>將第一個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構除以第二個。</summary>
      <returns>SqlInt64 結構，包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的邏輯比對，以判斷它們是否相等。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。如果任一執行個體是 null，則 SqlSingle 會是 null。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary>將提供的物件參數與 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 物件的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 屬性相比較。</summary>
      <returns>如果物件是 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的執行個體，並且兩者相等，則為 true，否則為 false。</returns>
      <param name="value">要比較的物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary>取得這個執行個體的雜湊碼。</summary>
      <returns>32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 運算元的邏輯比對，判斷第一個運算元是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的邏輯比對，判斷第一個結構是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary>表示這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構是否為 null。</summary>
      <returns>如果是 null 則為 true。否則為 false。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的邏輯比對，以判斷第一個參數是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的邏輯比對，以判斷第一個參數是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary>表示可以指派至 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 類別之執行個體的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 屬性的最大值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary>表示可以指派至 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 類別之執行個體的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 屬性的最小值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構之乘積。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含乘法運算的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary>表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構之總和。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含兩個指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構之總和。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>將第一個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構除以第二個。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含除法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>執行兩個 SqlSingle 參數的邏輯比對，以判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary>這個隱含運算子會將提供的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成浮點數 (Float)。</summary>
      <returns>浮點數，包含 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的值。</returns>
      <param name="x">要被轉換成浮點數的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數表示的值。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 運算元的邏輯比對，判斷第一個運算元是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的邏輯比對，判斷第一個結構是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary>這個隱含運算子會將 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 屬性等於 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlByte" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary>將提供的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 等於 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary>將指定的浮點數值轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含指定的浮點數的值。</returns>
      <param name="x">要被轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的浮點數值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的邏輯比對，以判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的邏輯比對，以判斷第一個參數是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的邏輯比對，以判斷第一個參數是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>計算兩個指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構之乘積。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含乘法運算的乘積。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>從第一個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構減去第二個結構。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary>否定指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，含有負值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary>將指定的 <see cref="T:System.String" /> 轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" />，等於指定 <see cref="T:System.String" /> 中所包含的值。</returns>
      <param name="s">要剖析的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>從第一個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構減去第二個結構。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構，包含減法運算的結果。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns>如果 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 為非零，則為 true，如果為零，則為 false，否則為 Null。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構，其 Value 等於這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的 Value。如果 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的值為 true，則 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 Value 將會是 1。否則，<see cref="T:System.Data.SqlTypes.SqlByte" /> 結構的 Value 會是 0。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 SqlDecimal，等於這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新的 SqlDouble ，等於這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 SqlInt16，等於這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt32" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" />，表示這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構轉換成 <see cref="T:System.String" />。</summary>
      <returns>String 物件，表示這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary>取得這個 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構的值。這個屬性是唯讀的。</summary>
      <returns>介於 -3.40E+38 到 3.40E+38 之間的浮點數值。</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary>表示可以指派至 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 類別之執行個體的 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 屬性的零值。</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary>表示要儲存在資料庫或自資料庫擷取之字元的可變長度資料流。<see cref="T:System.Data.SqlTypes.SqlString" /> 具有與其在 .NET Framework 中對應的 <see cref="T:System.String" /> 資料類型不同的基礎資料結構。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary>使用指定的地區設定 ID、比較選項和資料，初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的新執行個體。</summary>
      <param name="lcid">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的地理上地區設定和語言。</param>
      <param name="compareOptions">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的比較選項。</param>
      <param name="data">要儲存的資料陣列。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary>初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 類別的新執行個體。</summary>
      <param name="lcid">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的地理上地區設定和語言。</param>
      <param name="compareOptions">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的比較選項。</param>
      <param name="data">要儲存的資料陣列。</param>
      <param name="fUnicode">如果編碼為 Unicode，則為 true，否則為 false。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary>初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 類別的新執行個體。</summary>
      <param name="lcid">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的地理上地區設定和語言。</param>
      <param name="compareOptions">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的比較選項。</param>
      <param name="data">要儲存的資料陣列。</param>
      <param name="index">陣列中的開始索引。</param>
      <param name="count">從索引中要複製的字元數。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 類別的新執行個體。</summary>
      <param name="lcid">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的地理上地區設定和語言。</param>
      <param name="compareOptions">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的比較選項。</param>
      <param name="data">要儲存的資料陣列。</param>
      <param name="index">陣列中的開始索引。</param>
      <param name="count">從索引中要複製的字元數。</param>
      <param name="fUnicode">如果編碼為 Unicode，則為 true，否則為 false。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary>使用指定的字串，初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的新執行個體。</summary>
      <param name="data">要儲存的字串。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary>使用指定的字串與地區設定 ID (Locale ID) 值，初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的新執行個體。</summary>
      <param name="data">要儲存的字串。</param>
      <param name="lcid">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的地理上地區設定和語言。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>用指定的字串、地區設定 ID 和比較選項值，初始化 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的新執行個體。</summary>
      <param name="data">要儲存的字串。</param>
      <param name="lcid">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的地理上地區設定和語言。</param>
      <param name="compareOptions">指定新 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的比較選項。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>將兩個指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 值串連，以建立新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" />，為 <paramref name="x" /> 和 <paramref name="y" /> 的串連值。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary>指定排序應該根據字元數值，而非其字母順序值。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary>指定排序應該根據字元的數值，而非其字母順序值。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary>建立這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件的複本。</summary>
      <returns>新 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件，其中所有屬性值都與原始值相同。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary>取得 <see cref="T:System.Globalization.CompareInfo" /> 物件，其定義應該如何為這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構執行字串比較。</summary>
      <returns>CompareInfo 物件，定義這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的字串比較。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary>取得指定的 <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 值的相等 <see cref="T:System.Globalization.CompareOptions" /> 列舉。</summary>
      <returns>CompareOptions 值，對應這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的 SqlCompareOptions。</returns>
      <param name="compareOptions">
        <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 值，描述這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的比較選項。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 執行個體與提供的 <see cref="T:System.Data.SqlTypes.SqlString" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (Visual Basic 中的 Nothing)。</returns>
      <param name="value">要比較的 <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件與提供的 <see cref="T:System.Object" /> 相比較，並傳回它們相對值的指示。</summary>
      <returns>帶正負號的數字，表示執行個體與物件的相對值。傳回值條件小於零這個執行個體小於物件。Zero這個執行個體與物件相同。大於零這個執行個體大於物件。-或-物件是 null 參考 (在 Visual Basic 中為 Nothing)</returns>
      <param name="value">要比較的 <see cref="T:System.Object" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>將兩個指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構串連在一起。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" />，包含剛串連的值，這個值表示兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數的內容。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary>取得 <see cref="T:System.Globalization.CultureInfo" /> 結構，其表示有關這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件的文化特性 (Culture) 資訊。</summary>
      <returns>
        <see cref="T:System.Globalization.CultureInfo" /> 結構，描述有關這個 SqlString 結構的文化特性資訊，包括文化特性的名稱、撰寫的系統和使用的曆法，也包括存取特定文化特性的物件，這些物件會為一般作業 (例如格式化日期及排序字串) 提供方法。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，以判斷它們是否相等。</summary>
      <returns>如果兩個值相等，則為 true，否則為 false。如果任一執行個體是 null，則 SqlString 會是 null。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary>將提供的物件參數與 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件的 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 屬性相比較。</summary>
      <returns>如果物件是 <see cref="T:System.Data.SqlTypes.SqlString" /> 的執行個體，並且兩者相等，則 Equals 會傳回 true，否則為 false。</returns>
      <param name="value">要比較的物件。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary>取得這個執行個體的雜湊碼。</summary>
      <returns>32 位元帶正負號的整數雜湊碼。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary>取得位元組的陣列，包含 ANSI 格式的 <see cref="T:System.Data.SqlTypes.SqlString" /> 內容。</summary>
      <returns>位元組陣列，包含 ANSI 格式的 <see cref="T:System.Data.SqlTypes.SqlString" /> 內容。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary>取得位元組的陣列，包含 Unicode 格式的 <see cref="T:System.Data.SqlTypes.SqlString" /> 內容。</summary>
      <returns>位元組陣列，包含 Unicode 格式的 <see cref="T:System.Data.SqlTypes.SqlString" /> 內容。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary>指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 比較必須應該忽略大小寫。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary>指定字串比較必須忽略假名類型。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary>指定字串比較必須忽略非空格組合的字元，例如變音符號 (Diacritic)。</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary>指定字串比較必須忽略字元寬度。</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary>表示這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構是否為 null。</summary>
      <returns>如果 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 為 <see cref="F:System.Data.SqlTypes.SqlString.Null" />，則為 true，否則為 false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary>指定 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的地理地區設定和語言。</summary>
      <returns>存放在 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 屬性中字串的地區設定 ID。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，以判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary>表示 <see cref="T:System.DBNull" />，可以指派至 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構的執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>將兩個指定的 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構串連在一起。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" />，包含剛串連的值，這個值表示兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數的內容。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，以判斷它們是否相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlString" />，含有 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 參數的字串表示。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件，含有 <see cref="T:System.Data.SqlTypes.SqlByte" /> 參數的字串表示。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlString" />，含有 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 參數的字串表示。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlString" />，含有 SqlDecimal 參數的字串表示。</returns>
      <param name="x">要轉換的 SqlDecimal 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlString" />，含有 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 參數的字串表示。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" />，其值為指定 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的字串表示。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件，含有 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 參數的字串表示。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件，含有 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 參數的字串表示。</returns>
      <param name="x">要被轉換的 SqlInt32 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件，含有 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 參數的字串表示。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlString" />，含有 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 參數的字串表示。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary>將指定的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlString" />，含有 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 參數的字串表示。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 結構。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlString" /> 轉換成 <see cref="T:System.String" />。</summary>
      <returns>String，其內容與 <see cref="T:System.Data.SqlTypes.SqlString" /> 參數的 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 屬性相同。</returns>
      <param name="x">要轉換的 <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否大於第二個。</summary>
      <returns>如果第一個執行個體大於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否大於或等於第二個。</summary>
      <returns>如果第一個執行個體大於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary>將 <see cref="T:System.String" /> 參數轉換成 <see cref="T:System.Data.SqlTypes.SqlString" />。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" />，包含指定 String 的值。</returns>
      <param name="x">要轉換的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，以判斷它們是否不相等。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />，如果兩個執行個體不相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，如果兩個執行個體相等，則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否小於第二個。</summary>
      <returns>如果第一個執行個體小於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>執行兩個 <see cref="T:System.Data.SqlTypes.SqlString" /> 運算元的邏輯比對，判斷第一個運算元是否小於或等於第二個。</summary>
      <returns>如果第一個執行個體小於或等於第二個執行個體，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 為 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />，否則為 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />。如果 <see cref="T:System.Data.SqlTypes.SqlString" /> 的任一執行個體是 null，則 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 的 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 會是 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />。</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary>一個或多個 <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 列舉 (Enumeration) 值的組合表示應該將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 與其他 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構相比較的方式。</summary>
      <returns>數值，指定應該如何將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 與其他 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構相比較。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlBoolean" />。</summary>
      <returns>如果 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 為非零，則為 true，如果為零，則為 false，否則為 Null。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlByte" />。</summary>
      <returns>新的 SqlByte 結構，其 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 等於這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構所表示的數字。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDateTime" />。</summary>
      <returns>新的 SqlDateTime 結構，含有這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 所表示的日期值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDecimal" />，包含這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 的值。</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlDouble" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlDouble" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 的數值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlGuid" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 結構，其 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 為這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構所表示的 Guid。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt16" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt16" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 的數值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt32" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt32" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 的數值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlInt64" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlInt64" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 的數值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlMoney" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlMoney" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 的數值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary>將這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構轉換成 <see cref="T:System.Data.SqlTypes.SqlSingle" />。</summary>
      <returns>新的 <see cref="T:System.Data.SqlTypes.SqlSingle" />，等於這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 的數值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary>將 <see cref="T:System.Data.SqlTypes.SqlString" /> 物件轉換成 <see cref="T:System.String" />。</summary>
      <returns>
        <see cref="T:System.String" />，具有與這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構相同的值。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary>取得存放在這個 <see cref="T:System.Data.SqlTypes.SqlString" /> 結構中的字串。這個屬性是唯讀的。</summary>
      <returns>已儲存的字串。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">字串的值是 <see cref="F:System.Data.SqlTypes.SqlString.Null" />。</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary>將某一個值設定成會截斷該值的 <see cref="N:System.Data.SqlTypes" /> 結構時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary>初始化 <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和 <see cref="T:System.Exception" /> 的參考，初始化 <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
      <param name="e">內部 <see cref="T:System.Exception" /> 的參考。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary>
        <see cref="N:System.Data.SqlTypes" /> 的基底例外狀況 (Exception) 類別。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary>初始化 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和造成這個例外狀況原因的內部例外狀況參考，初始化 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 類別的新執行個體。</summary>
      <param name="message">說明例外狀況的訊息。這個建構函式的呼叫端必須確保這個字串已經為目前系統的文化特性當地語系化。</param>
      <param name="e">導致目前例外狀況的例外。如果 <paramref name="innerException" /> 參數不是 null，則目前的例外狀況會在處理內部例外的 catch 區塊中引發。</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary>表示存放在伺服器或從伺服器擷取的 XML 資料。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary>建立新的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary>建立新的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 執行個體，從提供的 <see cref="T:System.IO.Stream" /> 衍生執行個體提供 XML 值。</summary>
      <param name="value">
        <see cref="T:System.IO.Stream" /> 衍生的執行個體 (例如 <see cref="T:System.IO.FileStream" />)，從其中載入 <see cref="T:System.Data.SqlTypes.SqlXml" /> 執行個體的 XML 內容。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary>建立新的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 執行個體，並使它與提供的 <see cref="T:System.Xml.XmlReader" /> 內容產生關聯。</summary>
      <param name="value">
        <see cref="T:System.Xml.XmlReader" /> 衍生類別執行個體，用來當做新的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 執行個體之值。</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary>取得這個 <see cref="T:System.Data.SqlTypes.SqlXml" /> 之 XML 內容的值做為 <see cref="T:System.Xml.XmlReader" />。</summary>
      <returns>包含 XML 內容的 <see cref="T:System.Xml.XmlReader" /> 衍生執行個體。實際型別會因伺服器在內部表示資訊的方式而異 (例如，傳回值可能是 <see cref="T:System.Xml.XmlTextReader" />)。</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">嘗試在 <see cref="T:System.Data.SqlTypes.SqlXml" /> 的 null 執行個體上存取這個屬性。</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary>指出這個執行個體是否表示 null 的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 值。</summary>
      <returns>如果 Value 為 null，則為 true。否則為 false。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary>表示 <see cref="T:System.Data.SqlTypes.SqlXml" /> 型別的 null 執行個體。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 型別的 null 執行個體。</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary>取得這個 <see cref="T:System.Data.SqlTypes.SqlXml" /> 執行個體的 XML 內容字串表示。</summary>
      <returns>XML 內容的字串表示。</returns>
    </member>
  </members>
</doc>