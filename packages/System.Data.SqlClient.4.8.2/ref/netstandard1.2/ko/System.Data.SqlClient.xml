<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.SqlClient</name>
  </assembly>
  <members>
    <member name="T:Microsoft.SqlServer.Server.SqlDataRecord">
      <summary>데이터의 단일 행과 해당 메타데이터를 나타냅니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.#ctor(Microsoft.SqlServer.Server.SqlMetaData[])">
      <summary>인수로 전달된 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 개체의 배열에 따른 스키마를 사용하여 새 <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 인스턴스를 초기화합니다.</summary>
      <param name="metaData">
        <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />의 각 열을 설명하는 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 개체의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="metaData" />은 null입니다. </exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount">
      <summary>데이터 행의 열 수를 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>데이터 행의 열 수(정수)입니다.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetBoolean(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Boolean" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Boolean" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" />로 지정된 열이 null인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetByte(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Byte" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Byte" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" />로 지정된 열이 null인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Byte" /> 개체의 배열로 가져옵니다.</summary>
      <returns>복사한 바이트 수입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="fieldOffset">바이트 검색을 시작할 필드 값에 대한 오프셋입니다.</param>
      <param name="buffer">바이트를 복사할 대상 버퍼입니다.</param>
      <param name="bufferOffset">바이트 복사를 시작할 버퍼에 대한 오프셋입니다.</param>
      <param name="length">버퍼에 복사할 바이트 수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" />로 지정된 열이 null인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetChar(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Char" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Char" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" />로 지정된 열이 null인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Char" /> 개체의 배열로 가져옵니다.</summary>
      <returns>복사한 문자 수입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="fieldOffset">문자 검색을 시작할 필드 값에 대한 오프셋입니다.</param>
      <param name="buffer">문자를 복사할 대상 버퍼입니다.</param>
      <param name="bufferOffset">문자 복사를 시작할 버퍼에 대한 오프셋입니다.</param>
      <param name="length">버퍼에 복사할 문자 수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" />로 지정된 열이 null인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDataTypeName(System.Int32)">
      <summary>서수 인수로 지정된 열의 데이터 형식 이름을 반환합니다.</summary>
      <returns>열의 데이터 형식이 들어 있는 <see cref="T:System.String" />입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우 </exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDateTime(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.DateTime" />으로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.DateTime" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" />로 지정된 열이 null인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDateTimeOffset(System.Int32)">
      <summary>지정된 열의 데이터를 <see cref="T:System.DateTimeOffset" />으로 반환합니다.</summary>
      <returns>지정된 열을 <see cref="T:System.DateTimeOffset" />으로 나타낸 값입니다.</returns>
      <param name="ordinal">열 번호를 나타내는 0부터 시작하는 서수입니다.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDecimal(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Decimal" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Decimal" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" />로 지정된 열이 null인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetDouble(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Double" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Double" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" />로 지정된 열이 null인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetFieldType(System.Int32)">
      <summary>
        <paramref name="ordinal" /> 인수로 지정된 열의 SQL Server 형식에 매핑되는 CLR(공용 언어 런타임) 형식을 나타내는 <see cref="T:System.Type" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Type" /> 개체인 열 형식입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우 </exception>
      <exception cref="T:System.TypeLoadException">열의 형식이 호출 응용 프로그램 도메인에 사용할 수 없는 사용자 정의 형식인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">열의 형식이 호출 응용 프로그램 도메인에 사용할 수 없는 사용자 정의 형식인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetFloat(System.Int32)">
      <summary>서수로 지정된 열의 값을 float으로 가져옵니다.</summary>
      <returns>float 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" />로 지정된 열이 null인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetGuid(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Guid" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Guid" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" />로 지정된 열이 null인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt16(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Int16" />으로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Int16" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" />로 지정된 열이 null인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt32(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Int32" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Int32" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" />로 지정된 열이 null인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetInt64(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Int64" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Int64" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <paramref name="ordinal" />로 지정된 열이 null인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetName(System.Int32)">
      <summary>서수 인수로 지정된 열의 이름을 반환합니다.</summary>
      <returns>열 이름이 들어 있는 <see cref="T:System.String" />입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우 </exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetOrdinal(System.String)">
      <summary>열 이름으로 지정된 열 서수를 반환합니다.</summary>
      <returns>열의 0부터 시작하는 서수(정수)입니다.</returns>
      <param name="name">찾을 열의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" />가 null입니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException">열 이름을 찾을 수 없는 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBinary(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlBinary" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBoolean(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlByte(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlByte" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlBytes(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlBytes" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlChars(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlChars" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDateTime(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlDateTime" />으로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDecimal(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlDouble(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlFieldType(System.Int32)">
      <summary>열의 SQL Server 형식에 매핑되는 형식(<see cref="N:System.Data.SqlTypes" />에 SQL Server 형식으로 정의됨)을 나타내는 <see cref="T:System.Type" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Type" /> 개체인 열 형식입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우 </exception>
      <exception cref="T:System.TypeLoadException">열의 형식이 호출 응용 프로그램 도메인에 사용할 수 없는 사용자 정의 형식인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">열의 형식이 호출 응용 프로그램 도메인에 사용할 수 없는 사용자 정의 형식인 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlGuid(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlGuid" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt16(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt32(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlInt64(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMetaData(System.Int32)">
      <summary>열 서수로 지정된 열의 메타데이터를 설명하는 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 개체인 열 메타데이터입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlMoney(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlSingle(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlString(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlString" />으로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValue(System.Int32)">
      <summary>열 서수로 지정되고 SQL Server 형식으로 표시되는 열에 저장된 데이터 값을 반환합니다.</summary>
      <returns>SQL Server 형식으로 표시되는 열의 값으로, <see cref="T:System.Object" /> 형식으로 되어 있습니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlValues(System.Object[])">
      <summary>배열의 레코드에서 SQL Server 형식으로 표시되는 모든 열의 값을 반환합니다.</summary>
      <returns>복사된 열 수를 나타내는 <see cref="T:System.Int32" />입니다.</returns>
      <param name="values">열 값을 복사할 배열입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" />가 null입니다.</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetSqlXml(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.Data.SqlTypes.SqlXml" />로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetString(System.Int32)">
      <summary>서수로 지정된 열의 값을 <see cref="T:System.String" />으로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.String" /> 형식의 열 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetTimeSpan(System.Int32)">
      <summary>지정된 열의 데이터를 <see cref="T:System.TimeSpan" />으로 반환합니다.</summary>
      <returns>
        <see cref="T:System.TimeSpan" />으로 나타낸 지정된 열의 값입니다.</returns>
      <param name="ordinal">열 번호를 나타내는 0부터 시작하는 서수입니다.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetValue(System.Int32)">
      <summary>서수 인수로 지정된 열의 CLR(공용 언어 런타임) 형식 값을 반환합니다.</summary>
      <returns>서수로 지정된 열의 CLR 형식 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.GetValues(System.Object[])">
      <summary>배열의 레코드에서 CLR(공용 언어 런타임) 형식으로 표시되는 모든 열의 값을 반환합니다.</summary>
      <returns>복사된 열 수를 나타내는 <see cref="T:System.Int32" />입니다.</returns>
      <param name="values">열 값을 복사할 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" />가 null입니다.</exception>
      <exception cref="T:System.InvalidCastException">형식이 일치하지 않는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.IsDBNull(System.Int32)">
      <summary>열 서수 매개 변수로 지정된 열이 null인 경우 true를 반환합니다.</summary>
      <returns>열이 null이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.Item(System.Int32)">
      <summary>열 <paramref name="ordinal" /> 인수로 지정된 열의 CLR(공용 언어 런타임) 형식 값을 가져옵니다.</summary>
      <returns>
        <paramref name="ordinal" />로 지정된 열의 CLR 형식 값입니다.</returns>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlDataRecord.Item(System.String)">
      <summary>열 <paramref name="name" /> 인수로 지정된 열의 CLR(공용 언어 런타임) 형식 값을 가져옵니다.</summary>
      <returns>
        <paramref name="name" />으로 지정된 열의 CLR 형식 값입니다.</returns>
      <param name="name">열의 이름입니다.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetBoolean(System.Int32,System.Boolean)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Boolean" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetByte(System.Int32,System.Byte)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Byte" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>열에 저장된 데이터를 지정한 <see cref="T:System.Byte" /> 값의 배열로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="fieldOffset">바이트 복사를 시작할 필드 값에 대한 오프셋입니다.</param>
      <param name="buffer">바이트를 복사할 대상 버퍼입니다.</param>
      <param name="bufferOffset">바이트 복사를 시작할 버퍼에 대한 오프셋입니다.</param>
      <param name="length">버퍼에서 복사할 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetChar(System.Int32,System.Char)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Char" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Char" /> 값의 배열로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="fieldOffset">문자 복사를 시작할 필드 값에 대한 오프셋입니다.</param>
      <param name="buffer">문자를 복사할 대상 버퍼입니다.</param>
      <param name="bufferOffset">문자 복사를 시작할 버퍼에 대한 오프셋입니다.</param>
      <param name="length">버퍼에서 복사할 문자 수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDateTime(System.Int32,System.DateTime)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.DateTime" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDateTimeOffset(System.Int32,System.DateTimeOffset)">
      <summary>지정된 열의 값을 <see cref="T:System.DateTimeOffset" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDBNull(System.Int32)">
      <summary>지정된 열의 값을 <see cref="T:System.DBNull" />로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDecimal(System.Int32,System.Decimal)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Decimal" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetDouble(System.Int32,System.Double)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Double" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetFloat(System.Int32,System.Single)">
      <summary>열에 저장된 데이터를 지정된 float 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetGuid(System.Int32,System.Guid)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Guid" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt16(System.Int32,System.Int16)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Int16" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt32(System.Int32,System.Int32)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Int32" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetInt64(System.Int32,System.Int64)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Int64" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlBytes(System.Int32,System.Data.SqlTypes.SqlBytes)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlChars(System.Int32,System.Data.SqlTypes.SqlChars)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlChars" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlString" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetSqlXml(System.Int32,System.Data.SqlTypes.SqlXml)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.Data.SqlTypes.SqlXml" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetString(System.Int32,System.String)">
      <summary>열에 저장된 데이터를 지정된 <see cref="T:System.String" /> 값으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetTimeSpan(System.Int32,System.TimeSpan)">
      <summary>지정된 열의 값을 <see cref="T:System.TimeSpan" />으로 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">전달된 <paramref name="ordinal" />이 음수인 경우</exception>
      <exception cref="T:System.ArgumentException">전달된 <see cref="T:System.TimeSpan" /> 값의 길이가 24시간보다 긴 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValue(System.Int32,System.Object)">
      <summary>열 서수로 지정된 열에 대해 CLR(공용 언어 런타임) 형식으로 표시되는 새 값을 설정합니다.</summary>
      <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
      <param name="value">지정한 열의 새 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ordinal" />이 0보다 작거나 열 수(즉, <see cref="P:Microsoft.SqlServer.Server.SqlDataRecord.FieldCount" />)보다 큰 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValues(System.Object[])">
      <summary>
        <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />의 모든 열에 새 값을 설정합니다.이러한 값은 CLR(공용 언어 런타임) 형식으로 나타냅니다.</summary>
      <returns>정수로 설정된 열 값의 수입니다.</returns>
      <param name="values">
        <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 인스턴스에 대해 <see cref="T:System.Object" /> 참조로 boxing된 CLR 형식으로 표시되는 새 값의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">값의 크기가 <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 인스턴스의 열 수와 일치하지 않는 경우</exception>
    </member>
    <member name="T:Microsoft.SqlServer.Server.SqlMetaData">
      <summary>
        <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 개체의 매개 변수와 열에서 메타데이터 정보를 지정하고 검색합니다.이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)">
      <summary>지정한 열 이름과 형식을 사용하여 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">열의 이름입니다.</param>
      <param name="dbType">매개 변수 또는 열의 SQL Server 형식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" />은 null입니다.</exception>
      <exception cref="T:System.ArgumentException">허용되지 않는 SqlDbType이 <paramref name="dbType" />으로 생성자에 전달된 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>지정한 열 이름과 기본 서버를 사용하여 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 클래스의 새 인스턴스를 초기화합니다.이러한 생성자 형식은 열이 테이블 반환 매개 변수, 열의 정렬 순서 및 정렬 열의 서수에서 고유한지 여부를 지정할 수 있도록 허용함으로써 테이블 반환 매개 변수를 지원합니다.</summary>
      <param name="name">열의 이름입니다.</param>
      <param name="dbType">매개 변수 또는 열의 SQL Server 형식입니다.</param>
      <param name="useServerDefault">이 열에서 기본 서버 값을 사용해야 하는지 여부를 지정합니다.</param>
      <param name="isUniqueKey">테이블 반환 매개 변수의 열이 고유한지 여부를 지정합니다.</param>
      <param name="columnSortOrder">열의 정렬 순서를 지정합니다.</param>
      <param name="sortOrdinal">정렬 열의 서수를 지정합니다.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)">
      <summary>지정한 열 이름, 형식, 전체 자릿수 및 소수 자릿수를 사용하여 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">매개 변수 또는 열의 이름입니다.</param>
      <param name="dbType">매개 변수 또는 열의 SQL Server 형식입니다.</param>
      <param name="precision">매개 변수 또는 열의 전체 자릿수입니다.</param>
      <param name="scale">매개 변수 또는 열의 소수 자릿수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" />은 null입니다. </exception>
      <exception cref="T:System.ArgumentException">허용되지 않는 SqlDbType이 <paramref name="dbType" />으로 생성자에 전달되었거나, <paramref name="scale" />이 <paramref name="precision" />보다 큰 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>지정한 열 이름, 형식, 전체 자릿수, 소수 자릿수 및 서버 기본값을 사용하여 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 클래스의 새 인스턴스를 초기화합니다.이러한 생성자 형식은 열이 테이블 반환 매개 변수, 열의 정렬 순서 및 정렬 열의 서수에서 고유한지 여부를 지정할 수 있도록 허용함으로써 테이블 반환 매개 변수를 지원합니다.</summary>
      <param name="name">열의 이름입니다.</param>
      <param name="dbType">매개 변수 또는 열의 SQL Server 형식입니다.</param>
      <param name="precision">매개 변수 또는 열의 전체 자릿수입니다.</param>
      <param name="scale">매개 변수 또는 열의 소수 자릿수입니다.</param>
      <param name="useServerDefault">이 열에서 기본 서버 값을 사용해야 하는지 여부를 지정합니다.</param>
      <param name="isUniqueKey">테이블 반환 매개 변수의 열이 고유한지 여부를 지정합니다.</param>
      <param name="columnSortOrder">열의 정렬 순서를 지정합니다.</param>
      <param name="sortOrdinal">정렬 열의 서수를 지정합니다.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)">
      <summary>지정한 열 이름, 형식 및 최대 길이를 사용하여 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">열의 이름입니다.</param>
      <param name="dbType">매개 변수 또는 열의 SQL Server 형식입니다.</param>
      <param name="maxLength">지정한 형식의 최대 길이입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" />은 null입니다. </exception>
      <exception cref="T:System.ArgumentException">허용되지 않는 SqlDbType이 <paramref name="dbType" />으로 생성자에 전달된 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>지정한 열 이름, 형식, 최대 길이 및 서버 기본값을 사용하여 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 클래스의 새 인스턴스를 초기화합니다.이러한 생성자 형식은 열이 테이블 반환 매개 변수, 열의 정렬 순서 및 정렬 열의 서수에서 고유한지 여부를 지정할 수 있도록 허용함으로써 테이블 반환 매개 변수를 지원합니다.</summary>
      <param name="name">열의 이름입니다.</param>
      <param name="dbType">매개 변수 또는 열의 SQL Server 형식입니다.</param>
      <param name="maxLength">지정한 형식의 최대 길이입니다.</param>
      <param name="useServerDefault">이 열에서 기본 서버 값을 사용해야 하는지 여부를 지정합니다.</param>
      <param name="isUniqueKey">테이블 반환 매개 변수의 열이 고유한지 여부를 지정합니다.</param>
      <param name="columnSortOrder">열의 정렬 순서를 지정합니다.</param>
      <param name="sortOrdinal">정렬 열의 서수를 지정합니다.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)">
      <summary>지정한 열 이름, 형식, 최대 길이, 전체 자릿수, 소수 자릿수, 로캘 ID, 비교 옵션 및 UDT(사용자 정의 형식)를 사용하여 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">열의 이름입니다.</param>
      <param name="dbType">매개 변수 또는 열의 SQL Server 형식입니다.</param>
      <param name="maxLength">지정한 형식의 최대 길이입니다.</param>
      <param name="precision">매개 변수 또는 열의 전체 자릿수입니다.</param>
      <param name="scale">매개 변수 또는 열의 소수 자릿수입니다.</param>
      <param name="locale">매개 변수 또는 열의 로캘 ID입니다.</param>
      <param name="compareOptions">매개 변수 또는 열의 비교 규칙입니다.</param>
      <param name="userDefinedType">UDT를 가리키는 <see cref="T:System.Type" /> 인스턴스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" />은 null입니다. </exception>
      <exception cref="T:System.ArgumentException">허용되지 않는 SqlDbType이 <paramref name="dbType" />으로 생성자에 전달되었거나 <paramref name="userDefinedType" />이 <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />가 선언되지 않은 형식을 가리키는 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>지정한 열 이름, 형식, 최대 길이, 전체 자릿수, 소수 자릿수, 로캘 ID, 비교 옵션 및 UDT(사용자 정의 형식)를 사용하여 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 클래스의 새 인스턴스를 초기화합니다.이러한 생성자 형식은 열이 테이블 반환 매개 변수, 열의 정렬 순서 및 정렬 열의 서수에서 고유한지 여부를 지정할 수 있도록 허용함으로써 테이블 반환 매개 변수를 지원합니다.</summary>
      <param name="name">열의 이름입니다.</param>
      <param name="dbType">매개 변수 또는 열의 SQL Server 형식입니다.</param>
      <param name="maxLength">지정한 형식의 최대 길이입니다.</param>
      <param name="precision">매개 변수 또는 열의 전체 자릿수입니다.</param>
      <param name="scale">매개 변수 또는 열의 소수 자릿수입니다.</param>
      <param name="localeId">매개 변수 또는 열의 로캘 ID입니다.</param>
      <param name="compareOptions">매개 변수 또는 열의 비교 규칙입니다.</param>
      <param name="userDefinedType">UDT를 가리키는 <see cref="T:System.Type" /> 인스턴스입니다.</param>
      <param name="useServerDefault">이 열에서 기본 서버 값을 사용해야 하는지 여부를 지정합니다.</param>
      <param name="isUniqueKey">테이블 반환 매개 변수의 열이 고유한지 여부를 지정합니다.</param>
      <param name="columnSortOrder">열의 정렬 순서를 지정합니다.</param>
      <param name="sortOrdinal">정렬 열의 서수를 지정합니다.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>지정한 열 이름, 형식, 최대 길이, 로캘 및 비교 옵션을 사용하여 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">매개 변수 또는 열의 이름입니다.</param>
      <param name="dbType">매개 변수 또는 열의 SQL Server 형식입니다.</param>
      <param name="maxLength">지정한 형식의 최대 길이입니다. </param>
      <param name="locale">매개 변수 또는 열의 로캘 ID입니다.</param>
      <param name="compareOptions">매개 변수 또는 열의 비교 규칙입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Name" />은 null입니다. </exception>
      <exception cref="T:System.ArgumentException">허용되지 않는 SqlDbType이 <paramref name="dbType" />으로 생성자에 전달된 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>지정한 열 이름, 형식, 최대 길이, 로캘, 비교 옵션 및 서버 기본값을 사용하여 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 클래스의 새 인스턴스를 초기화합니다.이러한 생성자 형식은 열이 테이블 반환 매개 변수, 열의 정렬 순서 및 정렬 열의 서수에서 고유한지 여부를 지정할 수 있도록 허용함으로써 테이블 반환 매개 변수를 지원합니다.</summary>
      <param name="name">열의 이름입니다.</param>
      <param name="dbType">매개 변수 또는 열의 SQL Server 형식입니다.</param>
      <param name="maxLength">지정한 형식의 최대 길이입니다.</param>
      <param name="locale">매개 변수 또는 열의 로캘 ID입니다.</param>
      <param name="compareOptions">매개 변수 또는 열의 비교 규칙입니다.</param>
      <param name="useServerDefault">이 열에서 기본 서버 값을 사용해야 하는지 여부를 지정합니다.</param>
      <param name="isUniqueKey">테이블 반환 매개 변수의 열이 고유한지 여부를 지정합니다.</param>
      <param name="columnSortOrder">열의 정렬 순서를 지정합니다.</param>
      <param name="sortOrdinal">정렬 열의 서수를 지정합니다.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String)">
      <summary>지정한 열 이름, 형식, 데이터베이스 이름, 소유하는 스키마 및 개체 이름을 사용하여 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">열의 이름입니다.</param>
      <param name="dbType">매개 변수 또는 열의 SQL Server 형식입니다.</param>
      <param name="database">형식화된 XML 인스턴스의 XML 스키마 컬렉션에 대한 데이터베이스 이름입니다.</param>
      <param name="owningSchema">형식화된 XML 인스턴스의 XML 스키마 컬렉션에 대한 관계형 스키마 이름입니다.</param>
      <param name="objectName">형식화된 XML 인스턴스의 XML 스키마 컬렉션 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="database" /> 및 <paramref name="owningSchema" />가 null이 아닐 때 <paramref name="Name" />이 null이거나 <paramref name="objectName" />이 null인 경우</exception>
      <exception cref="T:System.ArgumentException">허용되지 않는 SqlDbType이 <paramref name="dbType" />으로 생성자에 전달된 경우</exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Data.SqlClient.SortOrder,System.Int32)">
      <summary>지정한 열 이름, 형식, 데이터베이스 이름, 소유하는 스키마, 개체 이름 및 기본 서버를 사용하여 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 클래스의 새 인스턴스를 초기화합니다.이러한 생성자 형식은 열이 테이블 반환 매개 변수, 열의 정렬 순서 및 정렬 열의 서수에서 고유한지 여부를 지정할 수 있도록 허용함으로써 테이블 반환 매개 변수를 지원합니다.</summary>
      <param name="name">열의 이름입니다.</param>
      <param name="dbType">매개 변수 또는 열의 SQL Server 형식입니다.</param>
      <param name="database">형식화된 XML 인스턴스의 XML 스키마 컬렉션에 대한 데이터베이스 이름입니다.</param>
      <param name="owningSchema">형식화된 XML 인스턴스의 XML 스키마 컬렉션에 대한 관계형 스키마 이름입니다.</param>
      <param name="objectName">형식화된 XML 인스턴스의 XML 스키마 컬렉션 이름입니다.</param>
      <param name="useServerDefault">이 열에서 기본 서버 값을 사용해야 하는지 여부를 지정합니다.</param>
      <param name="isUniqueKey">테이블 반환 매개 변수의 열이 고유한지 여부를 지정합니다.</param>
      <param name="columnSortOrder">열의 정렬 순서를 지정합니다.</param>
      <param name="sortOrdinal">정렬 열의 서수를 지정합니다.</param>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Boolean)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Boolean" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Boolean" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Byte" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Byte" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Byte[])">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Byte" /> 값 배열의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Byte" /> 값 배열 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Char" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Char" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Char[])">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Char" /> 값 배열의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Char" /> 값 배열 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlByte" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlChars" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlString" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Data.SqlTypes.SqlXml)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Data.SqlTypes.SqlXml" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTime)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.DateTime" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.DateTime" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.DateTimeOffset)">
      <summary>메타데이터와 비교하여 지정된 <see cref="T:System.DateTimeOffset" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.DateTimeOffset" /> 값 배열 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Decimal)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Decimal" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Decimal" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Double)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Double" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Double" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Guid)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Guid" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Guid" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int16)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Int16" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Int16" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int32)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Int32" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Int32" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Int64)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Int64" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Int64" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Object)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Object" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Object" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.Single)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.Single" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.Single" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.String)">
      <summary>메타데이터를 기준으로 지정한 <see cref="T:System.String" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.String" /> 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.Adjust(System.TimeSpan)">
      <summary>메타데이터와 비교하여 지정된 <see cref="T:System.TimeSpan" /> 값의 유효성을 검사하고 필요한 경우 이 값을 조정합니다.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> 값 배열 형식의 조정된 값입니다.</returns>
      <param name="value">
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스를 기준으로 유효성을 검사할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />가 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 형식과 일치하지 않거나 <paramref name="value" />를 조정할 수 없는 경우 </exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.CompareOptions">
      <summary>열 또는 매개 변수에 사용되는 비교 규칙을 가져옵니다.</summary>
      <returns>열 또는 매개 변수에 사용되는 <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 형식의 비교 규칙입니다.</returns>
    </member>
    <member name="M:Microsoft.SqlServer.Server.SqlMetaData.InferFromValue(System.Object,System.String)">
      <summary>지정한 개체에서 메타데이터를 유추하고 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스로 반환합니다.</summary>
      <returns>
        <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스 형식의 유추된 메타데이터입니다.</returns>
      <param name="value">메타데이터를 유추하는 데 사용된 개체입니다.</param>
      <param name="name">반환된 <see cref="T:Microsoft.SqlServer.Server.SqlMetaData" /> 인스턴스에 할당된 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null인 경우 </exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.IsUniqueKey">
      <summary>테이블 반환 매개 변수의 열이 고유한지 여부를 나타냅니다.</summary>
      <returns>Boolean 값입니다.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.LocaleId">
      <summary>열 또는 매개 변수의 로캘 ID를 가져옵니다.</summary>
      <returns>열 또는 매개 변수의 로캘 ID로, <see cref="T:System.Int64" /> 형식으로 되어 있습니다.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Max">
      <summary>text, ntext 및 image 데이터 형식의 길이를 가져옵니다. </summary>
      <returns>text, ntext 및 image 데이터 형식의 길이입니다.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.MaxLength">
      <summary>열 또는 매개 변수의 최대 길이를 가져옵니다.</summary>
      <returns>열 또는 매개 변수의 최대 길이로, <see cref="T:System.Int64" /> 형식으로 되어 있습니다.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Name">
      <summary>열 또는 매개 변수의 이름을 가져옵니다.</summary>
      <returns>열 또는 매개 변수의 이름으로, <see cref="T:System.String" /> 형식으로 되어 있습니다.</returns>
      <exception cref="T:System.InvalidOperationException">생성자에 지정된 <paramref name="Name" />이 128자보다 긴 경우 </exception>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Precision">
      <summary>열 또는 매개 변수의 전체 자릿수를 가져옵니다.</summary>
      <returns>열 또는 매개 변수의 전체 자릿수로, <see cref="T:System.Byte" /> 형식으로 되어 있습니다.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.Scale">
      <summary>열 또는 매개 변수의 소수 자릿수를 가져옵니다.</summary>
      <returns>열 또는 매개 변수의 소수 자릿수입니다.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SortOrder">
      <summary>열의 정렬 순서를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SortOrder" /> 개체</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SortOrdinal">
      <summary>정렬 열의 서수를 반환합니다.</summary>
      <returns>정렬 열의 서수입니다.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.SqlDbType">
      <summary>열 또는 매개 변수의 데이터 형식을 가져옵니다.</summary>
      <returns>열 또는 매개 변수의 데이터 형식으로, <see cref="T:System.Data.DbType" /> 형식으로 되어 있습니다.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.TypeName">
      <summary>인스턴스에 표시되는 UDT(사용자 정의 형식) 또는 SQL Server 형식의 세 부분으로 구성된 이름을 가져옵니다.</summary>
      <returns>UDT 또는 SQL Server 형식의 이름으로, <see cref="T:System.String" /> 형식으로 되어 있습니다.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.UseServerDefault">
      <summary>이 열에서 기본 서버 값을 사용해야 하는지 여부를 보고합니다.</summary>
      <returns>Boolean 값입니다.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionDatabase">
      <summary>이 XML 인스턴스의 스키마 컬렉션이 있는 데이터베이스 이름을 가져옵니다.</summary>
      <returns>이 XML 인스턴스의 스키마 컬렉션이 있는 데이터베이스의 이름으로, <see cref="T:System.String" /> 형식으로 되어 있습니다.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionName">
      <summary>이 XML 인스턴스에 대한 스키마 컬렉션의 이름을 가져옵니다.</summary>
      <returns>이 XML 인스턴스의 스키마 컬렉션 이름으로, <see cref="T:System.String" /> 형식으로 되어 있습니다.</returns>
    </member>
    <member name="P:Microsoft.SqlServer.Server.SqlMetaData.XmlSchemaCollectionOwningSchema">
      <summary>이 XML 인스턴스의 스키마 컬렉션이 있는 소유하는 관계형 스키마를 가져옵니다.</summary>
      <returns>이 XML 인스턴스의 스키마 컬렉션이 있는 소유하는 관계형 스키마로, <see cref="T:System.String" /> 형식으로 되어 있습니다.</returns>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameter" />에 사용할 필드, 속성의 SQL Server 데이터 형식을 지정합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary>
        <see cref="T:System.Int64" />.64비트 부호 있는 정수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary>
        <see cref="T:System.Byte" /> 형식의 <see cref="T:System.Array" />입니다.범위가 1바이트에서 8,000바이트까지인 이진 데이터의 고정 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary>
        <see cref="T:System.Boolean" />.0, 1 또는 null일 수 있는 부호 없는 숫자 값입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary>
        <see cref="T:System.String" />.범위가 1자에서 8,000자까지이고 유니코드가 아닌 문자의 고정 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Date">
      <summary>값 범위가 서기 1년 1월 1일에서 서기 9999년 12월 31일 사이인 날짜 데이터입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary>
        <see cref="T:System.DateTime" />.3.33밀리초의 정확성으로 값의 범위가 1753년 1월 1일에서 9999년 12월 31일까지인 날짜 및 시간 데이터입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime2">
      <summary>날짜 및 시간 데이터입니다.날짜 값 범위는 서기 1년 1월 1일에서 서기 9999년 12월 31일 사이입니다.Time 값 범위는 00:00:00부터 23:59:59.9999999까지이며 정확도는 100나노초입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTimeOffset">
      <summary>표준 시간대를 고려한 날짜 및 시간 데이터입니다.날짜 값 범위는 서기 1년 1월 1일에서 서기 9999년 12월 31일 사이입니다.Time 값 범위는 00:00:00부터 23:59:59.9999999까지이며 정확도는 100나노초입니다.표준 시간대 값의 범위는 -14:00에서 +14:00 사이입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary>
        <see cref="T:System.Decimal" />.-10 38 -1과 10 38 -1 사이의 고정 전체 자릿수 및 소수 자릿수 값입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary>
        <see cref="T:System.Double" />.범위가 -1.79E +308에서 1.79E +308까지인 부동 소수점 숫자입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary>
        <see cref="T:System.Byte" /> 형식의 <see cref="T:System.Array" />입니다.범위가 0바이트에서 2 31 -1(또는 2,147,483,647)바이트까지인 이진 데이터의 가변 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary>
        <see cref="T:System.Int32" />.32비트 부호 있는 정수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary>
        <see cref="T:System.Decimal" />.정확성이 통화 단위의 10000분의 1이고 범위가 -2 63(또는 -922,337,203,685,477.5808)에서 2 63 -1(또는 +922,337,203,685,477.5807)까지인 통화 값입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary>
        <see cref="T:System.String" />.범위가 1자에서 4,000자까지인 유니코드 문자의 고정 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary>
        <see cref="T:System.String" />.최대 길이가 2 30 - 1(또는 1,073,741,823)자인 유니코드 데이터의 가변 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary>
        <see cref="T:System.String" />.범위가 1자에서 4,000자까지인 유니코드 문자의 가변 길이 스트림입니다.문자열이 4,000자보다 더 큰 경우 암시적 변환이 실패합니다.4,000자보다 더 긴 문자열로 작업할 경우 개체를 명시적으로 설정합니다.데이터 열이 nvarchar(max)일 경우 <see cref="F:System.Data.SqlDbType.NVarChar" />를 사용합니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary>
        <see cref="T:System.Single" />.범위가 -3.40E +38에서 3.40E +38까지인 부동 소수점 숫자입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary>
        <see cref="T:System.DateTime" />.1분의 정확성으로 값의 범위가 1900년 1월 1일에서 2079년 6월 6일까지인 날짜 및 시간 데이터입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary>
        <see cref="T:System.Int16" />.16비트 부호 있는 정수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary>
        <see cref="T:System.Decimal" />.통화 단위의 10000분의 1 정확성으로 범위가 -214,748.3648에서 +214,748.3647까지인 통화 값입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Structured">
      <summary>테이블 반환 매개 변수에 들어 있는 구조적 데이터를 지정하기 위한 특수 데이터 형식입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary>
        <see cref="T:System.String" />.최대 길이가 2 31 -1(또는 2,147,483,647)자이고 유니코드가 아닌 데이터의 가변 길이 스트림입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Time">
      <summary>24시간제 시간 데이터입니다.Time 값 범위는 00:00:00부터 23:59:59.9999999까지이며 정확도는 100나노초입니다.SQL Server time 값에 해당합니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary>
        <see cref="T:System.Byte" /> 형식의 <see cref="T:System.Array" />입니다.데이터베이스 내에서 고유한 자동 생성되는 이진 숫자입니다.timestamp는 일반적으로 버전이 표시되는 테이블 행에 대한 메커니즘으로 사용됩니다.저장소 크기는 8바이트입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary>
        <see cref="T:System.Byte" />.8비트 부호 없는 정수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Udt">
      <summary>SQL Server 사용자 정의 형식(UDT)입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary>
        <see cref="T:System.Guid" />.GUID(Globally Unique IDentifier)입니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary>
        <see cref="T:System.Byte" /> 형식의 <see cref="T:System.Array" />입니다.범위가 1바이트에서 8,000바이트까지인 이진 데이터의 가변 길이 스트림입니다.바이트 배열이 8.000바이트보다 더 큰 경우 암시적 변환이 실패합니다.8.000바이트보다 더 큰 바이트 배열로 작업할 경우 개체를 명시적으로 설정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary>
        <see cref="T:System.String" />.범위가 1문자에서 8,000문자까지인 비유니코드 문자의 가변 길이 스트림입니다.데이터 열이 varchar(max)일 경우 <see cref="F:System.Data.SqlDbType.VarChar" />를 사용합니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary>
        <see cref="T:System.Object" />.SQL Server 값 Empty 및 Null뿐만 아니라 숫자, 문자열, 이진 데이터 또는 날짜 데이터를 포함할 수 있는 특수 데이터 형식으로 다른 데이터 형식이 선언되지 않으면 이 형식이 사용됩니다.</summary>
    </member>
    <member name="F:System.Data.SqlDbType.Xml">
      <summary>XML 값입니다.<see cref="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" /> 메서드나 <see cref="P:System.Data.SqlTypes.SqlXml.Value" /> 속성을 사용하여 XML을 문자열로 가져오거나 <see cref="M:System.Data.SqlTypes.SqlXml.CreateReader" /> 메서드를 호출하여 XML을 <see cref="T:System.Xml.XmlReader" />로 가져옵니다.</summary>
    </member>
    <member name="T:System.Data.StatementCompletedEventArgs">
      <summary>
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 이벤트에 대한 추가 정보를 제공합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <summary>
        <see cref="T:System.Data.StatementCompletedEventArgs" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="recordCount">
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 이벤트를 발생시킨 문의 영향을 받는 행의 수를 나타냅니다.</param>
    </member>
    <member name="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <summary>
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 이벤트를 발생시킨 문의 영향을 받는 행의 수를 나타냅니다.</summary>
      <returns>영향 받는 행의 수입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.StatementCompletedEventHandler">
      <summary>
        <see cref="E:System.Data.SqlClient.SqlCommand.StatementCompleted" /> 이벤트의 이벤트 처리기에 대한 대리자 형식입니다.</summary>
      <param name="sender">이벤트 소스입니다.</param>
      <param name="e">이벤트 데이터입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.ApplicationIntent">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent" />의 값을 지정합니다.가능한 값은 ReadWrite과 ReadOnly입니다.</summary>
    </member>
    <member name="F:System.Data.SqlClient.ApplicationIntent.ReadOnly">
      <summary>서버에 연결할 때 응용 프로그램 작업 부하 유형이 읽기 전용입니다.</summary>
    </member>
    <member name="F:System.Data.SqlClient.ApplicationIntent.ReadWrite">
      <summary>서버에 연결할 때 응용 프로그램 작업 부하 유형이 읽기/쓰기입니다.</summary>
    </member>
    <member name="T:System.Data.SqlClient.SortOrder">
      <summary>데이터 행이 정렬되는 방식을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SortOrder.Ascending">
      <summary>행이 오름차순으로 정렬됩니다.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SortOrder.Descending">
      <summary>행이 내림차순으로 정렬됩니다.</summary>
    </member>
    <member name="F:System.Data.SqlClient.SortOrder.Unspecified">
      <summary>기본값입니다.정렬 순서가 지정되지 않습니다.</summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientFactory">
      <summary>데이터 소스 클래스의 <see cref="N:System.Data.SqlClient" /> 공급자 구현에 대한 인스턴스를 만드는 데 사용되는 메서드의 집합을 나타냅니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateCommand">
      <summary>강력한 형식의 <see cref="T:System.Data.Common.DbCommand" /> 인스턴스를 반환합니다.</summary>
      <returns>강력한 형식의 새 <see cref="T:System.Data.Common.DbCommand" /> 인스턴스입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateConnection">
      <summary>강력한 형식의 <see cref="T:System.Data.Common.DbConnection" /> 인스턴스를 반환합니다.</summary>
      <returns>강력한 형식의 새 <see cref="T:System.Data.Common.DbConnection" /> 인스턴스입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder">
      <summary>강력한 형식의 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 인스턴스를 반환합니다.</summary>
      <returns>강력한 형식의 새 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 인스턴스입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientFactory.CreateParameter">
      <summary>강력한 형식의 <see cref="T:System.Data.Common.DbParameter" /> 인스턴스를 반환합니다.</summary>
      <returns>강력한 형식의 새 <see cref="T:System.Data.Common.DbParameter" /> 인스턴스입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Data.SqlClient.SqlClientFactory.Instance">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlClientFactory" />의 인스턴스를 가져옵니다.이 인스턴스를 사용하여 강력한 형식의 데이터 개체를 검색할 수 있습니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlCommand">
      <summary>SQL Server 데이터베이스에 대해 실행할 Transact-SQL 문이나 저장 프로시저를 나타냅니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
      <summary>쿼리 텍스트를 사용하여 <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="cmdText">쿼리 텍스트입니다. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
      <summary>쿼리의 텍스트와 <see cref="T:System.Data.SqlClient.SqlConnection" />을 사용하여 <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="cmdText">쿼리 텍스트입니다. </param>
      <param name="connection">SQL Server의 인스턴스에 대한 연결을 나타내는 <see cref="T:System.Data.SqlClient.SqlConnection" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
      <summary>쿼리의 텍스트, <see cref="T:System.Data.SqlClient.SqlConnection" />, <see cref="T:System.Data.SqlClient.SqlTransaction" /> 등을 사용하여 <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="cmdText">쿼리 텍스트입니다. </param>
      <param name="connection">SQL Server의 인스턴스에 대한 연결을 나타내는 <see cref="T:System.Data.SqlClient.SqlConnection" />입니다. </param>
      <param name="transaction">
        <see cref="T:System.Data.SqlClient.SqlCommand" />가 실행되는 <see cref="T:System.Data.SqlClient.SqlTransaction" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.Cancel">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlCommand" />의 실행을 취소하려고 시도합니다.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandText">
      <summary>데이터 소스에서 실행할 Transact-SQL 문, 테이블 이름 또는 저장 프로시저를 가져오거나 설정합니다.</summary>
      <returns>실행할 Transact-SQL 문이나 저장 프로시저입니다.기본값은 빈 문자열입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
      <summary>명령 실행을 종료하고 오류를 생성하기 전 대기 시간을 가져오거나 설정합니다.</summary>
      <returns>명령이 실행될 때까지 대기하는 시간(초)입니다.기본값은 30초입니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandType">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 속성이 해석될 방법을 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.CommandType" /> 값 중 하나입니다.기본값은 Text입니다.</returns>
      <exception cref="T:System.ArgumentException">The value was not a valid <see cref="T:System.Data.CommandType" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Connection">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlCommand" />의 이 인스턴스에서 사용되는 <see cref="T:System.Data.SqlClient.SqlConnection" />을 가져오거나 설정합니다.</summary>
      <returns>데이터 소스와의 연결입니다.기본값은 null입니다.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> property was changed while the command was enlisted in a transaction.. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.CreateParameter">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체의 새 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible">
      <summary>명령 개체를 Windows Form 디자이너 컨트롤에서 표시할지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>컨트롤에 명령 개체를 표시할지를 나타내는 값입니다.기본값은 true입니다.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
      <summary>연결에 대한 Transact-SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</summary>
      <returns>영향을 받은 행 수입니다.</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 스트리밍 지원.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row.This exception is not generated when you are using Microsoft .NET Framework version 1.0.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
      <summary>연결에 대해 Transact-SQL 문을 실행하고 영향을 받는 행의 수를 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />의 비동기 버전입니다.취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <param name="cancellationToken">취소 명령입니다.</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 스트리밍 지원.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고, <see cref="T:System.Data.SqlClient.SqlDataReader" />를 빌드합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlDataReader" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 스트리밍 지원.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row.This exception is not generated when you are using Microsoft .NET Framework version 1.0.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.InvalidOperationException">The current state of the connection is closed.<see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> requires an open <see cref="T:System.Data.SqlClient.SqlConnection" />.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고, <see cref="T:System.Data.CommandBehavior" /> 값 중 하나를 사용하여 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 빌드합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlDataReader" /> 개체입니다.</returns>
      <param name="behavior">
        <see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 스트리밍 지원.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 작성하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />의 비동기 버전입니다.예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 스트리밍 지원.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 빌드하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />의 비동기 버전입니다.예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <param name="behavior">문 실행 및 데이터 검색을 위한 옵션입니다.o Default로 설정하면 <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />는 전체 작업을 반환하기 전에 전체 행을 읽습니다.</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 스트리밍 지원.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 빌드하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />의 비동기 버전입니다.취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <param name="behavior">문 실행 및 데이터 검색을 위한 옵션입니다.o Default로 설정하면 <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />는 전체 작업을 반환하기 전에 전체 행을 읽습니다.</param>
      <param name="cancellationToken">취소 명령입니다.</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 스트리밍 지원.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 빌드하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />의 비동기 버전입니다.취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <param name="cancellationToken">취소 명령입니다.</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 스트리밍 지원.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.ArgumentException">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
      <summary>쿼리를 실행하고 쿼리에서 반환된 결과 집합에서 첫 번째 행의 첫 번째 열을 반환합니다.다른 열이나 행은 무시됩니다.</summary>
      <returns>결과 집합에서 첫 번째 행의 첫 번째 열이거나, 결과 집합이 비어 있을 경우 null 참조(Visual Basic에서는 Nothing)입니다.최대 2,033자를 반환합니다.</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 스트리밍 지원.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row.This exception is not generated when you are using Microsoft .NET Framework version 1.0.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
      <summary>쿼리를 비동기적으로 실행하고 쿼리에서 반환된 결과 집합의 첫 번째 행의 첫 번째 열을 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />의 비동기 버전입니다.다른 열이나 행은 무시됩니다.취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <param name="cancellationToken">취소 명령입니다.</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 스트리밍 지원.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고, <see cref="T:System.Xml.XmlReader" /> 개체를 빌드합니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlReader" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 스트리밍 지원.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">An exception occurred while executing the command against a locked row.This exception is not generated when you are using Microsoft .NET Framework version 1.0.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Xml.XmlReader" /> 개체를 작성하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />의 비동기 버전입니다.예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 스트리밍 지원.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Xml.XmlReader" /> 개체를 빌드하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />의 비동기 버전입니다.취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <param name="cancellationToken">취소 명령입니다.</param>
      <exception cref="T:System.InvalidCastException">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Binary or VarBinary was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.For more information about streaming, see SqlClient 스트리밍 지원.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Char, NChar, NVarChar, VarChar, or  Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than Xml was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</exception>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.Context Connection=true is specified in the connection string.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server returned an error while executing the command text.A timeout occurred during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.IO.IOException">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.For more information about streaming, see SqlClient 스트리밍 지원.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Parameters">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />을 가져옵니다.</summary>
      <returns>Transact-SQL 문이나 저장 프로시저의 매개 변수입니다.기본값은 빈 컬렉션입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.Prepare">
      <summary>SQL Server 인스턴스의 명령에 사용할 버전을 만듭니다.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Data.SqlClient.SqlCommand.StatementCompleted">
      <summary>Transact-SQL 문의 실행이 완료될 때 발생합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Transaction">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlCommand" />가 실행되는 <see cref="T:System.Data.SqlClient.SqlTransaction" />을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlTransaction" />입니다.기본값은 null입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
      <summary>
        <see cref="T:System.Data.Common.DbDataAdapter" />의 Update 메서드에 의해 사용될 때 명령 결과가 <see cref="T:System.Data.DataRow" />에 적용되는 방법을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.UpdateRowSource" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlConnection">
      <summary>SQL Server 데이터베이스에 대한 열린 연결을 나타냅니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.#ctor">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
      <summary>연결 문자열을 포함한 문자열이 주어지면, <see cref="T:System.Data.SqlClient.SqlConnection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="connectionString">SQL Server 데이터베이스를 여는 데 사용되는 연결입니다.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
      <summary>데이터베이스 트랜잭션을 시작합니다.</summary>
      <returns>새 트랜잭션을 나타내는 개체입니다.</returns>
      <exception cref="T:System.Data.SqlClient.SqlException">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</exception>
      <exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>지정된 격리 수준으로 데이터베이스 트랜잭션을 시작합니다.</summary>
      <returns>새 트랜잭션을 나타내는 개체입니다.</returns>
      <param name="iso">트랜잭션이 실행되어야 하는 격리 수준입니다. </param>
      <exception cref="T:System.Data.SqlClient.SqlException">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</exception>
      <exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
      <summary>지정된 격리 수준과 트랜잭션 이름으로 데이터베이스 트랜잭션을 시작합니다.</summary>
      <returns>새 트랜잭션을 나타내는 개체입니다.</returns>
      <param name="iso">트랜잭션이 실행되어야 하는 격리 수준입니다. </param>
      <param name="transactionName">트랜잭션 이름입니다. </param>
      <exception cref="T:System.Data.SqlClient.SqlException">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</exception>
      <exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
      <summary>지정된 트랜잭션 이름으로 데이터베이스 트랜잭션을 시작합니다.</summary>
      <returns>새 트랜잭션을 나타내는 개체입니다.</returns>
      <param name="transactionName">트랜잭션 이름입니다. </param>
      <exception cref="T:System.Data.SqlClient.SqlException">Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</exception>
      <exception cref="T:System.InvalidOperationException">Parallel transactions are not supported. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
      <summary>열려 있는 <see cref="T:System.Data.SqlClient.SqlConnection" />의 현재 데이터베이스를 변경합니다.</summary>
      <param name="database">현재 데이터베이스 대신 사용할 데이터베이스의 이름입니다. </param>
      <exception cref="T:System.ArgumentException">The database name is not valid.</exception>
      <exception cref="T:System.InvalidOperationException">The connection is not open. </exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Cannot change the database. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ClearAllPools">
      <summary>연결 풀을 비웁니다.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)">
      <summary>지정된 연결과 관련된 연결 풀을 비웁니다.</summary>
      <param name="connection">풀에서 지울 <see cref="T:System.Data.SqlClient.SqlConnection" />입니다.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
      <summary>연결 시도 성공 또는 실패 여부와 관계없이 가장 최근에 연결 시도된 연결 ID입니다.</summary>
      <returns>가장 최근에 연결 시도된 연결 ID입니다.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.Close">
      <summary>데이터베이스에 대한 연결을 닫습니다.열린 연결을 닫기 위해 기본적으로 이 메서드를 사용합니다.</summary>
      <exception cref="T:System.Data.SqlClient.SqlException">The connection-level error that occurred while opening the connection. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ConnectionString">
      <summary>SQL Server 데이터베이스를 여는 데 사용되는 문자열을 가져오거나 설정합니다.</summary>
      <returns>초기 연결을 설정하는 데 필요한 소스 데이터베이스 이름 및 다른 매개 변수를 포함하는 연결 문자열입니다.기본값은 빈 문자열입니다.</returns>
      <exception cref="T:System.ArgumentException">An invalid connection string argument has been supplied, or a required connection string argument has not been supplied. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
      <summary>시도를 종료하고 오류를 생성하기 전에 연결하는 동안 대기할 시간을 가져옵니다.</summary>
      <returns>연결이 열리기 전까지 대기할 시간(초)입니다.기본값은 15초입니다.</returns>
      <exception cref="T:System.ArgumentException">The value set is less than 0. </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.CreateCommand">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnection" />과 연결된 <see cref="T:System.Data.SqlClient.SqlCommand" /> 개체를 만들고 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlCommand" /> 개체입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.Database">
      <summary>현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름을 가져옵니다.</summary>
      <returns>현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름입니다.기본값은 빈 문자열입니다.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.DataSource">
      <summary>연결할 SQL Server 인스턴스의 이름을 가져옵니다.</summary>
      <returns>연결할 SQL Server 인스턴스의 이름입니다.기본값은 빈 문자열입니다.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> 속성을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> 속성이 설정되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Data.SqlClient.SqlConnection.InfoMessage">
      <summary>SQL Server에서 경고나 정보 메시지를 반환할 때 발생합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.Open">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />이 지정하는 속성 설정을 사용하여 데이터베이스 연결을 엽니다.</summary>
      <exception cref="T:System.InvalidOperationException">Cannot open a connection without specifying a data source or server.orThe connection is already open.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">A connection-level error occurred while opening the connection.If the <see cref="P:System.Data.SqlClient.SqlException.Number" /> property contains the value 18487 or 18488, this indicates that the specified password has expired or must be reset.See the <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /> method for more information.The &lt;system.data.localdb&gt; tag in the app.config file has invalid or unknown elements.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">There are two entries with the same name in the &lt;localdbinstances&gt; section.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />으로 지정된 속성 설정을 사용하여 데이터베이스 연결을 여는 <see cref="M:System.Data.SqlClient.SqlConnection.Open" />의 비동기 버전입니다.취소 토큰은 연결 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.예외는 반환된 작업을 통해 전파됩니다.연결하지 못하고 연결 제한 시간이 경과하는 경우 반환된 작업이 예외와 함께 오류가 발생한 것으로 표시됩니다.구현은 풀링된 연결 및 풀링되지 않은 연결에 대한 호출 스레드를 차단하지 않고 Task를 반환합니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <param name="cancellationToken">취소 명령입니다.</param>
      <exception cref="T:System.InvalidOperationException">Calling <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.Context Connection=true is specified in the connection string.A connection was not available from the connection pool before the connection time out elapsed.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">Any error returned by SQL Server that occurred while opening the connection.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.PacketSize">
      <summary>SQL Server의 인스턴스와 통신하는 데 사용하는 네트워크 패킷의 크기(바이트)를 가져옵니다.</summary>
      <returns>네트워크 패킷의 크기(바이트)입니다.기본값은 8000입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ResetStatistics">
      <summary>통계 수집을 활성화하면 모든 값이 0으로 다시 설정됩니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics">
      <summary>메서드가 호출된 시점에서 통계의 이름 값 쌍 컬렉션을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.DictionaryEntry" /> 항목에 대한 <see cref="T:System.Collections.IDictionary" /> 형식의 참조를 반환합니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ServerVersion">
      <summary>클라이언트가 연결될 SQL Server 인스턴스의 버전을 포함한 문자열을 가져옵니다.</summary>
      <returns>SQL Server 인스턴스의 버전입니다.</returns>
      <exception cref="T:System.InvalidOperationException">The connection is closed. <see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" /> was called while the returned Task was not completed and the connection was not opened after a call to <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.State">
      <summary>연결에 수행된 최근 네트워크 작업 중 <see cref="T:System.Data.SqlClient.SqlConnection" />의 상태를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Data.ConnectionState" /> 열거형입니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled">
      <summary>이 속성을 true로 설정하면 현재 연결에 대한 통계 수집이 활성화됩니다.</summary>
      <returns>통계 수집이 활성화되면 true를 반환하고, 그렇지 않으면 false를 반환합니다.기본값은 false입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.WorkstationId">
      <summary>데이터베이스 클라이언트를 식별하는 문자열을 가져옵니다.</summary>
      <returns>데이터베이스 클라이언트를 식별하는 문자열입니다.지정하지 않으면 클라이언트 컴퓨터의 이름입니다.어느 것도 지정하지 않으면 이 값은 빈 문자열입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.SqlClient.SqlConnectionStringBuilder">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnection" /> 클래스에서 사용하는 연결 문자열의 내용을 손쉽게 만들고 관리할 수 있는 방법을 제공합니다. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.#ctor">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.제공된 연결 문자열에서는 인스턴스의 내부 연결 정보에 대한 데이터를 제공합니다.</summary>
      <param name="connectionString">개체의 내부 연결 정보를 위한 기초로 사용됩니다.이름/값 쌍으로 구문 분석됩니다.키 이름이 잘못된 경우 <see cref="T:System.Collections.Generic.KeyNotFoundException" />이 발생합니다.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">연결 문자열 내에 잘못된 키 이름이 있는 경우</exception>
      <exception cref="T:System.FormatException">연결 문자열 내에 잘못된 값이 있는 경우(특히 부울 값 또는 숫자 값이 예상되었지만 제공되지 않은 경우)</exception>
      <exception cref="T:System.ArgumentException">제공된 <paramref name="connectionString" />이 유효하지 않은 경우</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent">
      <summary>SQL Server 가용성 그룹의 데이터베이스에 연결할 때 응용 프로그램 작업 부하 유형을 선언합니다.<see cref="T:System.Data.SqlClient.ApplicationIntent" />를 사용하여 이 속성의 값을 설정할 수 있습니다.AlwaysOn 가용성 그룹의 SqlClient 지원에 대한 자세한 내용은 고가용성 및 재해 복구에 대한 SqlClient 지원를 참조하십시오.</summary>
      <returns>속성의 현재 값(<see cref="T:System.Data.SqlClient.ApplicationIntent" /> 형식의 값)을 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName">
      <summary>연결 문자열과 관련된 응용 프로그램의 이름을 가져오거나 설정합니다.</summary>
      <returns>이름이 제공되지 않으면 응용 프로그램의 이름이거나 ".NET SqlClient 데이터 공급자"입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값을 null로 설정하려면 <see cref="F:System.DBNull.Value" />를 사용합니다.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename">
      <summary>주 데이터 파일의 이름이 포함된 문자열을 가져오거나 설정합니다.이 문자열에는 연결할 수 있는 데이터베이스의 전체 경로 이름이 들어 있습니다.</summary>
      <returns>AttachDBFilename 속성의 값이며, 제공된 값이 없으면 String.Empty입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값을 null로 설정하려면 <see cref="F:System.DBNull.Value" />를 사용합니다.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.Clear">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 인스턴스의 내용을 지웁니다.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount">
      <summary>[.NET Framework 4.5.1 이상 버전에서 지원됨] 유휴 연결 오류가 있음을 식별한 후 시도되는 다시 연결 횟수입니다.0에서 255 사이의 정수여야 합니다.기본값은 1입니다.유휴 연결 오류 시 다시 연결을 사용하지 않으려면 0으로 설정합니다.허용된 범위를 벗어난 값으로 설정된 경우 <see cref="T:System.ArgumentException" />이 throw됩니다.</summary>
      <returns>유휴 연결 오류가 있음을 식별한 후 시도되는 다시 연결 횟수입니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval">
      <summary>[.NET Framework 4.5.1 이상 버전에서 지원됨] 유휴 연결 오류가 있음을 식별한 후 시도할 다시 연결 작업 사이의 시간 간격(초)입니다.1에서 60 사이의 정수여야 합니다.기본값은 10000(10초)입니다.허용된 범위를 벗어난 값으로 설정된 경우 <see cref="T:System.ArgumentException" />이 throw됩니다.</summary>
      <returns>유휴 연결 오류가 있음을 식별한 후 시도할 다시 연결 작업 사이의 시간 간격(초)입니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout">
      <summary>시도를 종료하고 오류를 생성할 때까지 서버에 대한 연결을 대기하는 시간(초)을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout" /> 속성의 값이거나, 제공된 값이 없으면 15초입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />에 특정 키가 들어 있는지 여부를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />에 지정한 키가 있는 요소가 포함되어 있으면 true입니다.</returns>
      <param name="keyword">
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />에서 찾을 수 있는 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" />가 null(Visual Basic의 경우 Nothing)인 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage">
      <summary>SQL Server 언어 레코드 이름을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage" /> 속성의 값이며, 제공된 값이 없으면 String.Empty입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값을 null로 설정하려면 <see cref="F:System.DBNull.Value" />를 사용합니다.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.DataSource">
      <summary>연결할 SQL Server 인스턴스의 이름이나 네트워크 주소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.DataSource" /> 속성의 값이며, 제공된 값이 없으면 String.Empty입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값을 null로 설정하려면 <see cref="F:System.DBNull.Value" />를 사용합니다.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt">
      <summary>SQL Server에 인증서가 설치되어 있는 경우 이 서버에서 클라이언트와 서버 사이에 전송되는 모든 데이터에 대해 SSL 암호화를 사용할지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt" /> 속성의 값이며, 제공된 값이 없으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner">
      <summary>주 서버가 다운되었을 때 연결할 파트너 서버의 이름이나 주소를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner" /> 속성의 값이며, 제공된 값이 없으면 String.Empty입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값을 null로 설정하려면 <see cref="F:System.DBNull.Value" />를 사용합니다.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog">
      <summary>연결과 관련된 데이터베이스의 이름을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog" /> 속성의 값이며, 제공된 값이 없으면 String.Empty입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값을 null로 설정하려면 <see cref="F:System.DBNull.Value" />를 사용합니다.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity">
      <summary>연결에 사용자 ID와 암호가 지정되었는지(false인 경우) 또는 현재 Windows 계정 자격 증명이 인증에 사용되는지(true인 경우) 여부를 나타내는 부울 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity" /> 속성의 값이며, 제공된 값이 없으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)">
      <summary>지정한 키와 관련된 값을 가져오거나 설정합니다.C#에서 이 속성은 인덱서입니다.</summary>
      <returns>지정한 키와 관련된 값입니다. </returns>
      <param name="keyword">가져오거나 설정할 항목의 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">사용 가능한 키에 없는 키를 추가하려는 경우</exception>
      <exception cref="T:System.FormatException">연결 문자열 내에 잘못된 값이 있는 경우(특히 부울 값 또는 숫자 값이 예상되었지만 제공되지 않은 경우)</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Keys">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />의 키를 포함하는 <see cref="T:System.Collections.ICollection" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />의 키를 포함하는 <see cref="T:System.Collections.ICollection" />입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout">
      <summary>연결 풀에서 연결이 소멸되기 전까지 유지되는 최소 시간(초)을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout" /> 속성의 값이며, 제공된 값이 없으면 0입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize">
      <summary>이 특정 연결 문자열에 대해 연결 풀에서 허용된 최대 연결 수를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize" /> 속성의 값이며, 제공된 값이 없으면 100입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize">
      <summary>이 특정 연결 문자열에 대해 연결 풀에서 허용된 최소 연결 수를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize" /> 속성의 값이며, 제공된 값이 없으면 0입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets">
      <summary>true이면 응용 프로그램에서 여러 MARS(Multiple Active Result Set)를 유지할 수 있습니다.false,이면 응용 프로그램에서 한 일괄 작업의 모든 결과 집합을 처리하거나 취소해야만 해당 연결에서 다른 일괄 작업을 실행할 수 있습니다.자세한 내용은 MARS(Multiple Active Result Sets)를 참조하십시오.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets" /> 속성의 값이거나, 제공된 값이 없으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover">
      <summary>응용 프로그램이 AlwaysOn AG(가용성 그룹)에 연결하려는 경우 MultiSubnetFailover=true로 설정하면 현재 활성화된 서버를 보다 빨리 검색하고 연결할 수 있습니다.AlwaysOn 가용성 그룹의 SqlClient 지원에 대한 자세한 내용은 고가용성 및 재해 복구에 대한 SqlClient 지원를 참조하십시오.</summary>
      <returns>속성의 현재 값을 나타내는 <see cref="T:System.Boolean" />을 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize">
      <summary>SQL Server의 인스턴스와 통신하는 데 사용할 네트워크 패킷의 크기(바이트)를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize" /> 속성의 값이며, 제공된 값이 없으면 8000입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Password">
      <summary>SQL Server 계정의 암호를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Password" /> 속성의 값이며, 제공된 값이 없으면 String.Empty입니다.</returns>
      <exception cref="T:System.ArgumentNullException">암호가 null로 잘못 설정되었습니다.  예제는 아래를 참조하십시오.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo">
      <summary>연결이 현재 열려 있거나 열린 상태였으면 암호와 같은 중요한 보안 정보가 연결의 일부로 반환되는지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo" /> 속성의 값이며, 제공된 값이 없으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Pooling">
      <summary>연결이 요청될 때마다 연결이 풀링되거나 명시적으로 열리는지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Pooling" /> 속성의 값이며, 제공된 값이 없으면 true입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 인스턴스에서 지정한 키를 가지는 항목을 제거합니다.</summary>
      <returns>연결 문자열에 있던 키가 제거되었으면 true이고, 키가 원래 없었으면 false입니다.</returns>
      <param name="keyword">
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />의 연결 문자열에서 제거할 키/값 쌍의 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" />가 null(Visual Basic의 경우 Nothing)인 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Replication">
      <summary>연결을 사용하여 복제를 수행할 수 있는지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.Replication" /> 속성의 값이며, 제공된 값이 없으면 false입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" /> 인스턴스에 지정된 키가 있는지 여부를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />에 지정한 키를 가지는 항목이 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="keyword">
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />에서 찾을 수 있는 키입니다.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate">
      <summary>채널이 암호화될 때 트러스트의 유효성을 검사하기 위한 인증서 체인 검사가 무시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>Boolean인식되는 값은 true, false, yes 및 no입니다.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />에서 제공한 키에 해당하는 값을 검색합니다.</summary>
      <returns>
        <paramref name="keyword" />가 연결 문자열에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="keyword">검색할 항목의 키입니다.</param>
      <param name="value">
        <paramref name="keyword." />에 해당하는 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" />에 null 값(Visual Basic에서는 Nothing)이 있는 경우</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion">
      <summary>응용 프로그램에 필요한 형식 시스템을 나타내는 문자열 값을 가져오거나 설정합니다.</summary>
      <returns>다음 표에서는 <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion" /> 속성에 사용할 수 있는 값을 보여 줍니다.값설명SQL Server 2005SQL Server 2005 형식 시스템을 사용합니다.현재 버전의 ADO.NET에서는 변환이 수행되지 않습니다.SQL Server 2008SQL Server 2008 형식 시스템을 사용합니다.최신 버전이 클라이언트-서버 쌍에서 처리할 수 있는 것보다 최신 버전을 사용합니다.이 값은 클라이언트 및 서버 구성 요소가 업그레이드될 때 자동으로 상향됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserID">
      <summary>SQL Server에 연결하는 데 사용할 사용자 ID를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserID" /> 속성의 값이며, 제공된 값이 없으면 String.Empty입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값을 null로 설정하려면 <see cref="F:System.DBNull.Value" />를 사용합니다.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance">
      <summary>기본 SQL Server Express 인스턴스에서 호출자의 계정으로 실행되는 런타임 시작 인스턴스로 연결을 리디렉션하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance" /> 속성의 값이며, 제공된 값이 없으면 False입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값을 null로 설정하려면 <see cref="F:System.DBNull.Value" />를 사용합니다.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.Values">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />의 값이 들어 있는 <see cref="T:System.Collections.ICollection" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlConnectionStringBuilder" />의 값을 포함하는 <see cref="T:System.Collections.ICollection" />입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID">
      <summary>SQL Server에 연결하는 워크스테이션의 이름을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID" /> 속성의 값이며, 제공된 값이 없으면 String.Empty입니다.</returns>
      <exception cref="T:System.ArgumentNullException">값을 null로 설정하려면 <see cref="F:System.DBNull.Value" />를 사용합니다.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.SqlClient.SqlDataReader">
      <summary>SQL Server 데이터베이스에서 행의 앞으로만 이동 가능한 스트림을 읽을 수 있게 합니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Connection">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlDataReader" />에 연결된 <see cref="T:System.Data.SqlClient.SqlConnection" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlDataReader" />에 연결된 <see cref="T:System.Data.SqlClient.SqlConnection" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Depth">
      <summary>현재 행의 중첩 수준을 나타내는 값을 가져옵니다.</summary>
      <returns>현재 행의 중첩 수준입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.FieldCount">
      <summary>현재 행의 열 수를 가져옵니다.</summary>
      <returns>유효한 recordset에 배치되지 않으면 0이고, 그렇지 않으면 현재 행의 열의 수입니다.기본값은 -1입니다.</returns>
      <exception cref="T:System.NotSupportedException">SQL Server의 인스턴스에 대한 현재 연결이 없는 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)">
      <summary>지정된 열의 값을 부울로 가져옵니다.</summary>
      <returns>열의 값을 반환합니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)">
      <summary>지정된 열의 값을 바이트로 가져옵니다.</summary>
      <returns>바이트로 지정된 열의 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>지정된 열 오프셋의 바이트 스트림을 지정된 버퍼 오프셋에서 시작하는 버퍼 및 배열로 읽어들입니다.</summary>
      <returns>실제로 읽은 바이트 수입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <param name="dataIndex">읽기 작업을 시작하는 필드 내의 인덱스입니다.</param>
      <param name="buffer">바이트 스트림을 읽어올 버퍼입니다. </param>
      <param name="bufferIndex">쓰기 작업을 시작할 <paramref name="buffer" /> 내 인덱스입니다. </param>
      <param name="length">버퍼로 복사할 최대 길이입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)">
      <summary>단일 문자로 지정된 열의 값을 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>지정된 버퍼 오프셋에서 시작하는 배열로서 지정된 열 오프셋에서 버퍼로 문자의 스트림을 읽습니다.</summary>
      <returns>실제로 읽은 문자 수입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <param name="dataIndex">읽기 작업을 시작하는 필드 내의 인덱스입니다.</param>
      <param name="buffer">바이트 스트림을 읽어올 버퍼입니다. </param>
      <param name="bufferIndex">쓰기 작업을 시작할 <paramref name="buffer" /> 내 인덱스입니다. </param>
      <param name="length">버퍼로 복사할 최대 길이입니다. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)">
      <summary>지정된 열의 데이터 형식을 나타내는 문자열을 가져옵니다.</summary>
      <returns>지정된 열의 데이터 형식을 나타내는 문자열입니다.</returns>
      <param name="i">찾을 열의 서수 위치(0부터 시작)입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)">
      <summary>지정된 열의 값을 <see cref="T:System.DateTime" /> 개체로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)">
      <summary>지정된 열의 값을 <see cref="T:System.DateTimeOffset" /> 개체로 검색합니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)">
      <summary>지정된 열의 값을 <see cref="T:System.Decimal" /> 개체로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)">
      <summary>지정된 열의 값을 배정밀도 부동 소수점 숫자로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetEnumerator">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlDataReader" />를 반복하는 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlDataReader" />에 대한 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)">
      <summary>개체의 데이터 형식인 <see cref="T:System.Type" />을 가져옵니다.</summary>
      <returns>개체의 데이터 형식인 <see cref="T:System.Type" />입니다.이 형식이 클라이언트에 없으면 데이터베이스에서 반환되는 UDT(사용자 정의 형식)의 경우 GetFieldType은 null을 반환합니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)">
      <summary>지정된 열의 값을 형식으로 동기적으로 가져옵니다.<see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />은 이 메서드의 비동기 버전입니다.</summary>
      <returns>반환된 형식 개체입니다.</returns>
      <param name="i">검색할 열입니다.</param>
      <typeparam name="T">반환될 값의 형식입니다.자세한 내용은 설명 부분을 참조하십시오.</typeparam>
      <exception cref="T:System.InvalidOperationException">데이터 검색 중 연결이 끊기거나 닫힌 경우데이터 검색 중 <see cref="T:System.Data.SqlClient.SqlDataReader" />가 닫힌 경우읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.진행 중인 비동기 작업이 없습니다.이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException">존재하지 않는 열을 읽으려고 시도합니다.</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">열의 값이 SQL이 아닌 형식을 검색하는 null(<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == true)인 경우</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="T" />는 SQL Server에서 반환되는 형식과 일치하지 않거나 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)">
      <summary>지정된 열의 값을 형식으로 비동기적으로 가져옵니다.<see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" />은 이 메서드의 동기 버전입니다.</summary>
      <returns>반환된 형식 개체입니다.</returns>
      <param name="i">검색할 열입니다.</param>
      <param name="cancellationToken">작업을 취소해야 한다는 알림을 전파하는 취소 명령입니다.취소를 보장하지는 않습니다.CancellationToken.None을 설정하면 이 메서드가 <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />와 동일해집니다.반환된 작업은 취소로 표시되어 있어야 합니다.</param>
      <typeparam name="T">반환될 값의 형식입니다.자세한 내용은 설명 부분을 참조하십시오.</typeparam>
      <exception cref="T:System.InvalidOperationException">데이터 검색 중 연결이 끊기거나 닫힌 경우데이터 검색 중 <see cref="T:System.Data.SqlClient.SqlDataReader" />가 닫힌 경우읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.진행 중인 비동기 작업이 없습니다.이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.Context Connection=true는 연결 문자열에 지정됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException">존재하지 않는 열을 읽으려고 시도합니다.</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">열의 값이 SQL이 아닌 형식을 검색하는 null(<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == true)인 경우</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="T" />는 SQL Server에서 반환되는 형식과 일치하지 않거나 캐스팅할 수 없습니다.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)">
      <summary>지정된 열의 값을 단정밀도 부동 소수점 숫자로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)">
      <summary>지정된 열의 값을 GUID(Globally Unique Identifier)로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)">
      <summary>지정된 열의 값을 16비트 부호 있는 정수로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)">
      <summary>지정된 열의 값을 32비트 부호 있는 정수로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)">
      <summary>지정된 열의 값을 64비트 부호 있는 정수로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)">
      <summary>지정된 열의 이름을 가져옵니다.</summary>
      <returns>지정된 열의 이름입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)">
      <summary>열 이름이 지정된 경우 열 서수를 가져옵니다.</summary>
      <returns>열 번호를 나타내는 0부터 시작하는 서수입니다.</returns>
      <param name="name">열의 이름입니다. </param>
      <exception cref="T:System.IndexOutOfRangeException">지정된 이름이 유효한 열 이름이 아닌 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>내부 공급자별 필드 형식의 표현인 Object를 가져옵니다.</summary>
      <returns>내부 공급자별 필드 형식의 표현인 <see cref="T:System.Object" />를 가져옵니다.</returns>
      <param name="i">열 서수를 나타내는 <see cref="T:System.Int32" />입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>내부 공급자별 값의 표현인 Object를 가져옵니다.</summary>
      <returns>내부 공급자별 값의 표현인 <see cref="T:System.Object" />입니다.</returns>
      <param name="i">열 서수를 나타내는 <see cref="T:System.Int32" />입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>내부 공급자별 값의 표현인 개체로 구성된 배열을 가져옵니다.</summary>
      <returns>내부 공급자별 값의 표현인 개체로 구성된 배열입니다.</returns>
      <param name="values">열 값을 복사할 <see cref="T:System.Object" /> 배열입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>열의 값을 반환합니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" />로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBytes" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" />로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlChars" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)">
      <summary>지정된 열의 데이터 값을 SQL Server 형식으로 반환합니다. </summary>
      <returns>
        <see cref="T:System.Data.SqlDbType" />으로 나타낸 열 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])">
      <summary>레코드에 있는 모든 열의 값을 SQL Server 형식으로 나타낸 값이 들어 있는 <see cref="T:System.Object" />의 배열을 채웁니다.</summary>
      <returns>복사된 열 수를 나타내는 정수입니다.</returns>
      <param name="values">값을 복사할 <see cref="T:System.Object" />의 배열입니다.열 값은 SQL Server 형식으로 나타냅니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" />이 null입니다. </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)">
      <summary>지정된 열의 값을 XML 값으로 가져옵니다.</summary>
      <returns>해당 필드에 저장된 XML이 들어 있는 <see cref="T:System.Data.SqlTypes.SqlXml" /> 값입니다. </returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.SqlClient.SqlDataReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      <exception cref="T:System.InvalidCastException">검색된 데이터가 <see cref="T:System.Data.SqlTypes.SqlXml" /> 형식과 호환되지 않는 경우</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)">
      <summary>이진, 이미지, varbinary, UDT 및 variant 데이터 형식을 <see cref="T:System.IO.Stream" />으로 검색합니다.</summary>
      <returns>스트림 개체입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다.</param>
      <exception cref="T:System.InvalidOperationException">데이터 검색 중 연결이 끊기거나 닫힌 경우데이터 검색 중 <see cref="T:System.Data.SqlClient.SqlDataReader" />가 닫힌 경우읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.진행 중인 비동기 작업이 없습니다.이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException">존재하지 않는 열을 읽으려고 시도합니다.</exception>
      <exception cref="T:System.InvalidCastException">반환된 형식이 다음 형식 중 하나가 아닙니다.binaryimagevarbinaryudt</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)">
      <summary>지정된 열의 값을 문자열로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)">
      <summary>Char, NChar, NText, NVarChar, 텍스트, varChar 및 Variant 데이터 형식을 <see cref="T:System.IO.TextReader" />로 검색합니다.</summary>
      <returns>반환된 개체입니다.</returns>
      <param name="i">검색할 열입니다.</param>
      <exception cref="T:System.InvalidOperationException">데이터 검색 중 연결이 끊기거나 닫힌 경우데이터 검색 중 <see cref="T:System.Data.SqlClient.SqlDataReader" />가 닫힌 경우읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.진행 중인 비동기 작업이 없습니다.이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException">존재하지 않는 열을 읽으려고 시도합니다.</exception>
      <exception cref="T:System.InvalidCastException">반환된 형식이 다음 형식 중 하나가 아닙니다.charncharntextnvarchar텍스트varchar</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)">
      <summary>지정된 열의 값을 <see cref="T:System.TimeSpan" /> 개체로 검색합니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)">
      <summary>지정된 열의 값을 네이티브 형식으로 가져옵니다.</summary>
      <returns>이 메서드는 null 데이터베이스 열에 대해서는 <see cref="T:System.DBNull" />을 반환합니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])">
      <summary>현재 행의 열 값으로 개체 배열을 채웁니다.</summary>
      <returns>배열에 있는 <see cref="T:System.Object" />의 인스턴스 수를 반환합니다.</returns>
      <param name="values">특성 열을 복사해 올 <see cref="T:System.Object" />의 배열입니다. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)">
      <summary>형식 XML의 데이터를 <see cref="T:System.Xml.XmlReader" />로 검색합니다.</summary>
      <returns>반환된 개체입니다.</returns>
      <param name="i">지정된 열의 값입니다.</param>
      <exception cref="T:System.InvalidOperationException">데이터 검색 중 연결이 끊기거나 닫힌 경우데이터 검색 중 <see cref="T:System.Data.SqlClient.SqlDataReader" />가 닫힌 경우읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.진행 중인 비동기 작업이 없습니다.이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException">존재하지 않는 열을 읽으려고 시도합니다.</exception>
      <exception cref="T:System.InvalidCastException">반환된 형식이 xml이 아닌 경우</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.HasRows">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlDataReader" />에 하나 이상의 행이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlDataReader" />에 행이 하나 이상 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.IsClosed">
      <summary>지정된 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 인스턴스가 닫혔는지 여부를 나타내는 부울 값을 검색합니다. </summary>
      <returns>지정된 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 인스턴스가 닫혔으면 true이고, 그렇지 않으면 false입니다. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)">
      <summary>열의 값이 존재하지 않거나 누락되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>지정된 열 값이 <see cref="T:System.DBNull" />과 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>존재하지 않거나 누락된 값이 열에 포함되었는지 여부를 나타내는 값을 가져오는 <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />의 비동기 버전입니다.취소 토큰은 명령 시간 제한이 경과하기 전에 작업을 취소하는 요청에 사용할 수 있습니다.예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
      <returns>지정된 열 값이 DBNull과 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="i">검색할 열입니다(0부터 시작).</param>
      <param name="cancellationToken">작업을 취소해야 한다는 알림을 전파하는 취소 명령입니다.취소를 보장하지는 않습니다.CancellationToken.None을 설정하면 이 메서드가 <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />와 동일해집니다.반환된 작업은 취소로 표시되어 있어야 합니다.</param>
      <exception cref="T:System.InvalidOperationException">데이터 검색 중 연결이 끊기거나 닫힌 경우데이터 검색 중 <see cref="T:System.Data.SqlClient.SqlDataReader" />가 닫힌 경우읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.진행 중인 비동기 작업이 없습니다.이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get* 메서드에 적용됩니다.Context Connection=true는 연결 문자열에 지정됩니다.</exception>
      <exception cref="T:System.IndexOutOfRangeException">존재하지 않는 열을 읽으려고 시도합니다.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)">
      <summary>열 서수가 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</summary>
      <returns>지정된 열의 네이티브 형식 값입니다.</returns>
      <param name="i">열 번호를 나타내는 0부터 시작하는 서수입니다. </param>
      <exception cref="T:System.IndexOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.IDataRecord.FieldCount" /> 사이의 범위에 속하지 않는 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Item(System.String)">
      <summary>열 이름이 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</summary>
      <returns>지정된 열의 네이티브 형식 값입니다.</returns>
      <param name="name">열 이름입니다. </param>
      <exception cref="T:System.IndexOutOfRangeException">지정된 이름의 열을 찾지 못한 경우 </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.NextResult">
      <summary>일괄 Transact-SQL 문의 결과를 읽을 때, 데이터 판독기를 다음 결과로 이동합니다.</summary>
      <returns>결과 집합이 더 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)">
      <summary>일괄 Transact-SQL 문의 결과를 읽을 때 판독기를 다음 결과로 이동하는 <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" />의 비동기 버전입니다.취소 토큰은 명령 시간 제한이 경과하기 전에 작업을 취소하는 요청에 사용할 수 있습니다.  예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <param name="cancellationToken">취소 명령입니다.</param>
      <exception cref="T:System.InvalidOperationException">작업이 완료되기 전에 같은 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" />를 두 번 이상 호출합니다.Context Connection=true는 연결 문자열에 지정됩니다.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.Read">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlDataReader" />를 다음 레코드로 이동합니다.</summary>
      <returns>행이 더 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlDataReader" />를 다음 레코드로 이동하는 비동기 버전의 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />입니다.취소 토큰은 명령 시간 제한이 경과하기 전에 작업을 취소하는 요청에 사용할 수 있습니다.예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
      <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
      <param name="cancellationToken">취소 명령입니다.</param>
      <exception cref="T:System.InvalidOperationException">작업이 완료되기 전에 같은 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />를 두 번 이상 호출합니다.Context Connection=true는 연결 문자열에 지정됩니다.</exception>
      <exception cref="T:System.Data.SqlClient.SqlException">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.RecordsAffected">
      <summary>Transact-SQL 문의 실행에 의해 변경, 삽입 및 삭제된 행의 개수를 가져옵니다.</summary>
      <returns>변경, 삽입 또는 삭제된 행의 수이거나, 행이 영향을 받지 않았거나 문이 실패했으면 0이고, SELECT 문의 경우에는 -1입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.VisibleFieldCount">
      <summary>표시되는 <see cref="T:System.Data.SqlClient.SqlDataReader" />의 필드 수를 가져옵니다. </summary>
      <returns>표시되는 필드 수입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.Data.SqlClient.SqlError">
      <summary>SQL Server에서 반환된 경고 또는 오류와 관련된 정보를 수집합니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Class">
      <summary>SQL Server에서 반환된 오류의 심각도 수준을 가져옵니다.</summary>
      <returns>오류의 심각도 수준을 나타내는 1부터 25까지의 값입니다.기본값은 0입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.LineNumber">
      <summary>오류를 포함하는 Transact-SQL 명령 배치나 저장 프로시저의 줄 번호를 가져옵니다.</summary>
      <returns>오류를 포함하는 Transact-SQL 명령 배치나 저장 프로시저의 줄 번호입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Message">
      <summary>오류를 설명하는 텍스트를 가져옵니다.</summary>
      <returns>오류를 설명하는 텍스트입니다.SQL Server에서 생성되는 오류에 대한 자세한 내용은 SQL Server 온라인 설명서를 참조하세요.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Number">
      <summary>오류의 형식을 식별하는 번호를 가져옵니다.</summary>
      <returns>오류의 형식을 식별하는 번호입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Procedure">
      <summary>오류를 생성한 저장 프로시저 또는 RPC(원격 프로시저 호출)의 이름을 가져옵니다.</summary>
      <returns>저장 프로시저 또는 RPC의 이름입니다.SQL Server에서 생성되는 오류에 대한 자세한 내용은 SQL Server 온라인 설명서를 참조하세요.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Server">
      <summary>오류를 생성한 SQL Server 인스턴스의 이름을 가져옵니다.</summary>
      <returns>SQL Server.인스턴스의 이름입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Source">
      <summary>오류를 생성한 공급자의 이름을 가져옵니다.</summary>
      <returns>오류를 생성한 공급자의 이름입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.State">
      <summary>일부 오류 메시지는 데이터베이스 엔진을 위해 코드의 여러 지점에서 발생할 수 있습니다.예를 들어 1105 오류는 여러 가지 조건에서 발생할 수 있습니다.오류가 발생하는 각 특정 조건에서 고유한 상태 코드를 할당합니다.</summary>
      <returns>상태 코드입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlError.ToString">
      <summary>오류 메시지의 전체 텍스트를 가져옵니다.</summary>
      <returns>오류의 전체 텍스트입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlErrorCollection">
      <summary>.NET Framework Data Provider for SQL Server에서 생성된 오류를 모두 수집합니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> 컬렉션의 요소를 <see cref="T:System.Array" />의 지정된 인덱스에서 시작하는 위치에 복사합니다.</summary>
      <param name="array">요소를 복사할 <see cref="T:System.Array" />입니다. </param>
      <param name="index">
        <paramref name="array" /> 매개 변수로 복사할 인덱스입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" />의 합계와 <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> 컬렉션에 있는 요소의 수가 <see cref="T:System.Array" />의 <see cref="P:System.Array.Length" />보다 많은 경우 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />은 null입니다. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />에 대해 유효하지 않은 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Data.SqlClient.SqlError[],System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> 컬렉션의 요소를 <see cref="T:System.Data.SqlClient.SqlErrorCollection" />의 지정된 인덱스에서 시작하는 위치에 복사합니다.</summary>
      <param name="array">요소를 복사할 <see cref="T:System.Data.SqlClient.SqlErrorCollection" />입니다.</param>
      <param name="index">
        <paramref name="array" /> 매개 변수로 복사할 인덱스입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" />의 합계와 <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> 컬렉션에 있는 요소의 수가 <see cref="T:System.Data.SqlClient.SqlErrorCollection" />의 길이보다 큰 경우 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />은 null입니다. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />에 대해 유효하지 않은 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.Count">
      <summary>컬렉션의 오류 수를 가져옵니다.</summary>
      <returns>컬렉션의 전체 오류 수입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlErrorCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlErrorCollection" />을 반복하는 열거자를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlErrorCollection" />에 대한 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.Item(System.Int32)">
      <summary>지정된 인덱스의 오류를 가져옵니다.</summary>
      <returns>지정된 인덱스에 있는 오류를 포함하는 <see cref="T:System.Data.SqlClient.SqlError" />입니다.</returns>
      <param name="index">검색할 오류의 인덱스(0부터 시작)입니다. </param>
      <exception cref="T:System.IndexOutOfRangeException">인덱스 매개 변수가 배열 범위의 외부에 있는 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.IsSynchronized" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#SyncRoot">
      <summary>이 멤버에 대한 설명은 <see cref="P:System.Collections.ICollection.SyncRoot" />를 참조하십시오.</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlException">
      <summary>SQL Server 가 경고나 오류를 반환하면 throw되는 예외입니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Class">
      <summary>.NET Framework Data Provider for SQL Server에서 반환한 오류의 심각도 수준을 가져옵니다.</summary>
      <returns>오류의 심각도 수준을 나타내는 1부터 25까지의 값입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.ClientConnectionId">
      <summary>클라이언트 연결 ID를 나타냅니다.자세한 내용은 ADO.NET의 데이터 추적을 참조하십시오.</summary>
      <returns>클라이언트 연결 ID를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Errors">
      <summary>.NET Framework Data Provider for SQL Server에서 생성된 예외에 대한 자세한 정보를 제공하는 하나 이상의 <see cref="T:System.Data.SqlClient.SqlError" /> 개체 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlError" /> 클래스의 수집된 인스턴스입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.LineNumber">
      <summary>오류를 생성한 Transact-SQL 명령 일괄이나 저장 프로시저의 줄 번호를 가져옵니다.</summary>
      <returns>오류를 포함하는 Transact-SQL 명령 일괄이나 저장 프로시저의 줄 번호입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Number">
      <summary>오류의 형식을 식별하는 번호를 가져옵니다.</summary>
      <returns>오류의 형식을 식별하는 번호입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Procedure">
      <summary>오류를 생성한 저장 프로시저 또는 RPC(원격 프로시저 호출)의 이름을 가져옵니다.</summary>
      <returns>저장 프로시저 또는 RPC의 이름입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Server">
      <summary>오류를 생성한 SQL Server 인스턴스를 실행하는 컴퓨터의 이름을 가져옵니다.</summary>
      <returns>SQL Server.인스턴스를 실행하는 컴퓨터의 이름입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Source">
      <summary>오류를 생성한 공급자의 이름을 가져옵니다.</summary>
      <returns>오류를 생성한 공급자의 이름입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.State">
      <summary>오류, 경고 또는 "데이터 없음" 메시지를 나타내는 SQL Server에서 숫자 오류 코드를 가져옵니다.이러한 값을 디코딩하는 방법에 대한 자세한 내용은 SQL Server 온라인 설명서를 참조하십시오.</summary>
      <returns>오류 코드를 나타내는 번호입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlException.ToString">
      <summary>현재 <see cref="T:System.Data.SqlClient.SqlException" /> 개체를 나타내고 클라이언트 연결 ID를 포함하는 문자열을 반환합니다. 자세한 내용은 <see cref="P:System.Data.SqlClient.SqlException.ClientConnectionId" />를 참조하십시오.</summary>
      <returns>현재 <see cref="T:System.Data.SqlClient.SqlException" /> 개체<see cref="T:System.String" />를 나타내는 문자열입니다.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlInfoMessageEventArgs">
      <summary>
        <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> 이벤트에 대한 데이터를 제공합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Errors">
      <summary>서버에서 보낸 경고 컬렉션을 가져옵니다.</summary>
      <returns>서버에서 보낸 경고 컬렉션입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Message">
      <summary>데이터베이스에서 보낸 오류의 전체 텍스트를 가져옵니다.</summary>
      <returns>오류의 전체 텍스트입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Source">
      <summary>오류를 생성한 개체의 이름을 가져옵니다.</summary>
      <returns>오류를 생성한 개체의 이름입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlInfoMessageEventArgs.ToString">
      <summary>이 <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> 이벤트의 문자열 표현을 검색합니다.</summary>
      <returns>
        <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> 이벤트를 나타내는 문자열을 반환합니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlInfoMessageEventHandler">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlConnection" />의 <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트 소스입니다. </param>
      <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Data.SqlClient.SqlInfoMessageEventArgs" /> 개체입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlParameter">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 매개 변수를 나타내고 <see cref="T:System.Data.DataSet" /> 열에 대한 매개 변수의 매핑을 선택적으로 나타냅니다.이 클래스는 상속될 수 없습니다.매개 변수에 대한 자세한 내용은 매개 변수 및 매개 변수 데이터 형식 구성을 참조하십시오.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)">
      <summary>매개 변수 이름과 데이터 형식을 사용하는 <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parameterName">매핑할 매개 변수의 이름입니다. </param>
      <param name="dbType">
        <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dbType" /> 매개 변수에 제공된 값이 잘못된 백 엔드 데이터 형식인 경우 </exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>매개 변수 이름, <see cref="T:System.Data.SqlDbType" /> 및 크기를 사용하는 <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parameterName">매핑할 매개 변수의 이름입니다. </param>
      <param name="dbType">
        <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다. </param>
      <param name="size">매개 변수의 길이입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dbType" /> 매개 변수에 제공된 값이 잘못된 백 엔드 데이터 형식인 경우 </exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>매개 변수 이름, <see cref="T:System.Data.SqlDbType" />, 크기 및 소스 열 이름을 사용하는 <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parameterName">매핑할 매개 변수의 이름입니다. </param>
      <param name="dbType">
        <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다. </param>
      <param name="size">매개 변수의 길이입니다. </param>
      <param name="sourceColumn">이 <see cref="T:System.Data.SqlClient.SqlParameter" />가 <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />에 대한 호출에 사용된 경우 소스 열(<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />)의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dbType" /> 매개 변수에 제공된 값이 잘못된 백 엔드 데이터 형식인 경우 </exception>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)">
      <summary>매개 변수 이름과 새 <see cref="T:System.Data.SqlClient.SqlParameter" />의 값을 사용하는 <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parameterName">매핑할 매개 변수의 이름입니다. </param>
      <param name="value">
        <see cref="T:System.Data.SqlClient.SqlParameter" />의 값이 되는 <see cref="T:System.Object" />입니다. </param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.CompareInfo">
      <summary>이 매개 변수에 대해 수행될 문자열 비교 방식을 정의하는 <see cref="T:System.Globalization.CompareInfo" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>이 매개 변수의 문자열 비교 방식을 정의하는 <see cref="T:System.Globalization.CompareInfo" /> 개체입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.DbType">
      <summary>매개 변수의 <see cref="T:System.Data.SqlDbType" />을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다.기본값은 NVarChar입니다.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Direction">
      <summary>매개 변수가 입력 전용, 출력 전용, 양방향 또는 저장 프로시저의 반환 값 매개 변수인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다.기본값은 Input입니다.</returns>
      <exception cref="T:System.ArgumentException">속성이 유효한 <see cref="T:System.Data.ParameterDirection" /> 값 중의 하나로 설정되지 않은 경우</exception>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.IsNullable">
      <summary>매개 변수가 null 값을 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.<see cref="P:System.Data.SqlClient.SqlParameter.IsNullable" />는 매개 변수 값의 유효성을 확인하는 데 사용되지 않으며 명령을 실행할 때 null 값을 보내거나 받는 것을 방지하지 못합니다.</summary>
      <returns>null 값이 허용되면 true이고, 그렇지 않으면 false입니다.기본값은 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.LocaleId">
      <summary>특정 영역의 규칙과 언어를 결정하는 로캘 식별자를 가져오거나 설정합니다.</summary>
      <returns>매개 변수와 관련된 로캘 식별자를 반환합니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Offset">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 속성에 대한 오프셋을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlParameter.Value" />에 대한 오프셋입니다.기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.ParameterName">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameter" />의 이름을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameter" />의 이름입니다.기본값은 빈 문자열입니다.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Precision">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 속성을 나타내는 데 사용된 숫자의 최대 자릿수를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 속성을 나타내는 데 사용된 숫자의 최대 자릿수입니다.기본값은 0입니다.이는 데이터 공급자가 <see cref="P:System.Data.SqlClient.SqlParameter.Value" />에 대한 자릿수를 설정한다는 것을 나타냅니다.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.ResetDbType">
      <summary>이 <see cref="T:System.Data.SqlClient.SqlParameter" />와 연결된 형식을 다시 설정합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.ResetSqlDbType">
      <summary>이 <see cref="T:System.Data.SqlClient.SqlParameter" />와 연결된 형식을 다시 설정합니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Scale">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlParameter.Value" />를 확인하는 소수 자릿수의 수를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlParameter.Value" />를 확인하는 소수 자릿수의 수입니다.기본값은 0입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Size">
      <summary>열 내부에 있는 데이터의 최대 크기를 바이트 단위로 가져오거나 설정합니다.</summary>
      <returns>열 내부에 있는 데이터의 최대 크기(바이트)입니다.기본값은 매개 변수 값에서 유추됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SourceColumn">
      <summary>
        <see cref="T:System.Data.DataSet" />에 매핑되어 <see cref="P:System.Data.SqlClient.SqlParameter.Value" />를 로드하거나 반환하기 위해 사용된 소스 열의 이름을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.DataSet" />에 매핑된 소스 열의 이름입니다.기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping">
      <summary>소스 열에서 null을 허용하는지 여부를 나타내는 값을 설정하거나 가져옵니다.이렇게 하면 <see cref="T:System.Data.SqlClient.SqlCommandBuilder" />에서 null 허용 열에 사용할 Update 문을 올바르게 생성할 수 있습니다.</summary>
      <returns>소스 열에서 null을 허용하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SqlDbType">
      <summary>매개 변수의 <see cref="T:System.Data.SqlDbType" />을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다.기본값은 NVarChar입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SqlValue">
      <summary>매개 변수의 값을 SQL 형식으로 가져오거나 설정합니다.</summary>
      <returns>매개 변수의 값인 <see cref="T:System.Object" />이며 SQL 형식을 사용합니다.기본값은 null입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.ToString">
      <summary>
        <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />이 들어 있는 문자열을 가져옵니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />이 들어 있는 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.TypeName">
      <summary>테이블 변환 매개 변수의 형식 이름을 가져오거나 설정합니다.</summary>
      <returns>지정된 테이블 변환 매개 변수의 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Value">
      <summary>매개 변수의 값을 가져오거나 설정합니다.</summary>
      <returns>매개 변수의 값인 <see cref="T:System.Object" />입니다.기본값은 null입니다.</returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase">
      <summary>이 XML 인스턴스의 스키마 컬렉션이 있는 데이터베이스 이름을 가져옵니다.</summary>
      <returns>이 XML 인스턴스의 스키마 컬렉션이 있는 데이터베이스 이름입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName">
      <summary>이 XML 인스턴스에 대한 스키마 컬렉션의 이름을 가져옵니다.</summary>
      <returns>이 XML 인스턴스에 대한 스키마 컬렉션의 이름입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema">
      <summary>이 XML 인스턴스에 대한 스키마 컬렉션이 위치한 소유하고 있는 관계형 스키마입니다.</summary>
      <returns>이 XML 인스턴스에 대해 소유하는 관계형 스키마입니다.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Data.SqlClient.SqlParameterCollection">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlCommand" />와 연결된 매개 변수의 컬렉션과 <see cref="T:System.Data.DataSet" />의 열에 대한 개별 매핑을 나타냅니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.Data.SqlClient.SqlParameter)">
      <summary>지정된 <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체를 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 추가합니다.</summary>
      <returns>새 <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체입니다.</returns>
      <param name="value">컬렉션에 추가할 <see cref="T:System.Data.SqlClient.SqlParameter" />입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 매개 변수에 지정된 <see cref="T:System.Data.SqlClient.SqlParameter" />가 이미 현재 또는 다른 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 추가되어 있는 경우 </exception>
      <exception cref="T:System.InvalidCastException">전달된 매개 변수가 <see cref="T:System.Data.SqlClient.SqlParameter" />가 아닌 경우 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 매개 변수가 null인 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.Object)">
      <summary>지정된 <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체를 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 추가합니다.</summary>
      <returns>새 <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체의 인덱스입니다.</returns>
      <param name="value">
        <see cref="T:System.Object" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameter" />를 매개 변수 이름과 데이터 형식이 지정된 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 추가합니다.</summary>
      <returns>새 <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체입니다.</returns>
      <param name="parameterName">매개 변수의 이름입니다. </param>
      <param name="sqlDbType">
        <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>지정된 매개 변수 이름, <see cref="T:System.Data.SqlDbType" /> 및 크기가 제공된 경우 <see cref="T:System.Data.SqlClient.SqlParameter" />를 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 추가합니다.</summary>
      <returns>새 <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체입니다.</returns>
      <param name="parameterName">매개 변수의 이름입니다. </param>
      <param name="sqlDbType">컬렉션에 추가할 <see cref="T:System.Data.SqlClient.SqlParameter" />의 <see cref="T:System.Data.SqlDbType" />입니다. </param>
      <param name="size">
        <see cref="T:System.Int32" />로 나타낸 크기입니다</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.AddRange(System.Array)">
      <summary>값의 배열을 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 끝에 추가합니다.</summary>
      <param name="values">추가할 <see cref="T:System.Array" /> 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.AddRange(System.Data.SqlClient.SqlParameter[])">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> 값의 배열을 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 끝에 추가합니다.</summary>
      <param name="values">추가할 <see cref="T:System.Data.SqlClient.SqlParameter" /> 값입니다.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>값을 <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> 끝에 추가합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체</returns>
      <param name="parameterName">매개 변수의 이름입니다.</param>
      <param name="value">추가할 값입니다.null 값을 나타내기 위해 null 대신 <see cref="F:System.DBNull.Value" />를 사용합니다.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Clear">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에서 <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.Data.SqlClient.SqlParameter)">
      <summary>지정된 <see cref="T:System.Data.SqlClient.SqlParameter" />가 이 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 있는지 여부를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 값이 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">
        <see cref="T:System.Data.SqlClient.SqlParameter" /> 값</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.Object)">
      <summary>지정된 <see cref="T:System.Object" />가 이 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 있는지 여부를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 값이 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">
        <see cref="T:System.Object" /> 값</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.String)">
      <summary>지정된 매개 변수 이름이 이 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 있는지 여부를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 값이 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">
        <see cref="T:System.String" /> 값</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>현재 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />의 모든 요소를 지정된 대상 <see cref="T:System.Array" /> 인덱스에서 시작하여 지정된 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">현재 <see cref="T:System.Array" />에서 복사한 요소의 대상인 1차원 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />입니다.</param>
      <param name="index">복사가 시작되는 <see cref="T:System.Array" />의 인덱스를 나타내는 32비트 정수입니다.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Data.SqlClient.SqlParameter[],System.Int32)">
      <summary>현재 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />의 모든 요소를 지정된 대상 인덱스에서 시작하여 지정된 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 복사합니다.</summary>
      <param name="array">현재 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에서 복사한 요소의 대상인 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />입니다.</param>
      <param name="index">복사가 시작되는 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />의 인덱스를 나타내는 32비트 정수입니다.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Count">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />의 요소 수가 포함된 정수를 반환합니다.읽기 전용입니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />의 요소 수를 나타내는 정수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />을 반복하는 열거자를 반환합니다. </summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 대한 <see cref="T:System.Collections.IEnumerator" />입니다. </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Data.SqlClient.SqlParameter)">
      <summary>컬렉션 내의 지정된 <see cref="T:System.Data.SqlClient.SqlParameter" />의 위치를 가져옵니다.</summary>
      <returns>컬렉션 내의 <see cref="T:System.Data.SqlClient.SqlParameter" />인 지정된 <see cref="T:System.Data.SqlClient.SqlParameter" />의 위치(0부터 시작)입니다.개체가 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 없으면 -1을 반환합니다.</returns>
      <param name="value">찾을 <see cref="T:System.Data.SqlClient.SqlParameter" />입니다. </param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Object)">
      <summary>컬렉션 내의 지정된 <see cref="T:System.Object" />의 위치를 가져옵니다.</summary>
      <returns>컬렉션 내의 <see cref="T:System.Data.SqlClient.SqlParameter" />인 지정된 <see cref="T:System.Object" />의 위치(0부터 시작)입니다.개체가 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 없으면 -1을 반환합니다.</returns>
      <param name="value">찾을 <see cref="T:System.Object" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.String)">
      <summary>지정된 이름을 가진 지정된 <see cref="T:System.Data.SqlClient.SqlParameter" />의 위치를 가져옵니다.</summary>
      <returns>지정된 이름(대/소문자 구분)을 가진 지정된 <see cref="T:System.Data.SqlClient.SqlParameter" />의 위치이며 0부터 시작합니다.개체가 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 없으면 -1을 반환합니다.</returns>
      <param name="parameterName">찾을 <see cref="T:System.Data.SqlClient.SqlParameter" />의 이름(대/소문자 구분)입니다.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Data.SqlClient.SqlParameter)">
      <summary>지정된 인덱스에 있는 <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체를 삽입합니다.</summary>
      <param name="index">값을 삽입해야 하는 인덱스(0부터 시작)입니다.</param>
      <param name="value">
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 삽입할 <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체입니다.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />의 지정된 인덱스에 <see cref="T:System.Object" />를 삽입합니다.</summary>
      <param name="index">값을 삽입해야 하는 인덱스(0부터 시작)입니다.</param>
      <param name="value">
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 삽입할 <see cref="T:System.Object" />입니다.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Item(System.Int32)">
      <summary>지정된 인덱스의 <see cref="T:System.Data.SqlClient.SqlParameter" />를 가져옵니다.</summary>
      <returns>지정된 인덱스에 있는 <see cref="T:System.Data.SqlClient.SqlParameter" />입니다.</returns>
      <param name="index">검색할 매개 변수의 인덱스(0부터 시작)입니다. </param>
      <exception cref="T:System.IndexOutOfRangeException">지정된 인덱스가 없는 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Item(System.String)">
      <summary>지정된 이름의 <see cref="T:System.Data.SqlClient.SqlParameter" />를 가져옵니다.</summary>
      <returns>지정된 이름을 가진 <see cref="T:System.Data.SqlClient.SqlParameter" />입니다.</returns>
      <param name="parameterName">검색할 매개 변수의 이름입니다. </param>
      <exception cref="T:System.IndexOutOfRangeException">지정된 <paramref name="parameterName" />가 잘못된 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Remove(System.Data.SqlClient.SqlParameter)">
      <summary>컬렉션에서 지정된 <see cref="T:System.Data.SqlClient.SqlParameter" />를 제거합니다.</summary>
      <param name="value">컬렉션에서 제거할 <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체입니다. </param>
      <exception cref="T:System.InvalidCastException">매개 변수가 <see cref="T:System.Data.SqlClient.SqlParameter" />가 아닌 경우 </exception>
      <exception cref="T:System.SystemException">컬렉션에 매개 변수가 없는 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Remove(System.Object)">
      <summary>컬렉션에서 지정된 <see cref="T:System.Data.SqlClient.SqlParameter" />를 제거합니다.</summary>
      <param name="value">컬렉션에서 제거할 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에서 지정된 인덱스에 있는 <see cref="T:System.Data.SqlClient.SqlParameter" />를 제거합니다.</summary>
      <param name="index">제거할 <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체의 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.String)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에서 지정된 매개 변수 이름을 가진 <see cref="T:System.Data.SqlClient.SqlParameter" />를 제거합니다.</summary>
      <param name="parameterName">제거할 <see cref="T:System.Data.SqlClient.SqlParameter" />의 이름입니다.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.SyncRoot">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다. </summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlParameterCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlTransaction">
      <summary>SQL Server 데이터베이스에 만들 Transact-SQL 트랜잭션을 나타냅니다.이 클래스는 상속될 수 없습니다.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Commit">
      <summary>데이터베이스 트랜잭션을 커밋합니다.</summary>
      <exception cref="T:System.Exception">트랜잭션을 커밋하는 동안 오류가 발생한 경우 </exception>
      <exception cref="T:System.InvalidOperationException">트랜잭션이 이미 커밋되거나 롤백된 경우또는 연결이 끊어진 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlClient.SqlTransaction.Connection">
      <summary>트랜잭션과 관련된 <see cref="T:System.Data.SqlClient.SqlConnection" /> 개체를 가져오거나 트랜잭션이 더 이상 유효하지 않으면 null입니다.</summary>
      <returns>트랜잭션과 관련된 <see cref="T:System.Data.SqlClient.SqlConnection" /> 개체입니다.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
      <summary>이 트랜잭션에 대한 <see cref="T:System.Data.IsolationLevel" />을 지정합니다.</summary>
      <returns>이 트랜잭션에 대한 <see cref="T:System.Data.IsolationLevel" />입니다.기본값은 ReadCommitted입니다.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Rollback">
      <summary>보류 중인 상태에서 트랜잭션을 롤백합니다.</summary>
      <exception cref="T:System.Exception">트랜잭션을 커밋하는 동안 오류가 발생한 경우 </exception>
      <exception cref="T:System.InvalidOperationException">트랜잭션이 이미 커밋되거나 롤백된 경우또는 연결이 끊어진 경우 </exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy, ControlAppDomain" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Data.SqlClient.SqlClientPermission, System.Data, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
      <summary>트랜잭션을 보류 상태에서 롤백하고, 트랜잭션이나 저장점 이름을 지정합니다.</summary>
      <param name="transactionName">롤백할 트랜잭션 또는 롤백될 저장점의 이름입니다. </param>
      <exception cref="T:System.ArgumentException">트랜잭션 이름이 지정되지 않은 경우 </exception>
      <exception cref="T:System.InvalidOperationException">트랜잭션이 이미 커밋되거나 롤백된 경우또는 연결이 끊어진 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
      <summary>트랜잭션의 일부를 롤백하는 데 사용할 수 있는 트랜잭션에 저장점을 만들고, 저장점 이름을 지정합니다.</summary>
      <param name="savePointName">저장점의 이름입니다. </param>
      <exception cref="T:System.Exception">트랜잭션을 커밋하는 동안 오류가 발생한 경우 </exception>
      <exception cref="T:System.InvalidOperationException">트랜잭션이 이미 커밋되거나 롤백된 경우또는 연결이 끊어진 경우 </exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary>모든 <see cref="N:System.Data.SqlTypes" /> 개체 및 구조체는 INullable 인터페이스를 구현합니다. </summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary>구조체가 null인지 여부를 나타냅니다.이 속성은 읽기 전용입니다.</summary>
      <returns>이 개체의 값이 null이면 <see cref="T:System.Data.SqlTypes.SqlBoolean" />true입니다.그렇지 않은 경우에는 false입니다.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary>데이터베이스에서 저장하거나 검색할 이진 데이터의 가변 길이 스트림을 나타냅니다. </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary>
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 속성을 제공된 바이트 배열의 내용으로 설정하여 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">저장하거나 검색할 바이트 배열입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 개의 지정된 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 값을 연결하여 새 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 만듭니다.</summary>
      <returns>X와 Y가 연결된 값인 <see cref="T:System.Data.SqlTypes.SqlBinary" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체를 제공된 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체의 값은 개체보다 작습니다. Zero <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체는 개체와 동일합니다. 0보다 큼 이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체는 개체보다 큽니다.또는 이 개체는 null 참조입니다. </returns>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체와 비교할 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체를 제공된 개체와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체의 값은 개체보다 작습니다. Zero <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체는 개체와 동일합니다. 0보다 큼 이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체는 개체보다 큽니다.또는 이 개체는 null 참조입니다. </returns>
      <param name="value">이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체와 비교할 개체입니다. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 연결하여 새 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 만듭니다.</summary>
      <returns>
        <paramref name="x" />와 <paramref name="y" /> 매개 변수를 연결한 값입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체가 동일한지 비교합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.인스턴스 중 하나가 null이면 SqlBinary가 null이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary>제공된 개체 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체의 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 속성과 비교합니다.</summary>
      <returns>개체가 <see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스이고 둘이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">비교할 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체의 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체가 null인지 여부를 나타냅니다.이 속성은 읽기 전용입니다.</summary>
      <returns> null이면 true입니다.그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary>정수 매개 변수인 <paramref name="index" />가 가리키는 위치에 있는 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 속성에서 싱글 바이트를 가져옵니다.<paramref name="index" />가 바이트 배열의 끝을 넘어선 위치를 가리키면 <see cref="T:System.Data.SqlTypes.SqlNullValueException" />가 발생합니다.이 속성은 읽기 전용입니다.</summary>
      <returns>정수 매개 변수가 가리키는 위치에 있는 바이트입니다.</returns>
      <param name="index">검색할 바이트의 위치입니다. </param>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 속성에 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />이 포함되어 있을 때 속성을 읽는 경우- 또는 - <paramref name="index" /> 매개 변수가 <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> 속성이 가리키는 것처럼 바이트 배열의 길이를 넘어선 위치를 가리키는 경우 </exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary>
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 속성의 길이(바이트 단위)를 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 속성에 있는 이진 데이터의 길이입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 속성에 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />이 포함되어 있을 때 <see cref="P:System.Data.SqlTypes.SqlBinary.Length" /> 속성을 읽는 경우 </exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체가 동일하지 않은지 비교합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.DBNull" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 매개 변수를 연결하여 새 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 만듭니다.</summary>
      <returns>
        <paramref name="x" />와 <paramref name="y" /> 매개 변수를 연결한 값입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체 </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체 </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체가 동일한지 비교합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체 </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체 </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 <see cref="T:System.Byte" /> 배열로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Byte" /> 배열입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체로 변환합니다.</summary>
      <returns>변환할 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체 </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체 </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체 </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체 </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary>바이트 배열을 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체로 변환합니다.</summary>
      <returns>변환된 바이트 배열을 나타내는 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</returns>
      <param name="x">변환될 바이트 배열입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체가 동일하지 않은지 비교합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체 </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체 </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체 </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체 </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlBinary" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체 </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체 </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" />의 이 인스턴스를 <see cref="T:System.Data.SqlTypes.SqlGuid" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 개체를 문자열로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" />의 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />를 포함하는 문자열입니다.<see cref="P:System.Data.SqlTypes.SqlBinary.Value" />가 null이면 "null"이 문자열에 포함됩니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체의 값을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체의 값입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">속성에 <see cref="F:System.Data.SqlTypes.SqlBinary.Null" />이 포함되어 있을 때 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> 속성을 읽는 경우 </exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary>데이터베이스에서 저장하거나 검색할 정수 값(0 또는 1)을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary>제공된 부울 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값(true 또는 false)입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary>지정된 정수 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체에 사용할 값이 있는 정수입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>지정된 두 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 비트 AND 연산을 계산합니다.</summary>
      <returns>논리 AND 연산의 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값을 바이트 형식으로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값을 나타내는 바이트입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 개체를 제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 개체와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 값의 상대 값을 나타내는 부호 있는 숫자입니다.값 설명 음의 정수 이 인스턴스는 <paramref name="value" />보다 작습니다. Zero 이 인스턴스가 <paramref name="value" />와 같습니다. 양의 정수 이 인스턴스는 <paramref name="value" />보다 큽니다.또는 <paramref name="value" />가 null 참조(Visual Basic의 경우 Nothing)인 경우 </returns>
      <param name="value">비교할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /><see cref="T:System.Data.SqlTypes.SqlBoolean" /> 개체 또는 null 참조(Visual Basic에서는 Nothing)입니다.  </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 지정된 개체와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 값의 상대 값을 나타내는 부호 있는 숫자입니다.값 설명 음의 정수 이 인스턴스는 <paramref name="value" />보다 작습니다. Zero 이 인스턴스가 <paramref name="value" />와 같습니다. 양의 정수 이 인스턴스는 <paramref name="value" />보다 큽니다.또는 <paramref name="value" />가 null 참조(Visual Basic의 경우 Nothing)인 경우 </returns>
      <param name="value">비교할 개체 또는 null 참조(Visual Basic에서는 Nothing)입니다. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체가 동일한지 비교합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary>제공된 개체 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />과 비교합니다.</summary>
      <returns>개체가 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 인스턴스이고 둘이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">비교할 개체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 속성에 할당할 수 있는 False 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 true이고, 그렇지 않으면 false인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다. </returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GreaterThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 true이고, 그렇지 않으면 false인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary>현재 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />가 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인지 여부를 나타냅니다.</summary>
      <returns>Value가 False이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체가 null인지 여부를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체가 null이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary>현재 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />가 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인지 여부를 나타냅니다.</summary>
      <returns>Value가 True이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 true이고, 그렇지 않으면 false인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.LessThanOrEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 true이고, 그렇지 않으면 false인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 같은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체 인스턴스에 대해 할당할 수 있는 <see cref="T:System.DBNull" />을 나타냅니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 속성에 할당할 수 있는 1 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체에 대해 1의 보수 연산을 수행합니다.</summary>
      <returns>제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" />에 대한 1의 보수입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>지정된 두 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 비트 AND 연산을 계산합니다.</summary>
      <returns>논리 AND 연산의 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>피연산자의 비트 OR를 계산합니다.</summary>
      <returns>논리 OR 연산의 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 같은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>제공된 매개 변수에 대해 비트 배타적 OR(비트 XOR) 연산을 수행합니다.</summary>
      <returns>논리 XOR 연산의 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />을 부울로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />으로 설정된 부울입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />와 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlByte" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlDecimal" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlInt16" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlInt32" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 속성과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체로 변환될 <see cref="T:System.Data.SqlTypes.SqlString" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary>False 연산자는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />를 테스트하여 False인지 여부를 확인하는 데 사용할 수 있습니다.</summary>
      <returns>제공된 매개 변수 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이 false이면 true를 반환하고, 그렇지 않으면 false를 반환합니다.</returns>
      <param name="x">테스트할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 true이고, 그렇지 않으면 false인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다. </returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 개체 </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 개체 </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 true이고, 그렇지 않으면 false인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다. </returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary>제공된 바이트 값을 <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 변환합니다.</summary>
      <returns>0 또는 1을 포함하는 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 값입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />로 변환될 바이트 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 true이고, 그렇지 않으면 false인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 true이고, 그렇지 않으면 false인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />에 대해 NOT 연산을 수행합니다.</summary>
      <returns>인수가 true이면 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 인수가 null이면 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.</returns>
      <param name="x">NOT 연산을 수행할 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체에 대해 1의 보수 연산을 수행합니다.</summary>
      <returns>제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" />에 대한 1의 보수입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary>true 연산자는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />를 테스트하여 true인지 여부를 확인하는 데 사용할 수 있습니다.</summary>
      <returns>제공된 매개 변수 <see cref="T:System.Data.SqlTypes.SqlBoolean" />이 true이면 true를 반환하고, 그렇지 않으면 false를 반환합니다.</returns>
      <param name="x">테스트할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>지정된 두 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체에 대해 비트 OR 연산을 수행합니다.</summary>
      <returns>비트 OR 연산의 결과에 해당하는 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary>논리 값의 지정된 <see cref="T:System.String" /> 표현을 같은 값의 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns>구문 분석된 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.</returns>
      <param name="s">변환될 <see cref="T:System.String" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <returns>값이 1 또는 0인 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 true이면 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 값은 1입니다.그렇지 않으면 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 값은 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns>값이 1 또는 0인 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 true이면 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값은 1입니다.그렇지 않으면 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값은 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <returns>값이 1 또는 0인 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 true이면 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 값은 1입니다.그렇지 않으면 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 값은 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns>값이 1 또는 0인 새 SqlInt16 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 true이면 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 값은 1입니다.그렇지 않으면 새 SqlInt16 구조체의 값은 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <returns>값이 1 또는 0인 새 SqlInt32 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 true이면 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 값은 1입니다.그렇지 않으면 새 SqlInt32 구조체의 값은 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <returns>값이 1 또는 0인 새 SqlInt64 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 true이면 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체의 값은 1입니다.그렇지 않으면 새 SqlInt64 구조체의 값은 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <returns>값이 1 또는 0인 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 true이면 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 값은 1입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 false이면 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 값은 0입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 1과 0이 아니면 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 값은 <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <returns>값이 1 또는 0인 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 true이면 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 값은 1이고, 그렇지 않으면 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 값은 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns>값이 1 또는 0인 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 true 이면  <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 값은 1입니다.그렇지 않으면 새 <see cref="T:System.Data.SqlTypes.SqlString" />  구조체의 값은 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 문자열로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 값을 포함하는 문자열입니다.값이 null이면 "null"이 문자열에 포함됩니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> 속성에 할당할 수 있는 True 값을 나타냅니다.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />이 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이면 true이고, 그렇지 않으면 false입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">이 속성이 null로 설정되어 있는 경우 </exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <returns>논리 XOR 연산의 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary>데이터베이스에서 저장하거나 검색할 8비트 부호 없는 정수를 나타내며, 값 범위는 0 ~ 255입니다. </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary>지정된 바이트 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성에 저장될 바이트 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>지정된 두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 합계를 계산합니다.</summary>
      <returns>덧셈 결과를 포함하는 Value 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <returns>비트 AND 연산의 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자의 비트 OR를 계산합니다.</summary>
      <returns>비트 OR 연산의 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)">
      <summary>이 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 개체와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교할 <see cref="T:System.Data.SqlTypes.SqlByte" /> 개체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary>이 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Object" />입니다.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자를 두 번째 피연산자로 나눕니다.</summary>
      <returns>나눗셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.인스턴스 중 하나가 null이면 SqlByte가 null이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary>제공된 <see cref="T:System.Object" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlByte" /> 개체의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성과 비교합니다.</summary>
      <returns>개체가 <see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스이고 둘이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">비교될 <see cref="T:System.Object" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체가 null인지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns>null이면 true이고,그렇지 않은 경우에는 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 최소값을 나타내는 상수입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자를 두 번째 피연산자로 나눈 다음 그 나머지를 계산합니다.</summary>
      <returns>나머지를 포함하는 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlByte" /> 값을 나눈 다음 나머지를 반환합니다.</summary>
      <returns>나누기 후 나머지 연산을 <paramref name="x" />와 <paramref name="y" />에 대해 수행합니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자의 곱을 계산합니다.</summary>
      <returns>해당 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성에 곱셈 결과를 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.DBNull" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>1의 보수 연산자는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수에 대한 1의 보수를 포함하는 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>지정된 두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 합계를 계산합니다.</summary>
      <returns>두 피연산자의 합계를 포함하는 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <returns>비트 AND 연산의 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자의 비트 OR를 계산합니다.</summary>
      <returns>비트 OR 연산의 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자를 두 번째 피연산자로 나눕니다.</summary>
      <returns>나눗셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <returns>비트 배타적 OR 연산의 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <returns>제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />와 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환될 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 바이트로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성과 같은 값을 갖는 바이트입니다.</returns>
      <param name="x">바이트로 변환될 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" />을 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" />을 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" />을 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" />을 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <returns>SqlInt64 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">SqlMoney 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlString" />을 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" />이 나타내는 숫자 값과 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">SqlString 클래스의 인스턴스입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, SqlBoolean의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary>제공된 바이트 값을 <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환합니다.</summary>
      <returns>제공된 매개 변수와 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" />로 변환될 바이트 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlByte" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자를 두 번째 피연산자로 나눈 다음 그 나머지를 계산합니다.</summary>
      <returns>나머지를 포함하는 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자의 곱을 계산합니다.</summary>
      <returns>해당 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성에 곱셈 결과를 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>1의 보수 연산자는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수에 대한 1의 보수를 포함하는 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에서 두 번째 피연산자를 뺍니다.</summary>
      <returns>첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에서 두 번째 피연산자를 뺀 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary>숫자의 <see cref="T:System.String" /> 표현을 해당하는 부호 없는 8비트 정수로 변환합니다.</summary>
      <returns>String 매개 변수가 나타내는 8비트 숫자를 포함하는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.</returns>
      <param name="s">구문 분석할 String입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에서 두 번째 피연산자를 뺍니다.</summary>
      <returns>첫 번째 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에서 두 번째 피연산자를 뺀 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlByte.Value" />가 0이 아니면 true이고, 0이면 false이고, 그렇지 않으면 Null입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />를 갖는 SqlDecimal 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" />와 같은 값을 갖는 SqlDouble 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlByte" />와 같은 값을 갖는 SqlInt16 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlByte" />를 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlByte" />와 같은 값을 갖는 SqlInt32 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />를 갖는 SqlInt64 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />를 갖는 SqlMoney 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체와 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />를 갖는 SqlSingle 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 이 인스턴스를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />에 대한 문자열 표현을 포함하는 SqlString입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" />의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />를 포함하는 문자열입니다.Value이 null인 경우, String은 null 문자열이 됩니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 값을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <returns>XOR 연산의 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBytes">
      <summary>
        <see cref="P:System.Data.SqlTypes.SqlBytes.Buffer" /> 또는 <see cref="P:System.Data.SqlTypes.SqlBytes.Stream" />을 래핑하는 변경 가능한 참조 형식을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])">
      <summary>지정된 바이트 배열을 기반으로 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="buffer">부호 없는 바이트 배열입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 값을 기반으로 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)">
      <summary>지정된 <see cref="T:System.IO.Stream" /> 값을 기반으로 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="s">
        <see cref="T:System.IO.Stream" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Buffer">
      <summary>내부 버퍼에 대한 참조를 반환합니다. </summary>
      <returns>내부 버퍼에 대한 참조를 반환합니다.관리되지 않는 포인터의 맨 위에 만들어진 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스의 경우 내부 버퍼의 관리되는 복사본을 반환합니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.IsNull">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" />가 null인지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBytes" />가 null이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)">
      <summary>지정한 인덱스에 있는 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Byte" /> 값입니다. </returns>
      <param name="offset">
        <see cref="T:System.Int64" /> 값입니다.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Length">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스에 포함되어 있는 값의 길이를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스에 포함되어 있는 값의 길이를 나타내는 <see cref="T:System.Int64" /> 값입니다. 인스턴스에 사용할 수 있는 버퍼가 없거나 값이 null이면 -1을 반환합니다. 스트림 래핑된 인스턴스의 경우 <see cref="P:System.IO.Stream.Length" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.MaxLength">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" />의 내부 버퍼 값에 대한 최대 길이를 가져옵니다.</summary>
      <returns>내부 버퍼에 대한 값의 최대 길이를 나타내는 long 값입니다.스트림 래핑된 <see cref="T:System.Data.SqlTypes.SqlBytes" />의 경우 -1을 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" />의 null 인스턴스를 반환합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlBytes.IsNull" />이 true를 반환하는 경우와 마찬가지로 인스턴스를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 구조체로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 구조체입니다.</returns>
      <param name="value">변환할 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 구조체입니다.</returns>
      <param name="value">변환할 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스의 바이트를 전달된 버퍼로 복사한 다음 복사된 바이트의 수를 반환합니다.</summary>
      <returns>복사된 바이트의 수를 나타내는 <see cref="T:System.Int64" /> long 값입니다.</returns>
      <param name="offset">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스에 포함된 값의 <see cref="T:System.Int64" /> long 값 오프셋입니다.</param>
      <param name="buffer">복사할 바이트 배열 버퍼입니다.</param>
      <param name="offsetInBuffer">복사를 시작할 버퍼의 <see cref="T:System.Int32" /> 정수 오프셋입니다.</param>
      <param name="count">복사할 바이트 수를 나타내는 <see cref="T:System.Int32" /> 정수입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스의 길이를 설정합니다.</summary>
      <param name="value">길이를 나타내는 <see cref="T:System.Int64" /> long 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.SetNull">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스를 null로 설정합니다.</summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Stream">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" />의 데이터를 스트림으로 가져오거나 설정합니다.</summary>
      <returns>SqlBytes 데이터가 들어 있는 스트림입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.ToSqlBinary">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스로부터 <see cref="T:System.Data.SqlTypes.SqlBinary" />를 생성하고 반환합니다.</summary>
      <returns>이 인스턴스의 <see cref="T:System.Data.SqlTypes.SqlBinary" />입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBytes.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBytes" />가 보유하고 있는 값의 관리되는 복사본을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBytes" />의 값(바이트 배열)입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>전달된 버퍼의 바이트를 이 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스로 복사합니다.</summary>
      <param name="offset">
        <see cref="T:System.Data.SqlTypes.SqlBytes" /> 인스턴스에 포함된 값의 <see cref="T:System.Int64" /> long 값 오프셋입니다.</param>
      <param name="buffer">복사할 바이트 배열 버퍼입니다.</param>
      <param name="offsetInBuffer">복사를 시작할 버퍼의 <see cref="T:System.Int32" /> 정수 오프셋입니다.</param>
      <param name="count">복사할 바이트 수를 나타내는 <see cref="T:System.Int32" /> 정수입니다.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlChars">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" />는 <see cref="T:System.Char" /> 배열 또는 <see cref="T:System.Data.SqlTypes.SqlString" /> 인스턴스를 래핑하는 변경 가능한 참조 형식입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Char[])">
      <summary>지정된 문자 배열을 기반으로 <see cref="T:System.Data.SqlTypes.SqlChars" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="buffer">
        <see cref="T:System.Char" /> 배열입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.#ctor(System.Data.SqlTypes.SqlString)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlString" /> 값을 기반으로 <see cref="T:System.Data.SqlTypes.SqlChars" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Buffer">
      <summary>내부 버퍼에 대한 참조를 반환합니다. </summary>
      <returns>내부 버퍼에 대한 참조를 반환합니다.관리되지 않는 포인터의 맨 위에 만들어진 <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스의 경우 내부 버퍼의 관리되는 복사본을 반환합니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.IsNull">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" />가 null인지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlChars" />가 null이면 true입니다.그렇지 않은 경우에는 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Item(System.Int64)">
      <summary>지정한 인덱스에 있는 <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Char" /> 값입니다. </returns>
      <param name="offset">
        <see cref="T:System.Int64" /> 값입니다.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Length">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스에 포함되어 있는 값의 길이를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스에 포함되어 있는 값의 문자 길이를 나타내는 <see cref="T:System.Int64" /> 값입니다.인스턴스에 사용할 수 있는 버퍼가 없거나 값이 null이면 -1을 반환합니다. 스트림 래핑된 인스턴스의 경우 <see cref="P:System.IO.Stream.Length" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.MaxLength">
      <summary>내부 버퍼에서 보유할 수 있는 2바이트 문자 값의 최대 길이를 가져옵니다.</summary>
      <returns>내부 버퍼에 대한 2바이트 문자 값의 최대 길이를 나타내는 <see cref="T:System.Int64" /> 값입니다. 스트림 래핑된 <see cref="T:System.Data.SqlTypes.SqlChars" />의 경우 -1을 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" />의 null 인스턴스를 반환합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlChars.IsNull" />이 true를 반환하는 경우와 마찬가지로 인스턴스를 반환합니다.자세한 내용은 Null 값 처리을 참조하십시오.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlChars)~System.Data.SqlTypes.SqlString">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</returns>
      <param name="value">변환할 <see cref="T:System.Data.SqlTypes.SqlChars" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlChars">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlChars" /> 구조체로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 구조체입니다.</returns>
      <param name="value">변환할 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Read(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스의 문자를 전달된 버퍼로 복사한 다음 복사된 문자의 수를 반환합니다.</summary>
      <returns>복사된 바이트의 수를 나타내는 <see cref="T:System.Int64" />long 값입니다.</returns>
      <param name="offset">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스에 포함된 값의 <see cref="T:System.Int64" />long 값 오프셋입니다.</param>
      <param name="buffer">복사할 문자 배열 버퍼입니다.</param>
      <param name="offsetInBuffer">복사를 시작할 버퍼의 <see cref="T:System.Int32" /> 정수 오프셋입니다.</param>
      <param name="count">복사할 문자 수를 나타내는 <see cref="T:System.Int32" /> 정수 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetLength(System.Int64)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스의 길이를 설정합니다.</summary>
      <param name="value">길이를 나타내는 <see cref="T:System.Int64" />long 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.SetNull">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스를 null로 설정합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.ToSqlString">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스를 해당 <see cref="T:System.Data.SqlTypes.SqlString" /> 표현으로 변환합니다.</summary>
      <returns>이 형식의 <see cref="T:System.Data.SqlTypes.SqlString" /> 표현입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlChars.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlChars" />가 보유하고 있는 값의 관리되는 복사본을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlChars" />의 값(문자 배열)입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlChars.Write(System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>전달된 버퍼의 문자를 이 <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스로 복사합니다.</summary>
      <param name="offset">
        <see cref="T:System.Data.SqlTypes.SqlChars" /> 인스턴스에 포함된 값의 long 값 오프셋입니다.</param>
      <param name="buffer">복사할 문자 배열 버퍼입니다.</param>
      <param name="offsetInBuffer">복사를 시작할 버퍼의 <see cref="T:System.Int32" /> 정수 오프셋입니다.</param>
      <param name="count">복사할 문자 수를 나타내는 <see cref="T:System.Int32" /> 정수입니다.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 옵션 값을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary>영문자 값이 아닌 숫자 문자 값에 따라 정렬을 수행하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort2">
      <summary>이진 정렬을 수행합니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary>대/소문자를 무시하면서 <see cref="T:System.Data.SqlTypes.SqlString" /> 비교를 수행하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary>가나 형식을 무시하면서 <see cref="T:System.Data.SqlTypes.SqlString" /> 비교를 수행하도록 지정합니다.가나 형식은 일본어의 발성음을 표현하는 히라가나 문자와 가타카나 문자를 나타냅니다.히라가나는 일본 고유의 어구과 단어를 표현하는 데 사용되고, 가타카나는 "컴퓨터"나 "인터넷" 등과 같은 외래어를 표현하는 데 사용됩니다.발성음은 히라가나와 가타카나 모두로 표현할 수 있습니다.이 값이 선택되어 있으면 하나의 발성음에 대해 히라가나 문자와 가타카나 문자가 같은 것으로 간주됩니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary>분음 부호와 같이 공백 없는 조합 문자를 무시하면서 <see cref="T:System.Data.SqlTypes.SqlString" /> 비교를 수행하도록 지정합니다.유니코드 표준(Unicode Standard)에서 조합 문자는 기본 문자와 조합하여 새 문자를 만들어내는 문자로 정의됩니다.공백 없는 조합 문자를 렌더링할 때는 공백 문자가 사용되지 않습니다.공백 없는 조합 문자에 대한 자세한 내용은 http://www.unicode.org에서 Unicode Standard 부분을 참조하십시오.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary>문자 너비를 무시하면서 <see cref="T:System.Data.SqlTypes.SqlString" /> 비교를 수행하도록 지정합니다.예를 들어, 일본어의 가타카나 문자는 전자나 반자로 쓸 수 있는데, 이 값이 선택되어 있으면 전자로 쓰여진 가타카나 문자와 반자로 쓰여진 가타카나 문자가 같은 것으로 간주됩니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 비교의 기본 옵션 설정값을 지정합니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary>데이터베이스에서 검색할 날짜와 시간 데이터(1753년 1월 1일~9999년 12월 31)를 3.33밀리초의 정밀도로 나타냅니다.<see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체는 해당하는 .NET Framework 형식인 <see cref="T:System.DateTime" />과는 다른 내부 데이터 구조를 갖습니다. .NET Framework 형식은 12:00:00 AM(0001년 1월 1일)부터 11:59:59 PM(9999년 12월 31일)까지의 모든 시간을 100나노초의 정밀도로 나타낼 수 있습니다.<see cref="T:System.Data.SqlTypes.SqlDateTime" />은 실제로 00:00:00 AM(1900년 1월 1일)을 기준으로 상대적 차이를 저장합니다.그러므로 "00:00:00 AM(1900년 1월 1일)"을 정수로 변환하면 0이 반환됩니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary>지정된 <see cref="T:System.DateTime" /> 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">DateTime 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary>제공된 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="dayTicks">날짜를 틱 수로 나타내는 정수 값입니다. </param>
      <param name="timeTicks">시간을 틱 수로 나타내는 정수 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>제공된 매개 변수로 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 새 인스턴스를 초기화하여 새 구조체의 연, 월, 일을 초기화합니다.</summary>
      <param name="year">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 연도를 나타내는 정수 값입니다. </param>
      <param name="month">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 월을 나타내는 정수 값입니다. </param>
      <param name="day">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 일을 나타내는 정수 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>제공된 매개 변수로 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 새 인스턴스를 초기화하여 새 구조체의 연, 월, 일, 시, 분 및 초를 초기화합니다.</summary>
      <param name="year">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 연도를 나타내는 정수 값입니다. </param>
      <param name="month">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 월을 나타내는 정수 값입니다. </param>
      <param name="day">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 일을 나타내는 정수 값입니다. </param>
      <param name="hour">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 시를 나타내는 정수 값입니다. </param>
      <param name="minute">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 분을 나타내는 정수 값입니다. </param>
      <param name="second">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 초를 나타내는 정수 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>제공된 매개 변수로 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 새 인스턴스를 초기화하여 새 구조체의 연, 월, 일, 시, 분, 초 및 밀리초를 초기화합니다.</summary>
      <param name="year">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 연도를 나타내는 정수 값입니다. </param>
      <param name="month">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 월을 나타내는 정수 값입니다. </param>
      <param name="day">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 일을 나타내는 정수 값입니다. </param>
      <param name="hour">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 시를 나타내는 정수 값입니다. </param>
      <param name="minute">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 분을 나타내는 정수 값입니다. </param>
      <param name="second">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 초를 나타내는 정수 값입니다. </param>
      <param name="millisecond">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 밀리초를 나타내는 Double 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>제공된 매개 변수로 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 새 인스턴스를 초기화하여 새 구조체의 연, 월, 일, 시, 분, 초 및 빌리초를 초기화합니다.</summary>
      <param name="year">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 연도를 나타내는 정수 값입니다. </param>
      <param name="month">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 월을 나타내는 정수 값입니다. </param>
      <param name="day">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 일을 나타내는 정수 값입니다. </param>
      <param name="hour">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 시를 나타내는 정수 값입니다. </param>
      <param name="minute">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 분을 나타내는 정수 값입니다. </param>
      <param name="second">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 초를 나타내는 정수 값입니다. </param>
      <param name="bilisecond">새 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 빌리초(10억분의 1초)를 나타내는 정수 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>지정된 TimeSpan에 <see cref="T:System.Data.SqlTypes.SqlDateTime" />을 추가합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 값입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 값입니다.</param>
      <param name="t">Timespan 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체를 제공된 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스는 <see cref="T:System.Data.SqlTypes.SqlDateTime" />보다 작습니다. Zero 이 인스턴스는 <see cref="T:System.Data.SqlTypes.SqlDateTime" />과 같습니다. 0보다 큼 이 인스턴스는 <see cref="T:System.Data.SqlTypes.SqlDateTime" />보다 큽니다.또는 <see cref="T:System.Data.SqlTypes.SqlDateTime" />이 null 참조(Visual Basic의 경우 Nothing )입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic의 경우 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Object" />입니다. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 날짜를 나타내는 틱 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 속성에 포함된 날짜를 나타내는 틱 수입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <see cref="N:System.Data.SqlTypes" /> 구조체의 Value 속성이 null로 설정된 경우 throw되는 예외입니다.</exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary>제공된 개체 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 개체의 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 속성과 비교합니다.</summary>
      <returns>개체가 <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스이고 둘이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">비교할 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 가져옵니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체가 null인지 여부를 나타냅니다.</summary>
      <returns>null이면 true이고,그렇지 않은 경우에는 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 최대 유효 날짜 값을 나타냅니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 최소 유효 날짜 값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.DBNull" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>제공된 <see cref="T:System.TimeSpan" /> 매개 변수가 나타내는 시간인 <paramref name="t" />를 제공된 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체에 추가합니다.</summary>
      <returns>새 <see cref="T:System.Data.SqlTypes.SqlDateTime" />입니다.인수 중 하나가 <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />인 경우, 새 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />는 <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
      <param name="t">
        <see cref="T:System.TimeSpan" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체를 <see cref="T:System.DateTime" /> 구조체로 변환합니다.</summary>
      <returns>제공된 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 속성과 날짜 및 시간 값이 같은 <see cref="P:System.DateTime.Date" /> 및 <see cref="P:System.DateTime.TimeOfDay" /> 속성을 갖는 <see cref="T:System.DateTime" /> 개체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDateTime" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수가 나타내는 것과 날짜 및 시간이 같은 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />을 갖는 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlString" />이 null인 경우, 새로 만든 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 Value는 null이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary>
        <see cref="T:System.DateTime" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체로 변환합니다.</summary>
      <returns>제공된 <see cref="T:System.DateTime" /> 구조체의 조합된 <see cref="P:System.DateTime.Date" /> 및 <see cref="P:System.DateTime.TimeOfDay" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />을 갖는 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</returns>
      <param name="value">DateTime 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDateTime" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체에서 제공된 <see cref="T:System.TimeSpan" /> 구조체인 <paramref name="t" />를 뺍니다.</summary>
      <returns>뺄셈 결과를 나타내는 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
      <param name="t">
        <see cref="T:System.TimeSpan" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary>날짜와 시간의 지정된 <see cref="T:System.String" /> 표현을 같은 값의 <see cref="T:System.Data.SqlTypes.SqlDateTime" />으로 변환합니다.</summary>
      <returns>지정된 string이 나타내는 것과 날짜 및 시간이 같은 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다.</returns>
      <param name="s">구문 분석할 string입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary>1시간에 해당하는 틱 수를 값으로 가지는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary>1분에 해당하는 틱 수를 값으로 가지는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary>1초에 해당하는 틱 수를 값으로 가지는 상수입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>지정된 Timespan을 이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 인스턴스에서 뺍니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 값입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 값입니다.</param>
      <param name="t">Timespan 값입니다.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 시간을 나타내는 틱 수를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 시간을 나타내는 틱 수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체에 포함된 날짜 및 시간을 나타내는 문자열 값을 가진 SqlString 구조체입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 속성을 나타내는 String입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 값을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체의 값입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <see cref="N:System.Data.SqlTypes" /> 구조체의 Value 속성이 null로 설정된 경우 throw되는 예외입니다.</exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary>전체 자릿수와 소수 자릿수가 고정된 - 10^38 + 1부터 10^38 - 1까지의 숫자 값을 나타냅니다. </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>제공된 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="bPrecision">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 나타내는 데 사용할 수 있는 최대 자릿수입니다. </param>
      <param name="bScale">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 나타내는 데 사용할 소수 자릿수입니다. </param>
      <param name="fPositive">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체가 양수를 표현하는지 아니면 음수를 표현하는지 여부를 나타내는 부울 값입니다. </param>
      <param name="data1">data2, data3 및 data4와 조합하여 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체 값을 나타내는 128비트 부호 없는 정수를 구성하는 32비트 부호 없는 정수입니다. </param>
      <param name="data2">data1, data3 및 data4와 조합하여 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체 값을 나타내는 128비트 부호 없는 정수를 구성하는 32비트 부호 없는 정수입니다. </param>
      <param name="data3">data1, data2 및 data4와 조합하여 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체 값을 나타내는 128비트 부호 없는 정수를 구성하는 32비트 부호 없는 정수입니다. </param>
      <param name="data4">data1, data2 및 data3과 조합하여 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체 값을 나타내는 128비트 부호 없는 정수를 구성하는 32비트 부호 없는 정수입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary>제공된 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="bPrecision">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 나타내는 데 사용할 수 있는 최대 자릿수입니다. </param>
      <param name="bScale">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 나타내는 데 사용할 소수 자릿수입니다. </param>
      <param name="fPositive">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체가 양수를 표현하는지 아니면 음수를 표현하는지 여부를 나타내는 부울 값입니다. </param>
      <param name="bits">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 값을 제공하는 128비트 부호 없는 정수입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary>제공된 <see cref="T:System.Decimal" /> 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체로 저장될 <see cref="T:System.Decimal" /> 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary>제공된 Double 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="dVal">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값을 나타내는 Double입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary>제공된 정수 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값으로 사용될 제공된 정수 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary>제공된 정수(long) 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">제공된 정수(Long) 값은 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값으로 사용됩니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary>Abs 메서드는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 절대 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 절대값을 나타내는 부호 없는 숫자를 포함하는 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="n">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자의 합계를 계산합니다.</summary>
      <returns>합계를 포함하는 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자의 소수 자릿수는 자릿수 매개 변수가 나타내는 자릿수로 조정됩니다.fRound 매개 변수의 값에 따라 해당 자릿수에서 값이 반올림되거나 해당 자릿수 아래의 값을 버립니다.</summary>
      <returns>조정된 숫자를 포함하는 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="n">조정될 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="digits">조정된 구조체의 자릿수입니다. </param>
      <param name="fRound">새 값은 이 매개 변수가 true이면 반올림되고, false이면 버려집니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값에 대한 이진 표현을 바이트 배열 형식으로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값에 대한 이진 표현을 포함하는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체보다 크거나 같은 최소 정수를 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체보다 크거나 같은 최소 정수를 나타내는 <see cref="T:System.Data.SqlTypes.SqlDecimal" />입니다.</returns>
      <param name="n">최대값을 계산할 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Data.SqlTypes.SqlDecimal)">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 개체와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Data.SqlTypes.SqlDecimal" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Object" />입니다. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자의 값을 지정된 전체 자릿수와 소수 자릿수로 조정합니다.</summary>
      <returns>매개 변수에 지정된 전체 자릿수와 소수 자릿수로 조정된 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="n">조정될 값이 있는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="precision">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 전체 자릿수입니다. </param>
      <param name="scale">새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 소수 자릿수입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 대한 이진 표현을 정수 배열 형식으로 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 대한 이진 표현을 포함하는 정수 배열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>나누기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자를 두 번째 피연산자로 나눈 결과를 계산합니다.</summary>
      <returns>나눗셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자에 대해 논리 비교를 수행하여 둘이 같은지 여부를 확인합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.두 인스턴스 중 하나가 null이면 SqlDecimal의 값이 null이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary>제공된 <see cref="T:System.Object" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성과 비교합니다.</summary>
      <returns>개체가 <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스이고 둘이 같으면 true입니다.그렇지 않은 경우에는 false입니다.</returns>
      <param name="value">비교될 <see cref="T:System.Object" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 숫자를 그 다음으로 낮은 정수로 올림합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 정수 부분을 포함하는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="n">최소값을 계산할 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 대해 논리 비교를 수행하여 첫 번째 구조체가 두 번째 구조체보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체가 null인지 여부를 나타냅니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체가 null이면 true이고,그렇지 않은 경우에는 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />가 0보다 큰지 여부를 나타냅니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />가 null로 할당된 경우 true입니다.그렇지 않은 경우에는 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 대해 논리 비교를 수행하여 첫 번째 구조체가 두 번째 구조체보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" /> 속성의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" /> 속성의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 최소값을 나타내는 상수입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>곱하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 곱을 계산합니다.</summary>
      <returns>해당 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성에 곱셈 결과를 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 클래스 인스턴스에 대해 할당할 수 있는 <see cref="T:System.DBNull" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자의 합계를 계산합니다.</summary>
      <returns>합계를 포함하는 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>나누기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자를 두 번째 피연산자로 나눈 결과를 계산합니다.</summary>
      <returns>나눗셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자에 대해 논리 비교를 수행하여 둘이 같은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />와 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 <see cref="T:System.Decimal" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />와 같은 값을 갖는 새 Decimal 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수가 나타내는 값과 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />을 갖는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">변환될 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Double)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <see cref="T:System.Double" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Double" /> 매개 변수의 값과 같은 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Double" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 대해 논리 비교를 수행하여 첫 번째 구조체가 두 번째 구조체보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 SqlDecimal로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 피연산자를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <see cref="T:System.Decimal" /> 값을 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <returns>Decimal 매개 변수의 값과 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">변환될 <see cref="T:System.Decimal" /> 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlDecimal">
      <summary>제공된 <see cref="T:System.Int64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Int64" /> 매개 변수의 값과 같은 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Int64" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 대해 논리 비교를 수행하여 첫 번째 구조체가 두 번째 구조체보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDecimal" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>곱하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 곱을 계산합니다.</summary>
      <returns>해당 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성에 곱셈 결과를 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자에서 두 번째 피연산자를 뺀 결과를 계산합니다.</summary>
      <returns>뺄셈 결과를 포함하는 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary>단항 빼기 연산자는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 부정합니다.</summary>
      <returns>부정 연산의 결과를 포함하는 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">부정할 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary>숫자의 <see cref="T:System.String" /> 표현을 해당하는 <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 변환합니다.</summary>
      <returns>지정된 <see cref="T:System.String" />에 포함된 값과 같은 <see cref="T:System.Data.SqlTypes.SqlDecimal" />입니다.</returns>
      <param name="s">구문 분석할 String입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값을 지정된 지수 제곱으로 올림합니다.</summary>
      <returns>결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="n">거듭제곱될 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="exp">숫자의 거듭제곱 수를 나타내는 Double 값입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성을 나타내는 데 사용된 숫자의 최대 자릿수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 Value를 나타내는 데 사용되는 최대 자릿수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>지정된 전체 자릿수를 사용하여 지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값에 가장 가까운 숫자를 가져옵니다.</summary>
      <returns>올림 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="n">반올림 처리될 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="position">반환 값에서 유효한 소수 자릿수(전체 자릿수)의 숫자입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />를 확인하는 소수 자릿수를 가져옵니다.</summary>
      <returns>Value 속성을 나타내는 데 사용되는 소수 자릿수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 대한 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성의 부호를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 부호를 나타내는 숫자입니다.</returns>
      <param name="n">계산될 부호가 있는 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 피연산자에서 두 번째 피연산자를 뺀 결과를 계산합니다.</summary>
      <returns>뺄셈 결과를 포함하는 값을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary>이 인스턴스에 대해 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성의 내용과 같은 Double을 반환합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성의 소수 표현입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />가 0이 아니면 true이고, 0이면 false이고, 그렇지 않으면 Null입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 Value과 같은 Value를 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 Value가 true이면 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 Value가 1입니다.그렇지 않으면 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 Value는 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 이 인스턴스와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 이 인스턴스와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 이 인스턴스와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 이 인스턴스와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 이 인스턴스와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />의 이 인스턴스와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns>해당 값이 이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체에 들어 있는 값을 나타내는 문자열인 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성에 대한 문자열 표현을 포함하는 새 <see cref="T:System.String" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값이 원하는 자리로 잘립니다.</summary>
      <returns>
        <paramref name="position" /> 매개 변수에 대해 음수 값을 제공하여 소수점 왼쪽으로 해당 자리까지의 값을 버립니다.</returns>
      <param name="n">버림 처리될 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
      <param name="position">소수점 아래에서 숫자가 버림 처리될 자리입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체의 값을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>-79,228,162,514,264,337,593,543,950,335~79,228,162,514,162,514,264,337,593,543,950,335 범위의 숫자입니다.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary>데이터베이스에서 저장하거나 검색할 부동 소수점 숫자를 나타내며, 값 범위는 -1.79E +308 ~ 1.79E +308입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary>제공된 Double 매개 변수로 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 새 인스턴스를 초기화하여 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 속성을 설정합니다.</summary>
      <param name="value">새 <see cref="T:System.Data.SqlTypes.SqlDouble" />에 사용할 값을 갖는 Double입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>더하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 합계를 계산합니다.</summary>
      <returns>두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 합계입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing )입니다. </returns>
      <param name="value">비교할 <see cref="T:System.Object" />입니다. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>나누기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자를 두 번째 피연산자로 나눕니다.</summary>
      <returns>나눗셈 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary>제공된 개체 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 개체의 <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> 속성과 비교합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.</returns>
      <param name="value">비교할 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 인스턴스가 null인지 여부를 나타내는 부울 값을 반환합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />가 null이면 true입니다.그렇지 않은 경우에는 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 최소값을 나타내는 상수입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>곱하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 곱을 계산합니다.</summary>
      <returns>두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 곱입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.DBNull" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>더하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 합계를 계산합니다.</summary>
      <returns>두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 합계입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>나누기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자를 두 번째 피연산자로 나눕니다.</summary>
      <returns>나눗셈 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 속성에 따라 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />이 0 또는 1인 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlBoolean" />이 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
      <param name="x">변환될 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 Double로 변환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체와 같은 값의 Double입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" />이 나타내는 숫자의 값과 같은 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다.<see cref="T:System.Data.SqlTypes.SqlString" />이 <see cref="F:System.Data.SqlTypes.SqlString.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 개체 </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlByte" />가 <see cref="F:System.Data.SqlTypes.SqlByte.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlDecimal" />이 <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlInt16" />이 <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt32" />가 <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt64" />가 <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다.<see cref="T:System.Data.SqlTypes.SqlMoney" />가 <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlSingle" />이 <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />인 경우 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary>제공된 Double 값을 <see cref="T:System.Data.SqlTypes.SqlDouble" />로 변환합니다.</summary>
      <returns>지정된 Double 매개 변수와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다.</returns>
      <param name="x">변환할 Double 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlDouble" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>곱하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 곱을 계산합니다.</summary>
      <returns>두 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자의 곱입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>빼기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자에서 두 번째 피연산자를 뺍니다.</summary>
      <returns>뺄셈 연산의 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 부정 값을 반환합니다.</summary>
      <returns>부정 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary>숫자의 <see cref="T:System.String" /> 표현을 같은 값의 배정밀도 부동 소수점 숫자로 변환합니다.</summary>
      <returns>String이 나타내는 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다.</returns>
      <param name="s">구문 분석할 String입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>빼기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 피연산자에서 두 번째 피연산자를 뺍니다.</summary>
      <returns>뺄셈 연산의 결과입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />가 0이 아니면 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />가 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />가 되고, <see cref="T:System.Data.SqlTypes.SqlDouble" />이 0이면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />가 되고, <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체가 <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />이면 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 되는 SqlBoolean 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 Value와 같은 Value를 갖는 SqlByte 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns>이 SqlDouble의 반올림된 값과 동일한 변환된 값을 갖는 새 SqlDecimal 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체 값의 정수 부분과 같은 Value를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체 값의 정수 부분과 같은 Value를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체 값의 정수 부분과 같은 Value를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 값과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />를 갖는 새 SqlMoney 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />를 갖는 새 SqlSingle 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlDouble" />의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />를 나타내는 SqlString입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 문자열로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlDouble" />의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />를 나타내는 문자열입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 값을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체의 값입니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary>데이터베이스에서 저장하거나 검색할 GUID를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary>제공된 바이트 배열 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">바이트 배열입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary>지정된 <see cref="T:System.Guid" /> 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="g">
        <see cref="T:System.Guid" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>지정된 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="a">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 처음 4바이트입니다. </param>
      <param name="b">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 2바이트입니다. </param>
      <param name="c">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 2바이트입니다. </param>
      <param name="d">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다. </param>
      <param name="e">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다. </param>
      <param name="f">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다. </param>
      <param name="g">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다. </param>
      <param name="h">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다. </param>
      <param name="i">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다. </param>
      <param name="j">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다. </param>
      <param name="k">
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 다음 바이트입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary>지정된 <see cref="T:System.String" /> 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="s">
        <see cref="T:System.String" /> 개체 </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체를 제공된 <see cref="T:System.Data.SqlTypes.SqlGuid" />와 비교하여 상대 값 표시를 반환합니다.마지막 6바이트 이상을 비교하지만 비교 시 마지막 6바이트를 최상의 바이트로 처리합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스는 개체보다 작습니다. Zero 이 인스턴스는 개체와 동일합니다. 0보다 큼 이 인스턴스는 개체보다 큽니다. 또는 개체는 null 참조(Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Data.SqlTypes.SqlGuid" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체를 제공된 개체와 비교하여 상대 값 표시를 반환합니다.마지막 6바이트 이상을 비교하지만 비교 시 마지막 6바이트를 최상의 바이트로 처리합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스는 개체보다 작습니다. Zero 이 인스턴스는 개체와 동일합니다. 0보다 큼 이 인스턴스는 개체보다 큽니다. 또는 개체는 null 참조(Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Object" />입니다. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.인스턴스 중 하나가 null이면 SqlGuid가 null이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary>제공된 개체 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 개체의 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> 속성과 비교합니다.</summary>
      <returns>개체가 <see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스이고 둘이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">비교할 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체가 null인지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns>null이면 true이고,그렇지 않은 경우에는 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.DBNull" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlGuid" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlGuid" />입니다.</returns>
      <param name="x">SqlBinary 개체 </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 매개 변수를 <see cref="T:System.Guid" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" />와 같은 값을 갖는 새 <see cref="T:System.Guid" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlGuid" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수가 나타내는 값과 같은 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" />을 갖는 <see cref="T:System.Data.SqlTypes.SqlGuid" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 개체 </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary>제공된 <see cref="T:System.Guid" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlGuid" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Guid" /> 매개 변수와 같은 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlGuid" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Guid" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlGuid" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary>지정된 <see cref="T:System.String" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlGuid" />로 변환합니다.</summary>
      <returns>지정된 <see cref="T:System.String" />에 포함된 값과 같은 <see cref="T:System.Data.SqlTypes.SqlGuid" />입니다.</returns>
      <param name="s">구문 분석할 String입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체를 바이트 배열로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlGuid.Value" />을 나타내는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBinary" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 바이트를 포함하는 SqlBinary 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 문자열 표현을 포함하는 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 문자열 표현을 포함하는 <see cref="T:System.String" />입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체의 값을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>
        <see cref="T:System.Guid" /> 구조체입니다.</returns>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary>데이터베이스에서 저장하거나 검색할 16비트 부호 있는 정수를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary>제공된 정수(Short) 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">정수(Short)입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 합계를 계산합니다.</summary>
      <returns>두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 합계를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <returns>비트 AND의 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 비트 OR를 계산합니다.</summary>
      <returns>비트 OR의 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Data.SqlTypes.SqlInt16" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic의 경우 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Object" />입니다. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자를 두 번째 피연산자로 나눕니다.</summary>
      <returns>나눗셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.인스턴스 중 하나가 null이면 SqlInt16이 null이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary>지정된 개체를 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 개체의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성과 비교합니다.</summary>
      <returns>개체가 <see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스이고 둘이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">비교할 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체가 null인지 여부를 나타냅니다.</summary>
      <returns>null이면 true이고,그렇지 않은 경우에는 false입니다.자세한 내용은 Null 값 처리을 참조하십시오.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />의 최소값을 나타내는 상수입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자를 두 번째 피연산자로 나눈 다음 그 나머지를 계산합니다.</summary>
      <returns>나머지를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 값을 나눈 다음 나머지를 반환합니다.</summary>
      <returns>나누기 후 나머지 연산을 <paramref name="x" />와 <paramref name="y" />에 대해 수행합니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 값입니다.</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 곱을 계산합니다.</summary>
      <returns>두 매개 변수의 곱을 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.DBNull" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>~ 연산자는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 보수를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 합계를 계산합니다.</summary>
      <returns>두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 합계를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <returns>비트 AND의 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 비트 OR를 계산합니다.</summary>
      <returns>비트 OR의 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자를 두 번째 피연산자로 나눕니다.</summary>
      <returns>나눗셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <returns>비트 배타적 OR의 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 정수 부분과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 정수(Short)로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 값과 같은 값을 갖는 정수(Short)입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <returns>제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 정수 부분과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 개체 매개 변수가 나타내는 값과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 개체 </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary>제공된 정수(Short)를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns>지정된 정수(Short)와 같은 값을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">정수(Short) 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />의 두 인스턴스를 비교하여 첫 번째 인스턴스가 두 번째 인스턴스보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 비교하여 첫 번째 구조체가 두 번째 구조체보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt16" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자를 두 번째 피연산자로 나눈 다음 그 나머지를 계산합니다.</summary>
      <returns>나머지를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 곱을 계산합니다.</summary>
      <returns>두 매개 변수의 곱을 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>~ 연산자는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 피연산자에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 보수를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <returns>뺄셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary>단항 빼기 연산자는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 피연산자의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />을 부정합니다.</summary>
      <returns>부정 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary>숫자의 <see cref="T:System.String" /> 표현을 해당하는 부호 있는 16비트 정수로 변환합니다.</summary>
      <returns>지정된 <see cref="T:System.String" />에 포함된 값과 같은 16비트 부호 있는 정수입니다.</returns>
      <param name="s">구문 분석할 String입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <returns>뺄셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />가 0이 아니면 true이고, 0이면 false이고, 그렇지 않으면 Null입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlInt16" />의 값이 0보다 작거나 255보다 크면 <see cref="T:System.OverflowException" />이 발생합니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 값과 같은 Value를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 값과 같은 Value를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 값과 같은 Value를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 값과 같은 Value를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 값과 같은 Value를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 값과 같은 Value를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />를 나타내는 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />을 나타내는 <see cref="T:System.String" /> 개체입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 값을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체의 값을 나타내는 정수(Short)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <returns>XOR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary>데이터베이스에서 저장하거나 검색할 32비트 부호 있는 정수를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary>제공된 정수 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">변환될 정수입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>지정된 두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 합계를 계산합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 합계를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <returns>비트 AND 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 비트 OR를 계산합니다.</summary>
      <returns>비트 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Data.SqlTypes.SqlInt32)">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Data.SqlTypes.SqlInt32" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Object" />입니다. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 번째 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에서 첫 번째 매개 변수를 나눕니다.</summary>
      <returns>나눗셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.인스턴스 중 하나가 null이면 SqlInt32가 null이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary>제공된 개체 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 개체의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성과 비교합니다.</summary>
      <returns>개체가 <see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스이고 둘이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">비교할 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체가 null인지 여부를 나타냅니다.</summary>
      <returns>이 속성은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />가 null이면 true입니다.그렇지 않은 경우에는 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" />의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" />의 최소값을 나타내는 상수입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 두 번째 매개 변수로 나눈 다음 그 나머지를 계산합니다.</summary>
      <returns>나머지를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 값을 나눈 다음 나머지를 반환합니다.</summary>
      <returns>나누기 후 나머지 연산을 <paramref name="x" />와 <paramref name="y" />에 대해 수행합니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 값입니다.</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 곱을 계산합니다.</summary>
      <returns>두 매개 변수의 곱을 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 클래스 인스턴스에 대해 할당할 수 있는 <see cref="T:System.DBNull" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <returns>1의 보수 연산 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>지정된 두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 합계를 계산합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 합계를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <returns>비트 AND 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 비트 OR를 계산합니다.</summary>
      <returns>비트 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 번째 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에서 첫 번째 매개 변수를 나눕니다.</summary>
      <returns>나눗셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <returns>비트 배타적 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" />을 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" />을 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 정수 부분과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 정수로 변환합니다.</summary>
      <returns>변환된 정수 값입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" />을 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <returns>SqlInt64 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" />을 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 정수 부분과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수가 나타내는 값과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 개체 </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 속성을 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" />을 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary>제공된 정수를 <see cref="T:System.Data.SqlTypes.SqlInt32" />로 변환합니다.</summary>
      <returns>정수 매개 변수와 같은 값 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">정수 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 비교하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt32" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 두 번째 매개 변수로 나눈 다음 그 나머지를 계산합니다.</summary>
      <returns>나머지를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 곱을 계산합니다.</summary>
      <returns>두 매개 변수의 곱을 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />를 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <returns>1의 보수 연산 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <returns>뺄셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 피연산자의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />을 부정합니다.</summary>
      <returns>부정 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary>숫자의 <see cref="T:System.String" /> 표현을 해당하는 부호 있는 32비트 정수로 변환합니다.</summary>
      <returns>지정된 <see cref="T:System.String" />에 포함된 값과 같은 32비트 부호 있는 정수입니다.</returns>
      <param name="s">구문 분석할 <see cref="T:System.String" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <returns>뺄셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />가 0이 아니면 true이고, 0이면 false이고, 그렇지 않으면 Null입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 Value과 같은 Value를 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.SqlInt32의 값이 0보다 작거나 255보다 크면 <see cref="T:System.OverflowException" />이 발생합니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt32" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt32" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt32" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt32" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt32" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt32" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt32" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt32" />의 값과 같은 <see cref="T:System.String" /> 구조체입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 값을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체의 값을 나타내는 정수입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">속성에 <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />이 포함된 경우 </exception>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <returns>비트 배타적 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary>데이터베이스에서 저장하거나 검색할 64비트 부호 있는 정수를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary>제공된 정수(Long)를 사용하여 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">정수(Long)입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 합계를 계산합니다.</summary>
      <returns>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 합계와 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <returns>비트 AND 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 피연산자의 비트 OR를 계산합니다.</summary>
      <returns>비트 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing )입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Object" />입니다. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 두 번째 매개 변수로 나눕니다.</summary>
      <returns>나눗셈 연산의 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.인스턴스 중 하나가 null이면 SqlInt64가 null이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary>제공된 개체 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 개체의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성과 비교합니다.</summary>
      <returns>개체가 <see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스이고 둘이 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">비교할 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체가 null인지 여부를 나타내는 부울 값을 가져옵니다.</summary>
      <returns>null이면 true이고,그렇지 않은 경우에는 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체의 최대값을 나타내는 상수입니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체의 최소값을 나타내는 상수입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 두 번째 매개 변수로 나눈 다음 그 나머지를 계산합니다.</summary>
      <returns>나머지를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 개의 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 값을 나눈 다음 나머지를 반환합니다.</summary>
      <returns>나누기 후 나머지 연산을 <paramref name="x" />와 <paramref name="y" />에 대해 수행합니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 값입니다.</param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 곱을 계산합니다.</summary>
      <returns>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 곱과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 SqlInt64 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.DBNull" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 피연산자에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 1의 보수와 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 합계를 계산합니다.</summary>
      <returns>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 합계와 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 피연산자의 비트 AND를 계산합니다.</summary>
      <returns>비트 AND 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 피연산자의 비트 OR를 계산합니다.</summary>
      <returns>비트 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 두 번째 매개 변수로 나눕니다.</summary>
      <returns>나눗셈 연산의 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <returns>비트 배타적 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 정수 부분과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 정수 부분과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 Long으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" />의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />과 같은 새 Long 값입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 정수 부분과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 정수 부분을 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수가 나타내는 값과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
      <param name="x">변환될 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary>Long 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlInt64" />로 변환합니다.</summary>
      <returns>Long 매개 변수의 값과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">정수(Long) 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 SqlInt64 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlInt64" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 두 번째 매개 변수로 나눈 다음 그 나머지를 계산합니다.</summary>
      <returns>나머지를 포함하는 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 곱을 계산합니다.</summary>
      <returns>두 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 곱과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 피연산자에 대해 비트 1의 보수 연산을 수행합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 1의 보수와 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <returns>나눗셈 연산의 결과와 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary>단항 빼기 연산자는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 피연산자의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 부정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 부정 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />을 갖는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary>숫자의 <see cref="T:System.String" /> 표현을 해당하는 부호 있는 64비트 정수로 변환합니다.</summary>
      <returns>지정된 <see cref="T:System.String" />에 포함된 값과 같은 64비트 부호 있는 정수입니다.</returns>
      <param name="s">구문 분석할 <see cref="T:System.String" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>첫 번째 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <returns>나눗셈 연산의 결과와 같은 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />가 0이 아니면 true이고, 0이면 false이고, 그렇지 않으면 Null입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체의 Value과 같은 Value를 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt64" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt64" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt64" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt16" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt64" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt64" />의 값을 나타내는 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" />의 이 인스턴스를 <see cref="T:System.String" />로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt64" />의 값을 나타내는 <see cref="T:System.String" />입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체의 값을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체의 값을 나타내는 정수(Long)입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</summary>
      <returns>비트 배타적 OR 연산의 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary>데이터베이스에서 저장하거나 검색할 통화 단위를 1/10,000의 정밀도로 나타내며, 통화 값 범위는 -2 63 (-922,337,203,685,477.5808) ~ 2 63 -1(+922,337,203,685,477.5807)입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary>지정된 <see cref="T:System.Decimal" /> 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">초기화할 통화 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary>지정된 Double 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">초기화할 통화 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary>지정된 정수 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">초기화할 통화 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary>지정된 정수(Long) 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">초기화할 통화 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 합계를 계산합니다.</summary>
      <returns>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 합계를 포함하는 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlMoney" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Object" />입니다. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>나누기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 두 번째 매개 변수로 나눕니다.</summary>
      <returns>나눗셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.인스턴스 중 하나가 null이면 SqlMoney가 null이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary>제공된 개체 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 개체의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성과 비교합니다.</summary>
      <returns>등호는 개체가 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스이고 둘이 같으면 true를 반환하고, 그렇지 않으면 false를 반환합니다.</returns>
      <param name="value">비교할 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 가져옵니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체가 null인지 여부를 나타내는 부울 값을 반환합니다.</summary>
      <returns>null이면 true이고,그렇지 않은 경우에는 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 클래스 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성에 할당할 수 있는 최대값을 나타냅니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 클래스 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성에 할당할 수 있는 최소값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>곱하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 곱을 계산합니다.</summary>
      <returns>곱셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 클래스 인스턴스에 대해 할당할 수 있는 <see cref="T:System.DBNull" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 합계를 계산합니다.</summary>
      <returns>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 합계를 포함하는 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>나누기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 두 번째 매개 변수로 나눕니다.</summary>
      <returns>나눗셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary>이 암시적 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary>이 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary>이 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Decimal" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />와 같은 값을 갖는 새 <see cref="T:System.Decimal" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary>이 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary>이 연산자는 <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수가 나타내는 값과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">변환될 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double)~System.Data.SqlTypes.SqlMoney">
      <summary>이 암시적 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> 속성과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary>이 암시적 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary>이 암시적 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary>이 암시적 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary>이 암시적 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <see cref="T:System.Decimal" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Decimal" /> 매개 변수의 값과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">변환될 <see cref="T:System.Decimal" /> 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlMoney">
      <summary>이 암시적 연산자는 제공된 <see cref="T:System.Int64" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Int64" /> 매개 변수의 값과 같은 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Int64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlMoney" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>곱하기 연산자는 두 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 곱을 계산합니다.</summary>
      <returns>곱셈 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>빼기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <returns>뺄셈 결과를 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary>단항 마이너스 연산자는 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 부정합니다.</summary>
      <returns>부정 연산의 결과를 포함하는 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />을 갖는 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">부정할 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary>숫자의 <see cref="T:System.String" /> 표현을 해당하는 <see cref="T:System.Data.SqlTypes.SqlMoney" />로 변환합니다.</summary>
      <returns>지정된 <see cref="T:System.String" />에 포함된 값과 같은 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다.</returns>
      <param name="s">구문 분석할 String입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>빼기 연산자는 첫 번째 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수에서 두 번째 매개 변수를 뺍니다.</summary>
      <returns>뺄셈 결과를 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 인스턴스의 값을 <see cref="T:System.Decimal" /> 구조체로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성과 같은 값을 갖는 <see cref="T:System.Decimal" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Double" />로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체와 같은 값을 갖는 Double입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Int32" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체의 정수 부분과 같은 값을 갖는 32비트 정수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체의 값을 <see cref="T:System.Int64" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체의 정수 부분과 같은 값을 갖는 64비트 정수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체의 값이 0이면 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체의 값이 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 값과 같은 <see cref="T:System.Data.SqlTypes.SqlByte" />입니다. </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt16" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt32" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns>해당 값이 이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 값을 나타내는 문자열인 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" />의 이 인스턴스를 문자열로 변환합니다.</summary>
      <returns>해당 값이 이 <see cref="T:System.Data.SqlTypes.SqlMoney" />의 값에 대한 문자열 표현인 문자열입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체 인스턴스의 통화 값을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체 인스턴스의 통화 값입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">이 속성이 null로 설정되어 있는 경우 </exception>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 클래스 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary>
        <see cref="N:System.Data.SqlTypes" /> 구조체의 Value 속성이 null로 설정된 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary>오류를 설명하는 시스템 제공 메시지를 사용하여 <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary>오류를 설명하는 지정된 메시지를 사용하여 <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외를 설명하는 메시지입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외를 설명하는 메시지입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
      <param name="e">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary>데이터베이스에서 저장하거나 검색할 부동 소수점 숫자를 나타내며, 값 범위는 -3.40E +38 ~ 3.40E +38입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary>제공된 Double 매개 변수를 사용하여 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />로 사용할 Double 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />로 사용할 부동 소수점 숫자입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>지정된 두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 합계를 계산합니다.</summary>
      <returns>지정된 두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 합계를 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlSingle" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 인스턴스를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Object" />입니다. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>첫번째 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 두번째 구조체로 나눕니다.</summary>
      <returns>나눗셈 결과를 포함하는 SqlInt64 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.인스턴스 중 하나가 null이면 SqlSingle이 null이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary>제공된 개체 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 개체의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 속성과 비교합니다.</summary>
      <returns>개체가 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스이고 둘이 같으면 true입니다.그렇지 않은 경우에는 false입니다.</returns>
      <param name="value">비교할 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 가져옵니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체에 대해 논리 비교를 수행하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체가 null인지 여부를 나타냅니다.</summary>
      <returns>null이면 true이고,그렇지 않은 경우에는 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 클래스 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 속성에 할당할 수 있는 최대값을 나타냅니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 클래스 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 속성에 할당할 수 있는 최소값을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>지정된 두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 곱을 계산합니다.</summary>
      <returns>곱셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.DBNull" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>지정된 두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 합계를 계산합니다.</summary>
      <returns>지정된 두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 합계를 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>첫번째 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 두번째 구조체로 나눕니다.</summary>
      <returns>나눗셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>두 SqlSingle 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary>이 암시적 연산자는 제공된 <see cref="T:System.Data.SqlTypes.SqlBoolean" />을 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" />와 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">변환될 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 부동 소수점으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 값을 포함하는 부동 소수점입니다.</returns>
      <param name="x">부동 소수점으로 변환될 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수가 나타내는 값과 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">변환될 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체에 대해 논리 비교를 수행하여 첫 번째 구조체가 두 번째 구조체보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary>이 암시적 연산자는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />과 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 속성을 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">변환될 <see cref="T:System.Data.SqlTypes.SqlByte" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary>제공된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />와 같은 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />를 갖는 새 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary>지정된 부동 소수점 값을 <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환합니다.</summary>
      <returns>지정된 부동 소수점의 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" />로 변환될 부동 소수점 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlSingle" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>지정된 두 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 곱을 계산합니다.</summary>
      <returns>곱셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>첫번째 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체에서 두번째 구조체를 뺍니다.</summary>
      <returns>뺄셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />을 부정합니다.</summary>
      <returns>부정 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary>지정된 <see cref="T:System.String" />을 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체로 변환합니다.</summary>
      <returns>지정된 <see cref="T:System.String" />에 포함된 값과 같은 <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다.</returns>
      <param name="s">구문 분석할 <see cref="T:System.String" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>첫번째 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체에서 두번째 구조체를 뺍니다.</summary>
      <returns>뺄셈 결과를 포함하는 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />가 0이 아니면 true이고, 0이면 false이고, 그렇지 않으면 Null입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 Value와 같은 Value를 갖는 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다.<see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 Value가 true이면 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 Value가 1입니다.그렇지 않으면 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체의 Value는 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 값과 같은 새 SqlDecimal입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 값과 같은 새 SqlDouble입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 값과 같은 새 SqlInt16입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt32" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 값과 같은 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 값을 나타내는 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체를 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlSingle" />의 값을 나타내는 String 개체입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체의 값을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>-3.40E+38 ~ 3.40E+38 범위의 부동 소수점 값입니다.</returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 클래스 인스턴스의 <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> 속성에 할당할 수 있는 0 값을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary>데이터베이스에서 저장하거나 검색할 문자의 가변 길이 스트림을 나타냅니다.<see cref="T:System.Data.SqlTypes.SqlString" />에는 해당하는 .NET Framework <see cref="T:System.String" /> 데이터 형식과 다른 기본 데이터 구조가 있습니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary>지정된 로캘 ID, 비교 옵션 및 데이터를 사용하여 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="lcid">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 해당 지역 로캘과 언어를 지정합니다. </param>
      <param name="compareOptions">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 옵션을 지정합니다. </param>
      <param name="data">저장할 데이터 배열입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="lcid">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 해당 지역 로캘과 언어를 지정합니다. </param>
      <param name="compareOptions">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 옵션을 지정합니다. </param>
      <param name="data">저장할 데이터 배열입니다. </param>
      <param name="fUnicode">유니코드로 인코딩되었으면 true입니다.그렇지 않은 경우에는 false입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="lcid">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 해당 지역 로캘과 언어를 지정합니다. </param>
      <param name="compareOptions">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 옵션을 지정합니다. </param>
      <param name="data">저장할 데이터 배열입니다. </param>
      <param name="index">배열 내의 시작 인덱스입니다. </param>
      <param name="count">인덱스에서 복사할 문자의 수입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="lcid">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 해당 지역 로캘과 언어를 지정합니다. </param>
      <param name="compareOptions">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 옵션을 지정합니다. </param>
      <param name="data">저장할 데이터 배열입니다. </param>
      <param name="index">배열 내의 시작 인덱스입니다. </param>
      <param name="count">인덱스에서 복사할 문자의 수입니다. </param>
      <param name="fUnicode">유니코드로 인코딩되었으면 true입니다.그렇지 않은 경우에는 false입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary>지정된 문자열을 사용하여 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="data">저장할 문자열입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary>지정된 문자열과 로캘 ID 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="data">저장할 문자열입니다. </param>
      <param name="lcid">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 해당 지역 로캘과 언어를 지정합니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>지정된 문자열, 로캘 ID 및 비교 옵션 값을 사용하여 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="data">저장할 문자열입니다. </param>
      <param name="lcid">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 해당 지역 로캘과 언어를 지정합니다. </param>
      <param name="compareOptions">새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 옵션을 지정합니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>두 개의 지정된 <see cref="T:System.Data.SqlTypes.SqlString" /> 값을 연결하여 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 만듭니다.</summary>
      <returns>
        <paramref name="x" />와 <paramref name="y" />의 연결된 값인 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary>영문자 값이 아닌 숫자 문자 값에 따라 정렬을 수행하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
      <summary>영문자 값이 아닌 숫자 문자 값에 따라 정렬을 수행하도록 지정합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체의 복사본을 만듭니다.</summary>
      <returns>모든 속성 값이 원본과 같은 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 문자열 비교 방식을 정의하는 <see cref="T:System.Globalization.CompareInfo" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 문자열 비교 방식을 정의하는 CompareInfo 개체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 값과 같은 값을 갖는 <see cref="T:System.Globalization.CompareOptions" /> 열거를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 SqlCompareOptions에 해당하는 CompareOptions 값입니다.</returns>
      <param name="compareOptions">
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 옵션을 설명하는 <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 값입니다. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 인스턴스를 제공된 <see cref="T:System.Data.SqlTypes.SqlString" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 개체를 제공된 <see cref="T:System.Object" />와 비교하여 상대 값 표시를 반환합니다.</summary>
      <returns>인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.반환 값 조건 0보다 작음 이 인스턴스가 개체보다 작습니다. Zero 이 인스턴스가 개체와 동일합니다. 0보다 큼 이 인스턴스가 개체보다 큽니다. 또는 개체가 null 참조(Visual Basic에서는 Nothing)입니다. </returns>
      <param name="value">비교될 <see cref="T:System.Object" />입니다. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>지정된 두 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 연결합니다.</summary>
      <returns>새로 연결되어 두 <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 내용을 나타내는 값이 포함된 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체의 문화권에 대한 정보를 나타내는 <see cref="T:System.Globalization.CultureInfo" /> 구조체를 가져옵니다.</summary>
      <returns>날짜 형식 지정 및 문자열 정렬과 같은 일반 작업에 필요한 메서드를 제공하는 문화권의 고유 개체뿐 아니라 문화권의 이름, 쓰기 시스템 및 사용된 달력 등도 포함하여 이 SqlString 구조체의 문화권에 대한 정보를 설명하는 <see cref="T:System.Globalization.CultureInfo" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 둘이 같은지 여부를 확인합니다.</summary>
      <returns>두 값이 같으면 true입니다.그렇지 않은 경우에는 false입니다.인스턴스 중 하나가 null이면 SqlString이 null이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary>제공된 개체 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체의 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 속성과 비교합니다.</summary>
      <returns>등호는 개체가 <see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스이고 둘이 같으면 true를 반환하고, 그렇지 않으면 false를 반환합니다.</returns>
      <param name="value">비교할 개체입니다. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 가져옵니다.</summary>
      <returns>32비트 부호 있는 정수 해시 코드입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary>ANSI 형식으로 된 <see cref="T:System.Data.SqlTypes.SqlString" />의 내용을 포함하는 바이트 배열을 가져옵니다.</summary>
      <returns>ANSI 형식으로 된 <see cref="T:System.Data.SqlTypes.SqlString" />의 내용을 포함하는 바이트 배열입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary>유니코드 형식으로 된 <see cref="T:System.Data.SqlTypes.SqlString" />의 내용을 포함하는 바이트 배열을 가져옵니다.</summary>
      <returns>유니코드 형식으로 된 <see cref="T:System.Data.SqlTypes.SqlString" />의 내용을 포함하는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary>대/소문자를 무시하면서 <see cref="T:System.Data.SqlTypes.SqlString" /> 비교를 수행하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary>가나 형식을 무시하면서 문자열 비교를 수행하도록 지정합니다. </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary>분음 부호와 같이 공백 없는 조합 문자를 무시하면서 문자열 비교를 수행하도록 지정합니다. </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary>문자 너비를 무시하면서 문자열 비교를 수행하도록 지정합니다. </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체가 null인지 여부를 나타냅니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlString.Value" />가 <see cref="F:System.Data.SqlTypes.SqlString.Null" />이면 true입니다.그렇지 않은 경우에는 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 해당 지역 로캘과 언어를 지정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 속성에 저장된 문자열의 로캘 ID입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체 인스턴스에 할당할 수 있는 <see cref="T:System.DBNull" />을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>지정된 두 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 연결합니다.</summary>
      <returns>새로 연결되어 두 <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 내용을 나타내는 값이 포함된 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 둘이 같은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlByte" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <returns>SqlDecimal 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <param name="x">변환될 SqlDecimal 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <returns>지정된 <see cref="T:System.Data.SqlTypes.SqlGuid" />의 문자열 표현이 값인 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다.</returns>
      <param name="x">변환될 SqlInt32 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlString" /> 개체입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary>지정된 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" /> 매개 변수의 문자열 표현을 포함하는 새 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <param name="x">변환할 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 구조체입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" />을 <see cref="T:System.String" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 매개 변수의 <see cref="P:System.Data.SqlTypes.SqlString.Value" /> 속성과 같은 내용을 갖는 String입니다.</returns>
      <param name="x">변환될 <see cref="T:System.Data.SqlTypes.SqlString" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 큰지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 크거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary>
        <see cref="T:System.String" /> 매개 변수를 <see cref="T:System.Data.SqlTypes.SqlString" />로 변환합니다.</summary>
      <returns>지정된 String의 값을 포함하는 <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <param name="x">변환될 <see cref="T:System.String" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</summary>
      <returns>두 인스턴스가 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />이고, 그렇지 않으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />인 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.<see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 작은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>두 <see cref="T:System.Data.SqlTypes.SqlString" /> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 작거나 같은지 여부를 확인합니다.</summary>
      <returns>첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />로 설정되는 <see cref="T:System.Data.SqlTypes.SqlBoolean" />입니다.그렇지 않은 경우에는 <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />입니다.<see cref="T:System.Data.SqlTypes.SqlString" />의 인스턴스 중 하나가 null인 경우, <see cref="T:System.Data.SqlTypes.SqlBoolean" />의 <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" />는 <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />이 됩니다.</returns>
      <param name="x">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <param name="y">
        <see cref="T:System.Data.SqlTypes.SqlString" />
      </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" />과 다른 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 방식을 나타내는 <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> 열거형 값을 하나 이상 조합한 것입니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlString" />과 다른 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체의 비교 방식을 지정하는 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 변환합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlString.Value" />가 0이 아니면 true이고, 0이면 false이고, 그렇지 않으면 Null입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlByte" />으로 변환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체가 나타내는 숫자와 같은 <see cref="P:System.Data.SqlTypes.SqlByte.Value" />를 갖는 새 SqlByte 구조체입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDateTime" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlString" />이 나타내는 날짜 값이 들어 있는 새 SqlDateTime 구조체입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlString" />의 값이 들어 있는 새 <see cref="T:System.Data.SqlTypes.SqlDecimal" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlString" />의 숫자 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlGuid" />으로 변환합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlTypes.SqlGuid.Value" />가 이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체에서 나타내는 Guid인 새 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 구조체입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 변환합니다. </summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlString" />의 숫자 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt16" />입니다. </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlString" />의 숫자 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt32" />입니다. </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlString" />의 숫자 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlString" />의 숫자 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체를 <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlString" />의 숫자 값과 같은 새 <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" /> 개체를 <see cref="T:System.String" />로 변환합니다.</summary>
      <returns>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체와 같은 값을 갖는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary>이 <see cref="T:System.Data.SqlTypes.SqlString" /> 구조체에 저장되어 있는 문자열을 가져옵니다.이 속성은 읽기 전용입니다.</summary>
      <returns>저장되어 있는 문자열입니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">문자열의 값이 <see cref="F:System.Data.SqlTypes.SqlString.Null" />인 경우 </exception>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary>
        <see cref="N:System.Data.SqlTypes" /> 구조체에 값을 설정할 경우 이 값이 잘릴 때 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지 및 <see cref="T:System.Exception" />에 대한 참조를 사용하여 <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다. </param>
      <param name="e">내부 <see cref="T:System.Exception" />에 대한 참조입니다. </param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary>
        <see cref="N:System.Data.SqlTypes" />의 기본 예외 클래스입니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 근본 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Data.SqlTypes.SqlTypeException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외를 설명하는 메시지입니다.이 생성자의 호출자는 이 문자열이 현재 시스템 문화권에 맞게 지역화되었는지 확인하는 데 필요합니다.</param>
      <param name="e">현재 예외의 원인이 되는 예외입니다.<paramref name="innerException" /> 매개 변수가 null이 아니면 현재 예외는 내부 예외를 처리하는 catch 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlXml">
      <summary>서버에서 저장하거나 검색할 XML 데이터를 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor">
      <summary>새 <see cref="T:System.Data.SqlTypes.SqlXml" /> 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)">
      <summary>제공된 <see cref="T:System.IO.Stream" /> 파생 인스턴스에서 XML 값을 제공하는 새 <see cref="T:System.Data.SqlTypes.SqlXml" /> 인스턴스를 만듭니다.</summary>
      <param name="value">
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 인스턴스의 XML 콘텐츠를 로드해 올 <see cref="T:System.IO.Stream" /> 파생 인스턴스입니다(예: <see cref="T:System.IO.FileStream" />).</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)">
      <summary>새 <see cref="T:System.Data.SqlTypes.SqlXml" /> 인스턴스를 만들고 이를 제공된 <see cref="T:System.Xml.XmlReader" />의 내용과 연결합니다.</summary>
      <param name="value">새 <see cref="T:System.Data.SqlTypes.SqlXml" /> 인스턴스의 값으로 사용할 <see cref="T:System.Xml.XmlReader" /> 파생 클래스 인스턴스입니다.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlXml.CreateReader">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlXml" />의 XML 콘텐츠 값을 <see cref="T:System.Xml.XmlReader" />로 가져옵니다.</summary>
      <returns>XML 콘텐츠를 포함하는 <see cref="T:System.Xml.XmlReader" /> 파생 인스턴스입니다.서버에서 내부적으로 정보가 표현되는 방법에 따라 실제 형식은 달라질 수 있습니다. 예를 들어 <see cref="T:System.Xml.XmlTextReader" />가 반환 값이 될 수 있습니다.</returns>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
        <see cref="T:System.Data.SqlTypes.SqlXml" />의 null 인스턴스에 대한 이 속성에 액세스하려는 경우</exception>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.IsNull">
      <summary>이 인스턴스가 null <see cref="T:System.Data.SqlTypes.SqlXml" /> 값을 나타내는지 여부를 나타냅니다.</summary>
      <returns>Value가 null이면 true입니다.그렇지 않은 경우에는 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Null">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 형식의 null 인스턴스를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 형식의 null 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlXml.Value">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlXml" /> 인스턴스의 XML 콘텐츠에 대한 문자열 표현을 가져옵니다.</summary>
      <returns>XML 콘텐츠에 대한 문자열 표현입니다.</returns>
    </member>
  </members>
</doc>