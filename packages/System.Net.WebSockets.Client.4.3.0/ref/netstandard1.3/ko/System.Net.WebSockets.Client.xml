<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets.Client</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ClientWebSocket">
      <summary>WebSocket 서비스에 연결하기 위해 클라이언트를 제공 합니다.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.#ctor">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Abort">
      <summary>연결을 중단하고 보류 중인 모든 IO 작업을 취소합니다.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>비동기 작업으로 <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 인스턴스를 닫습니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <param name="closeStatus">WebSocket 닫기 상태입니다.</param>
      <param name="statusDescription">닫기 상태에 대한 설명입니다.</param>
      <param name="cancellationToken">이 작업을 취소해야 하는 알림을 전파하는 데 사용하는 취소 토큰입니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 인스턴스의 출력을 비동기 작업으로 닫습니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <param name="closeStatus">WebSocket 닫기 상태입니다.</param>
      <param name="statusDescription">닫기 상태에 대한 설명입니다.</param>
      <param name="cancellationToken">이 작업을 취소해야 하는 알림을 전파하는 데 사용하는 취소 토큰입니다.</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatus">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 인스턴스에서 핸드셰이크를 시작한 이유를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocketCloseStatus" />를 반환합니다.close 핸드셰이크를 시작한 이유입니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 인스턴스가 닫힌 이유에 대한 설명을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.String" />를 반환합니다.<see cref="T:System.Net.WebSockets.ClientWebSocket" /> 인스턴스가 닫힌 이유에 대한 설명입니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>WebSocket 서버에 비동기 작업으로 연결합니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <param name="uri">WebSocket 서버가 연결할 URI입니다.</param>
      <param name="cancellationToken">작업을 취소해야 하는 알림을 전파하는 데 사용하는 취소 토큰입니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Dispose">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 인스턴스에서 사용하는 관리되지 않는 리소스를 해제합니다.</summary>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.Options">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 인스턴스에 대한 WebSocket 옵션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.ClientWebSocketOptions" />를 반환합니다.<see cref="T:System.Net.WebSockets.ClientWebSocket" /> 인스턴스에 대한 WebSocket 옵션입니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 데이터를 비동기 수신 작업으로 수신합니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <param name="buffer">응답을 받을 버퍼입니다.</param>
      <param name="cancellationToken">이 작업을 취소해야 하는 알림을 전파하는 데 사용하는 취소 토큰입니다.</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 데이터를 비동기 수신 작업으로 전송합니다.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</returns>
      <param name="buffer">보낼 메시지가 들어 있는 버퍼입니다.</param>
      <param name="messageType">버퍼가 암호화되지 않은 텍스트인지 또는 이진 형식인지 여부를 지정합니다.</param>
      <param name="endOfMessage">최종 비동기 보내기인지 여부를 지정합니다.이것이 마지막 보내기라면 true로 설정하고, 그렇지 않다면 false로 설정합니다.</param>
      <param name="cancellationToken">이 작업을 취소해야 하는 알림을 전파하는 데 사용하는 취소 토큰입니다.</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.State">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 인스턴스의 WebSocket 상태를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocketState" />를 반환합니다.<see cref="T:System.Net.WebSockets.ClientWebSocket" /> 인스턴스의 WebSocket 상태입니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.SubProtocol">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 인스턴스에 대해 지원되는 WebSocket 하위 프로토콜을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.String" />를 반환합니다.지원되는 WebSocket 하위 프로토콜입니다.</returns>
    </member>
    <member name="T:System.Net.WebSockets.ClientWebSocketOptions">
      <summary>
        <see cref="T:System.Net.WebSockets.ClientWebSocket" /> 개체와 함께 사용하는 옵션입니다.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)">
      <summary>WebSocket 연결 핸드셰이크 중 협상될 하위 프로토콜을 추가합니다.</summary>
      <param name="subProtocol">추가할 WebSocket 하위 프로토콜입니다.</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates">
      <summary>클라이언트 측 증명서 모음을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />를 반환합니다.클라이언트 측 인증서의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Cookies">
      <summary>이 요청과 관련된 쿠키를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.CookieContainer" />를 반환합니다.요청과 연결된 쿠키입니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Credentials">
      <summary>클라이언트에 대한 자격 증명 정보를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.ICredentials" />를 반환합니다.클라이언트에 대한 자격 증명 정보입니다.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval">
      <summary>WebSocket 프로토콜 Keep-Alive 간격을 밀리초 단위로 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.TimeSpan" />를 반환합니다.WebSocket 프로토콜의 Keep-Alive 간격입니다(밀리초 단위).</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Proxy">
      <summary>WebSocket 요청에 대한 프록시를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" />를 반환합니다.WebSocket 요청에 대한 프록시입니다.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)">
      <summary>HTTP 요청 헤더와 해당 값을 만듭니다.</summary>
      <param name="headerName">HTTP 헤더의 이름입니다.</param>
      <param name="headerValue">HTTP 헤더의 값입니다.</param>
    </member>
  </members>
</doc>